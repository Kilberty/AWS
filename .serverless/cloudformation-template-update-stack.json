{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "FuncoesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-Funcoes"
      }
    },
    "AtualizarFuncoesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-atualizarFuncoes"
      }
    },
    "IdFuncoesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-idFuncoes"
      }
    },
    "ExcluirFuncoesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncoes"
      }
    },
    "InserirFuncoesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-inserirFuncoes"
      }
    },
    "FuncionariosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-Funcionarios"
      }
    },
    "EditarFuncionariosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-editarFuncionarios"
      }
    },
    "CadastrarFuncionariosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-cadastrarFuncionarios"
      }
    },
    "FiltrarFuncionariosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-filtrarFuncionarios"
      }
    },
    "ExcluirFuncionarioLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncionario"
      }
    },
    "IdFuncionariosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-idFuncionarios"
      }
    },
    "RegistrarUsuarioLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-RegistrarUsuario"
      }
    },
    "ValidarUsuarioLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-ValidarUsuario"
      }
    },
    "UserEmpresaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-userEmpresa"
      }
    },
    "CadastrarUserEmpresaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-cadastrarUserEmpresa"
      }
    },
    "LoginLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-Login"
      }
    },
    "LogoutLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-Logout"
      }
    },
    "BuscarPontoLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-buscarPonto"
      }
    },
    "LoginPontoLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-loginPonto"
      }
    },
    "BaterPontoLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-baterPonto"
      }
    },
    "PontoFacialLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-PontoFacial"
      }
    },
    "PontoFuncionarioLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-PontoFuncionario"
      }
    },
    "PontoAjustarLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-PontoAjustar"
      }
    },
    "PontoHorarioAjustarLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-PontoHorarioAjustar"
      }
    },
    "EmpresaInfoLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-empresaInfo"
      }
    },
    "EditarEmpresaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-editarEmpresa"
      }
    },
    "RelatorioPontoLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Backend-dev-relatorioPonto"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "Backend",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:AdminInitiateAuth"
                  ],
                  "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "Backend",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "FuncoesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/funcoes/listarFuncoes.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-Funcoes",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "FuncoesLogGroup"
      ]
    },
    "AtualizarFuncoesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/funcoes/editarFuncao.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-atualizarFuncoes",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "AtualizarFuncoesLogGroup"
      ]
    },
    "IdFuncoesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/funcoes/idFuncao.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-idFuncoes",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "IdFuncoesLogGroup"
      ]
    },
    "ExcluirFuncoesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/funcoes/excluirFuncao.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-excluirFuncoes",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "ExcluirFuncoesLogGroup"
      ]
    },
    "InserirFuncoesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/funcoes/inserirFuncao.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-inserirFuncoes",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "InserirFuncoesLogGroup"
      ]
    },
    "FuncionariosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-Funcionarios",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "FuncionariosLogGroup"
      ]
    },
    "EditarFuncionariosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-editarFuncionarios",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "EditarFuncionariosLogGroup"
      ]
    },
    "CadastrarFuncionariosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-cadastrarFuncionarios",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "CadastrarFuncionariosLogGroup"
      ]
    },
    "FiltrarFuncionariosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-filtrarFuncionarios",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "FiltrarFuncionariosLogGroup"
      ]
    },
    "ExcluirFuncionarioLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-excluirFuncionario",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "ExcluirFuncionarioLogGroup"
      ]
    },
    "IdFuncionariosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Funcionarios/idFuncionarios.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-idFuncionarios",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "IdFuncionariosLogGroup"
      ]
    },
    "RegistrarUsuarioLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/users/registro.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-RegistrarUsuario",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "RegistrarUsuarioLogGroup"
      ]
    },
    "ValidarUsuarioLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/users/codigoUser.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-ValidarUsuario",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "ValidarUsuarioLogGroup"
      ]
    },
    "UserEmpresaLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/users/empresa.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-userEmpresa",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "UserEmpresaLogGroup"
      ]
    },
    "CadastrarUserEmpresaLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/users/usuarioEmpresa.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-cadastrarUserEmpresa",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "CadastrarUserEmpresaLogGroup"
      ]
    },
    "LoginLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/users/login.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-Login",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "LoginLogGroup"
      ]
    },
    "LogoutLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/users/login.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-Logout",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "LogoutLogGroup"
      ]
    },
    "BuscarPontoLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Ponto/buscarPonto.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-buscarPonto",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "BuscarPontoLogGroup"
      ]
    },
    "LoginPontoLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/users/loginPonto.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-loginPonto",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "LoginPontoLogGroup"
      ]
    },
    "BaterPontoLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Ponto/baterPonto.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-baterPonto",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "BaterPontoLogGroup"
      ]
    },
    "PontoFacialLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Ponto/baterPontoFacial.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-PontoFacial",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "PontoFacialLogGroup"
      ]
    },
    "PontoFuncionarioLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Ponto/identificarFuncionario.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-PontoFuncionario",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "PontoFuncionarioLogGroup"
      ]
    },
    "PontoAjustarLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-PontoAjustar",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "PontoAjustarLogGroup"
      ]
    },
    "PontoHorarioAjustarLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-PontoHorarioAjustar",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "PontoHorarioAjustarLogGroup"
      ]
    },
    "EmpresaInfoLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Empresa/buscarEmpresa.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-empresaInfo",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "EmpresaInfoLogGroup"
      ]
    },
    "EditarEmpresaLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Empresa/editarEmpresa.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-editarEmpresa",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "EditarEmpresaLogGroup"
      ]
    },
    "RelatorioPontoLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
        },
        "Handler": "src/handlers/Relatorios/relatorioPonto.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Backend-dev-relatorioPonto",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "ujG5Kq1kMGWA6qqoTiQ84qr2ypspxJ9yqOsK57Ptk2UHbEOKRKt",
            "DB_HOST": "193.203.175.60",
            "DB_USER": "u945487164_Kilberty",
            "DB_PWD": "Kilberty32316943",
            "DB_PORT": "3306",
            "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
            "CLIENT_SECRET": "edus8lq5agjj06cfuc39es5cmfntldoedel18sfmgls8b2fepv3",
            "POOL_ID": "sa-east-1_JDeOso4LH",
            "ORIGIN": "http://localhost:5173",
            "NODE_PATH": "./:/opt/node20/node_modules"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
        ]
      },
      "DependsOn": [
        "RelatorioPontoLogGroup"
      ]
    },
    "FuncoesLambdaVersionTnVvPyEhwZW0o86uwrLs1fxp2oGXAEfUKLvaoXYM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FuncoesLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "AtualizarFuncoesLambdaVersionXIaGTpv5yH5TT4t5jEFaf1MggZbvD7ZEaKrS7UU90Q0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AtualizarFuncoesLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "IdFuncoesLambdaVersionYfMStapb8Bq4wliNGkv3QDWnM9R5dAB83QVo9d9bY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "IdFuncoesLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "ExcluirFuncoesLambdaVersionsNMvWbw7ZUNtVViEkI1fUsTXScxwgPoZITuCxXkE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ExcluirFuncoesLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "InserirFuncoesLambdaVersionZPgSLrJMi3pL9dnoqmI5f0Hkp2XbmtPjyBsVzabEl2A": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "InserirFuncoesLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "FuncionariosLambdaVersionFgrDj4Q82EOjZ9GExk4j4CD8Lc8ggAksAh1XCogfJY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FuncionariosLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "EditarFuncionariosLambdaVersionSTAOpU47okmWPajscBbwEv5I5SZU7vzbQKQ8xdr8s": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "EditarFuncionariosLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "CadastrarFuncionariosLambdaVersionrjNwwCFeTcojCN9YkROycZQaVQdTUeQ2Mzk3Flays": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CadastrarFuncionariosLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "FiltrarFuncionariosLambdaVersionZbteOj8WGp3Az42rKoTHbwV8Dx2mW9z7aWUxbKzuc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FiltrarFuncionariosLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "ExcluirFuncionarioLambdaVersionBQGRF324qCvoEguJPCYlN91vx2ZEUHi9Kv6MONrpc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ExcluirFuncionarioLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "IdFuncionariosLambdaVersionaPgihmoixFvEK5Lu5kUSk0ZKYFlyVw3OPs9vrcU0A": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "IdFuncionariosLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "RegistrarUsuarioLambdaVersionEGjVWeXW4pwpad7j3su5LsVj8qH5HUWoSnTB6J21WX0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RegistrarUsuarioLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "ValidarUsuarioLambdaVersionNRQswq6l9aRtOvS0xO8kAqmFZGeAADOFXILNURhj1dg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ValidarUsuarioLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "UserEmpresaLambdaVersionHC3q6VrNZcVMXeIG0AIXR42l0KTXj17qQykRVmzE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UserEmpresaLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "CadastrarUserEmpresaLambdaVersionT1pVLU7pMuwpQ08EFmRtpATuQEZSyBqwikRHT9pih4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CadastrarUserEmpresaLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "LoginLambdaVersionOD4gx6OkiVJUP2PYhcnKaghKqhaPynk0BOadmWkdgA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LoginLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "LogoutLambdaVersionOUFObe9jYqtbYRk9jcvruq2svvb8ZZzarJosdlHbXk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LogoutLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "BuscarPontoLambdaVersionuG6mSJ7J44RkIo5675lnGnlpfKMUcT5hUM2AOG60E": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "BuscarPontoLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "LoginPontoLambdaVersioniJwCI2UYv3LFuGjP1aznbi0YtvbtfGOjjBSfugfxRc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LoginPontoLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "BaterPontoLambdaVersion3crQCwHWbOVFeh4lzlkkW0p2Nov4m1MUcTOCq3VHWA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "BaterPontoLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "PontoFacialLambdaVersionHc1b9J7NyP0yk3eMa83y94tEnlR2cobSBVCRU2HzyAc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PontoFacialLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "PontoFuncionarioLambdaVersionOUNGAhZnWcmGYTKMP2xS8JaGCGaVxKsH3TaW7oCUQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PontoFuncionarioLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "PontoAjustarLambdaVersionJqCrSZqADtRl3KVFI0TIPBcrt0qIiQOdYg1b5rUM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PontoAjustarLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "PontoHorarioAjustarLambdaVersion19xddoRUMJ4SZi0pJGNS7ULbgdA00oWPk3WeWzUVdpM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PontoHorarioAjustarLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "EmpresaInfoLambdaVersionI2Lbb1mJ5qabVWKx361zcj2Yvv4BMCcLMYgKFeuuGo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "EmpresaInfoLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "EditarEmpresaLambdaVersionJn6tmoF4NXZ4Uphc0KqeCg4oDiT2K4PjJd8x4PrmB0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "EditarEmpresaLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "RelatorioPontoLambdaVersion0ILvCUqkCmNrAiGK07h0xqPWGa7RADCnYxsz8dZRw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RelatorioPontoLambdaFunction"
        },
        "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-Backend",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceFuncoes": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "Funcoes",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncoesListar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncoes"
        },
        "PathPart": "Listar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncoesEditar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncoes"
        },
        "PathPart": "Editar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncoesInfo": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncoes"
        },
        "PathPart": "Info",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncoesExcluir": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncoes"
        },
        "PathPart": "Excluir",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncoesInserir": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncoes"
        },
        "PathPart": "Inserir",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncionarios": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "Funcionarios",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncionariosListar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncionarios"
        },
        "PathPart": "Listar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncionariosIdVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncionarios"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncionariosIdVarEditar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncionariosIdVar"
        },
        "PathPart": "editar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncionariosIdVarExcluir": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncionariosIdVar"
        },
        "PathPart": "excluir",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncionariosCadastrar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncionarios"
        },
        "PathPart": "Cadastrar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceFuncionariosFiltrar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceFuncionarios"
        },
        "PathPart": "Filtrar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceUser": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "User",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceUserAdd": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceUser"
        },
        "PathPart": "Add",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceUserValidar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceUser"
        },
        "PathPart": "Validar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceUserEmpresa": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceUser"
        },
        "PathPart": "Empresa",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceUserEmail": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceUser"
        },
        "PathPart": "Email",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceUserLogin": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceUser"
        },
        "PathPart": "Login",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceUserLogout": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceUser"
        },
        "PathPart": "Logout",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceUserLoginponto": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceUser"
        },
        "PathPart": "loginPonto",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePonto": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "Ponto",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePontoBuscar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourcePonto"
        },
        "PathPart": "Buscar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePontoRegistrar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourcePonto"
        },
        "PathPart": "Registrar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePontoRegistrarfacial": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourcePonto"
        },
        "PathPart": "RegistrarFacial",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePontoIdentificar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourcePonto"
        },
        "PathPart": "Identificar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePontoAjustardia": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourcePonto"
        },
        "PathPart": "AjustarDia",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePontoAjustarhorario": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourcePonto"
        },
        "PathPart": "AjustarHorario",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceEmpresa": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "Empresa",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceEmpresaInfo": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceEmpresa"
        },
        "PathPart": "Info",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceEmpresaEditar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceEmpresa"
        },
        "PathPart": "Editar",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceRelatorio": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "Relatorio",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceRelatorioPonto": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceRelatorio"
        },
        "PathPart": "Ponto",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncoesListarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncoesListar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncoesEditarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncoesEditar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncoesInfoOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncoesInfo"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncoesExcluirOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncoesExcluir"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncoesInserirOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncoesInserir"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncionariosListarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosListar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncionariosIdVarEditarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PATCH'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncionariosCadastrarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosCadastrar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncionariosFiltrarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosFiltrar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncionariosIdVarExcluirOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodUserAddOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserAdd"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodUserValidarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserValidar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodUserEmpresaOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserEmpresa"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodUserEmailOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserEmail"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodUserLoginOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserLogin"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodUserLogoutOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserLogout"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodPontoBuscarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoBuscar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodUserLoginpontoOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserLoginponto"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodPontoRegistrarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoRegistrar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodPontoRegistrarfacialOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoRegistrarfacial"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodPontoIdentificarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoIdentificar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodPontoAjustardiaOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoAjustardia"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodPontoAjustarhorarioOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoAjustarhorario"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodEmpresaInfoOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceEmpresaInfo"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodEmpresaEditarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceEmpresaEditar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodRelatorioPontoOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceRelatorioPonto"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodFuncoesListarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncoesListar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "FuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "FuncoesLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodFuncoesEditarPatch": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncoesEditar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AtualizarFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AtualizarFuncoesLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodFuncoesInfoGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncoesInfo"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "IdFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "IdFuncoesLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodFuncoesExcluirDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncoesExcluir"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ExcluirFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ExcluirFuncoesLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodFuncoesInserirPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncoesInserir"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "InserirFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "InserirFuncoesLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodFuncionariosListarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosListar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "FuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "FuncionariosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodFuncionariosIdVarEditarPatch": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "EditarFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "EditarFuncionariosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodFuncionariosCadastrarPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosCadastrar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CadastrarFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CadastrarFuncionariosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodFuncionariosFiltrarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosFiltrar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "FiltrarFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "FiltrarFuncionariosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodFuncionariosIdVarExcluirDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ExcluirFuncionarioLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ExcluirFuncionarioLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodFuncionariosIdVarEditarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "IdFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "IdFuncionariosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodUserAddPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserAdd"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RegistrarUsuarioLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "RegistrarUsuarioLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodUserValidarPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserValidar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ValidarUsuarioLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ValidarUsuarioLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodUserEmpresaGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserEmpresa"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UserEmpresaLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UserEmpresaLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodUserEmailPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserEmail"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CadastrarUserEmpresaLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CadastrarUserEmpresaLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodUserLoginPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserLogin"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LoginLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "LoginLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodUserLogoutPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserLogout"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LogoutLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "LogoutLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPontoBuscarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoBuscar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BuscarPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "BuscarPontoLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodUserLoginpontoPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceUserLoginponto"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LoginPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "LoginPontoLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPontoRegistrarPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoRegistrar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BaterPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "BaterPontoLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPontoRegistrarfacialPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoRegistrarfacial"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PontoFacialLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "PontoFacialLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPontoIdentificarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoIdentificar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PontoFuncionarioLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "PontoFuncionarioLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPontoAjustardiaPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoAjustardia"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PontoAjustarLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "PontoAjustarLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPontoAjustarhorarioPatch": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePontoAjustarhorario"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PontoHorarioAjustarLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "PontoHorarioAjustarLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodEmpresaInfoGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceEmpresaInfo"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "EmpresaInfoLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "EmpresaInfoLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodEmpresaEditarPatch": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceEmpresaEditar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "EditarEmpresaLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "EditarEmpresaLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodRelatorioPontoGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRelatorioPonto"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RelatorioPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "RelatorioPontoLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1739483029900": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodFuncoesListarOptions",
        "ApiGatewayMethodFuncoesEditarOptions",
        "ApiGatewayMethodFuncoesInfoOptions",
        "ApiGatewayMethodFuncoesExcluirOptions",
        "ApiGatewayMethodFuncoesInserirOptions",
        "ApiGatewayMethodFuncionariosListarOptions",
        "ApiGatewayMethodFuncionariosIdVarEditarOptions",
        "ApiGatewayMethodFuncionariosCadastrarOptions",
        "ApiGatewayMethodFuncionariosFiltrarOptions",
        "ApiGatewayMethodFuncionariosIdVarExcluirOptions",
        "ApiGatewayMethodUserAddOptions",
        "ApiGatewayMethodUserValidarOptions",
        "ApiGatewayMethodUserEmpresaOptions",
        "ApiGatewayMethodUserEmailOptions",
        "ApiGatewayMethodUserLoginOptions",
        "ApiGatewayMethodUserLogoutOptions",
        "ApiGatewayMethodPontoBuscarOptions",
        "ApiGatewayMethodUserLoginpontoOptions",
        "ApiGatewayMethodPontoRegistrarOptions",
        "ApiGatewayMethodPontoRegistrarfacialOptions",
        "ApiGatewayMethodPontoIdentificarOptions",
        "ApiGatewayMethodPontoAjustardiaOptions",
        "ApiGatewayMethodPontoAjustarhorarioOptions",
        "ApiGatewayMethodEmpresaInfoOptions",
        "ApiGatewayMethodEmpresaEditarOptions",
        "ApiGatewayMethodRelatorioPontoOptions",
        "ApiGatewayMethodFuncoesListarGet",
        "ApiGatewayMethodFuncoesEditarPatch",
        "ApiGatewayMethodFuncoesInfoGet",
        "ApiGatewayMethodFuncoesExcluirDelete",
        "ApiGatewayMethodFuncoesInserirPost",
        "ApiGatewayMethodFuncionariosListarGet",
        "ApiGatewayMethodFuncionariosIdVarEditarPatch",
        "ApiGatewayMethodFuncionariosCadastrarPost",
        "ApiGatewayMethodFuncionariosFiltrarGet",
        "ApiGatewayMethodFuncionariosIdVarExcluirDelete",
        "ApiGatewayMethodFuncionariosIdVarEditarGet",
        "ApiGatewayMethodUserAddPost",
        "ApiGatewayMethodUserValidarPost",
        "ApiGatewayMethodUserEmpresaGet",
        "ApiGatewayMethodUserEmailPost",
        "ApiGatewayMethodUserLoginPost",
        "ApiGatewayMethodUserLogoutPost",
        "ApiGatewayMethodPontoBuscarGet",
        "ApiGatewayMethodUserLoginpontoPost",
        "ApiGatewayMethodPontoRegistrarPost",
        "ApiGatewayMethodPontoRegistrarfacialPost",
        "ApiGatewayMethodPontoIdentificarGet",
        "ApiGatewayMethodPontoAjustardiaPost",
        "ApiGatewayMethodPontoAjustarhorarioPatch",
        "ApiGatewayMethodEmpresaInfoGet",
        "ApiGatewayMethodEmpresaEditarPatch",
        "ApiGatewayMethodRelatorioPontoGet"
      ]
    },
    "FuncoesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "FuncoesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AtualizarFuncoesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AtualizarFuncoesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "IdFuncoesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "IdFuncoesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ExcluirFuncoesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ExcluirFuncoesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "InserirFuncoesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "InserirFuncoesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "FuncionariosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "FuncionariosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "EditarFuncionariosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "EditarFuncionariosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CadastrarFuncionariosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CadastrarFuncionariosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "FiltrarFuncionariosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "FiltrarFuncionariosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ExcluirFuncionarioLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ExcluirFuncionarioLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "IdFuncionariosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "IdFuncionariosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "RegistrarUsuarioLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RegistrarUsuarioLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ValidarUsuarioLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ValidarUsuarioLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UserEmpresaLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UserEmpresaLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CadastrarUserEmpresaLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CadastrarUserEmpresaLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "LoginLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LoginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "LogoutLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LogoutLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "BuscarPontoLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "BuscarPontoLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "LoginPontoLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LoginPontoLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "BaterPontoLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "BaterPontoLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "PontoFacialLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PontoFacialLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "PontoFuncionarioLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PontoFuncionarioLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "PontoAjustarLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PontoAjustarLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "PontoHorarioAjustarLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PontoHorarioAjustarLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "EmpresaInfoLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "EmpresaInfoLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "EditarEmpresaLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "EditarEmpresaLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "RelatorioPontoLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RelatorioPontoLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
      "Export": {
        "Name": "sls-Backend-dev-ServerlessDeploymentBucketName"
      }
    },
    "FuncoesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "FuncoesLambdaVersionTnVvPyEhwZW0o86uwrLs1fxp2oGXAEfUKLvaoXYM"
      },
      "Export": {
        "Name": "sls-Backend-dev-FuncoesLambdaFunctionQualifiedArn"
      }
    },
    "AtualizarFuncoesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AtualizarFuncoesLambdaVersionXIaGTpv5yH5TT4t5jEFaf1MggZbvD7ZEaKrS7UU90Q0"
      },
      "Export": {
        "Name": "sls-Backend-dev-AtualizarFuncoesLambdaFunctionQualifiedArn"
      }
    },
    "IdFuncoesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "IdFuncoesLambdaVersionYfMStapb8Bq4wliNGkv3QDWnM9R5dAB83QVo9d9bY"
      },
      "Export": {
        "Name": "sls-Backend-dev-IdFuncoesLambdaFunctionQualifiedArn"
      }
    },
    "ExcluirFuncoesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ExcluirFuncoesLambdaVersionsNMvWbw7ZUNtVViEkI1fUsTXScxwgPoZITuCxXkE"
      },
      "Export": {
        "Name": "sls-Backend-dev-ExcluirFuncoesLambdaFunctionQualifiedArn"
      }
    },
    "InserirFuncoesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "InserirFuncoesLambdaVersionZPgSLrJMi3pL9dnoqmI5f0Hkp2XbmtPjyBsVzabEl2A"
      },
      "Export": {
        "Name": "sls-Backend-dev-InserirFuncoesLambdaFunctionQualifiedArn"
      }
    },
    "FuncionariosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "FuncionariosLambdaVersionFgrDj4Q82EOjZ9GExk4j4CD8Lc8ggAksAh1XCogfJY"
      },
      "Export": {
        "Name": "sls-Backend-dev-FuncionariosLambdaFunctionQualifiedArn"
      }
    },
    "EditarFuncionariosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "EditarFuncionariosLambdaVersionSTAOpU47okmWPajscBbwEv5I5SZU7vzbQKQ8xdr8s"
      },
      "Export": {
        "Name": "sls-Backend-dev-EditarFuncionariosLambdaFunctionQualifiedArn"
      }
    },
    "CadastrarFuncionariosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CadastrarFuncionariosLambdaVersionrjNwwCFeTcojCN9YkROycZQaVQdTUeQ2Mzk3Flays"
      },
      "Export": {
        "Name": "sls-Backend-dev-CadastrarFuncionariosLambdaFunctionQualifiedArn"
      }
    },
    "FiltrarFuncionariosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "FiltrarFuncionariosLambdaVersionZbteOj8WGp3Az42rKoTHbwV8Dx2mW9z7aWUxbKzuc"
      },
      "Export": {
        "Name": "sls-Backend-dev-FiltrarFuncionariosLambdaFunctionQualifiedArn"
      }
    },
    "ExcluirFuncionarioLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ExcluirFuncionarioLambdaVersionBQGRF324qCvoEguJPCYlN91vx2ZEUHi9Kv6MONrpc"
      },
      "Export": {
        "Name": "sls-Backend-dev-ExcluirFuncionarioLambdaFunctionQualifiedArn"
      }
    },
    "IdFuncionariosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "IdFuncionariosLambdaVersionaPgihmoixFvEK5Lu5kUSk0ZKYFlyVw3OPs9vrcU0A"
      },
      "Export": {
        "Name": "sls-Backend-dev-IdFuncionariosLambdaFunctionQualifiedArn"
      }
    },
    "RegistrarUsuarioLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RegistrarUsuarioLambdaVersionEGjVWeXW4pwpad7j3su5LsVj8qH5HUWoSnTB6J21WX0"
      },
      "Export": {
        "Name": "sls-Backend-dev-RegistrarUsuarioLambdaFunctionQualifiedArn"
      }
    },
    "ValidarUsuarioLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ValidarUsuarioLambdaVersionNRQswq6l9aRtOvS0xO8kAqmFZGeAADOFXILNURhj1dg"
      },
      "Export": {
        "Name": "sls-Backend-dev-ValidarUsuarioLambdaFunctionQualifiedArn"
      }
    },
    "UserEmpresaLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UserEmpresaLambdaVersionHC3q6VrNZcVMXeIG0AIXR42l0KTXj17qQykRVmzE"
      },
      "Export": {
        "Name": "sls-Backend-dev-UserEmpresaLambdaFunctionQualifiedArn"
      }
    },
    "CadastrarUserEmpresaLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CadastrarUserEmpresaLambdaVersionT1pVLU7pMuwpQ08EFmRtpATuQEZSyBqwikRHT9pih4"
      },
      "Export": {
        "Name": "sls-Backend-dev-CadastrarUserEmpresaLambdaFunctionQualifiedArn"
      }
    },
    "LoginLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LoginLambdaVersionOD4gx6OkiVJUP2PYhcnKaghKqhaPynk0BOadmWkdgA"
      },
      "Export": {
        "Name": "sls-Backend-dev-LoginLambdaFunctionQualifiedArn"
      }
    },
    "LogoutLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LogoutLambdaVersionOUFObe9jYqtbYRk9jcvruq2svvb8ZZzarJosdlHbXk"
      },
      "Export": {
        "Name": "sls-Backend-dev-LogoutLambdaFunctionQualifiedArn"
      }
    },
    "BuscarPontoLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "BuscarPontoLambdaVersionuG6mSJ7J44RkIo5675lnGnlpfKMUcT5hUM2AOG60E"
      },
      "Export": {
        "Name": "sls-Backend-dev-BuscarPontoLambdaFunctionQualifiedArn"
      }
    },
    "LoginPontoLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LoginPontoLambdaVersioniJwCI2UYv3LFuGjP1aznbi0YtvbtfGOjjBSfugfxRc"
      },
      "Export": {
        "Name": "sls-Backend-dev-LoginPontoLambdaFunctionQualifiedArn"
      }
    },
    "BaterPontoLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "BaterPontoLambdaVersion3crQCwHWbOVFeh4lzlkkW0p2Nov4m1MUcTOCq3VHWA"
      },
      "Export": {
        "Name": "sls-Backend-dev-BaterPontoLambdaFunctionQualifiedArn"
      }
    },
    "PontoFacialLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PontoFacialLambdaVersionHc1b9J7NyP0yk3eMa83y94tEnlR2cobSBVCRU2HzyAc"
      },
      "Export": {
        "Name": "sls-Backend-dev-PontoFacialLambdaFunctionQualifiedArn"
      }
    },
    "PontoFuncionarioLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PontoFuncionarioLambdaVersionOUNGAhZnWcmGYTKMP2xS8JaGCGaVxKsH3TaW7oCUQ"
      },
      "Export": {
        "Name": "sls-Backend-dev-PontoFuncionarioLambdaFunctionQualifiedArn"
      }
    },
    "PontoAjustarLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PontoAjustarLambdaVersionJqCrSZqADtRl3KVFI0TIPBcrt0qIiQOdYg1b5rUM"
      },
      "Export": {
        "Name": "sls-Backend-dev-PontoAjustarLambdaFunctionQualifiedArn"
      }
    },
    "PontoHorarioAjustarLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PontoHorarioAjustarLambdaVersion19xddoRUMJ4SZi0pJGNS7ULbgdA00oWPk3WeWzUVdpM"
      },
      "Export": {
        "Name": "sls-Backend-dev-PontoHorarioAjustarLambdaFunctionQualifiedArn"
      }
    },
    "EmpresaInfoLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "EmpresaInfoLambdaVersionI2Lbb1mJ5qabVWKx361zcj2Yvv4BMCcLMYgKFeuuGo"
      },
      "Export": {
        "Name": "sls-Backend-dev-EmpresaInfoLambdaFunctionQualifiedArn"
      }
    },
    "EditarEmpresaLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "EditarEmpresaLambdaVersionJn6tmoF4NXZ4Uphc0KqeCg4oDiT2K4PjJd8x4PrmB0"
      },
      "Export": {
        "Name": "sls-Backend-dev-EditarEmpresaLambdaFunctionQualifiedArn"
      }
    },
    "RelatorioPontoLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RelatorioPontoLambdaVersion0ILvCUqkCmNrAiGK07h0xqPWGa7RADCnYxsz8dZRw"
      },
      "Export": {
        "Name": "sls-Backend-dev-RelatorioPontoLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-Backend-dev-ServiceEndpoint"
      }
    }
  }
}