{
  "C:\\APIS\\Serverless\\BACKEND\\serverless.yml": {
    "versionFramework": "4.6.2",
    "servicePath": "C:\\APIS\\Serverless\\BACKEND\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "Backend",
      "useDotenv": true,
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "sa-east-1",
        "environment": {
          "JWT_SECRET": "<REDACTED>",
          "DB_HOST": "193.203.175.60",
          "DB_USER": "u945487164_Kilberty",
          "DB_PWD": "Kilberty32316943",
          "DB_PORT": "3306",
          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
          "CLIENT_SECRET": "<REDACTED>",
          "POOL_ID": "sa-east-1_JDeOso4LH",
          "ORIGIN": "http://localhost:5173",
          "NODE_PATH": "./:/opt/node20/node_modules"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "cognito-idp:AdminInitiateAuth"
            ],
            "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "FuncoesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-Funcoes"
              }
            },
            "AtualizarFuncoesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-atualizarFuncoes"
              }
            },
            "IdFuncoesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-idFuncoes"
              }
            },
            "ExcluirFuncoesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncoes"
              }
            },
            "InserirFuncoesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-inserirFuncoes"
              }
            },
            "FuncionariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-Funcionarios"
              }
            },
            "EditarFuncionariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-editarFuncionarios"
              }
            },
            "CadastrarFuncionariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-cadastrarFuncionarios"
              }
            },
            "FiltrarFuncionariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-filtrarFuncionarios"
              }
            },
            "ExcluirFuncionarioLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncionario"
              }
            },
            "IdFuncionariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-idFuncionarios"
              }
            },
            "RegistrarUsuarioLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-RegistrarUsuario"
              }
            },
            "ValidarUsuarioLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-ValidarUsuario"
              }
            },
            "UserEmpresaLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-userEmpresa"
              }
            },
            "CadastrarUserEmpresaLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-cadastrarUserEmpresa"
              }
            },
            "LoginLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-Login"
              }
            },
            "LogoutLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-Logout"
              }
            },
            "BuscarPontoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-buscarPonto"
              }
            },
            "LoginPontoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-loginPonto"
              }
            },
            "BaterPontoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-baterPonto"
              }
            },
            "PontoFacialLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-PontoFacial"
              }
            },
            "PontoFuncionarioLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-PontoFuncionario"
              }
            },
            "PontoAjustarLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-PontoAjustar"
              }
            },
            "PontoHorarioAjustarLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-PontoHorarioAjustar"
              }
            },
            "EmpresaInfoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-empresaInfo"
              }
            },
            "EditarEmpresaLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-editarEmpresa"
              }
            },
            "RelatorioPontoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-relatorioPonto"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "Backend",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "cognito-idp:AdminInitiateAuth"
                          ],
                          "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "Backend",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "FuncoesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/funcoes/listarFuncoes.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-Funcoes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "FuncoesLogGroup"
              ]
            },
            "AtualizarFuncoesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/funcoes/editarFuncao.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-atualizarFuncoes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "AtualizarFuncoesLogGroup"
              ]
            },
            "IdFuncoesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/funcoes/idFuncao.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-idFuncoes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "IdFuncoesLogGroup"
              ]
            },
            "ExcluirFuncoesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/funcoes/excluirFuncao.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-excluirFuncoes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "ExcluirFuncoesLogGroup"
              ]
            },
            "InserirFuncoesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/funcoes/inserirFuncao.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-inserirFuncoes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "InserirFuncoesLogGroup"
              ]
            },
            "FuncionariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-Funcionarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "FuncionariosLogGroup"
              ]
            },
            "EditarFuncionariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-editarFuncionarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "EditarFuncionariosLogGroup"
              ]
            },
            "CadastrarFuncionariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-cadastrarFuncionarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "CadastrarFuncionariosLogGroup"
              ]
            },
            "FiltrarFuncionariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-filtrarFuncionarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "FiltrarFuncionariosLogGroup"
              ]
            },
            "ExcluirFuncionarioLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-excluirFuncionario",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "ExcluirFuncionarioLogGroup"
              ]
            },
            "IdFuncionariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/idFuncionarios.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-idFuncionarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "IdFuncionariosLogGroup"
              ]
            },
            "RegistrarUsuarioLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/users/registro.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-RegistrarUsuario",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "RegistrarUsuarioLogGroup"
              ]
            },
            "ValidarUsuarioLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/users/codigoUser.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-ValidarUsuario",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "ValidarUsuarioLogGroup"
              ]
            },
            "UserEmpresaLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/users/empresa.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-userEmpresa",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "UserEmpresaLogGroup"
              ]
            },
            "CadastrarUserEmpresaLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/users/usuarioEmpresa.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-cadastrarUserEmpresa",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "CadastrarUserEmpresaLogGroup"
              ]
            },
            "LoginLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/users/login.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-Login",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "LoginLogGroup"
              ]
            },
            "LogoutLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/users/login.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-Logout",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "LogoutLogGroup"
              ]
            },
            "BuscarPontoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/buscarPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-buscarPonto",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "BuscarPontoLogGroup"
              ]
            },
            "LoginPontoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/users/loginPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-loginPonto",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "LoginPontoLogGroup"
              ]
            },
            "BaterPontoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/baterPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-baterPonto",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "BaterPontoLogGroup"
              ]
            },
            "PontoFacialLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/baterPontoFacial.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-PontoFacial",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "PontoFacialLogGroup"
              ]
            },
            "PontoFuncionarioLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/identificarFuncionario.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-PontoFuncionario",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "PontoFuncionarioLogGroup"
              ]
            },
            "PontoAjustarLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-PontoAjustar",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "PontoAjustarLogGroup"
              ]
            },
            "PontoHorarioAjustarLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-PontoHorarioAjustar",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "PontoHorarioAjustarLogGroup"
              ]
            },
            "EmpresaInfoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Empresa/buscarEmpresa.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-empresaInfo",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "EmpresaInfoLogGroup"
              ]
            },
            "EditarEmpresaLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Empresa/editarEmpresa.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-editarEmpresa",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "EditarEmpresaLogGroup"
              ]
            },
            "RelatorioPontoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
                },
                "Handler": "src/handlers/Relatorios/relatorioPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-relatorioPonto",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "RelatorioPontoLogGroup"
              ]
            },
            "FuncoesLambdaVersionTnVvPyEhwZW0o86uwrLs1fxp2oGXAEfUKLvaoXYM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "FuncoesLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "AtualizarFuncoesLambdaVersionXIaGTpv5yH5TT4t5jEFaf1MggZbvD7ZEaKrS7UU90Q0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AtualizarFuncoesLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "IdFuncoesLambdaVersionYfMStapb8Bq4wliNGkv3QDWnM9R5dAB83QVo9d9bY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "IdFuncoesLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "ExcluirFuncoesLambdaVersionsNMvWbw7ZUNtVViEkI1fUsTXScxwgPoZITuCxXkE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ExcluirFuncoesLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "InserirFuncoesLambdaVersionZPgSLrJMi3pL9dnoqmI5f0Hkp2XbmtPjyBsVzabEl2A": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "InserirFuncoesLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "FuncionariosLambdaVersionFgrDj4Q82EOjZ9GExk4j4CD8Lc8ggAksAh1XCogfJY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "FuncionariosLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "EditarFuncionariosLambdaVersionSTAOpU47okmWPajscBbwEv5I5SZU7vzbQKQ8xdr8s": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "EditarFuncionariosLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "CadastrarFuncionariosLambdaVersionrjNwwCFeTcojCN9YkROycZQaVQdTUeQ2Mzk3Flays": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CadastrarFuncionariosLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "FiltrarFuncionariosLambdaVersionZbteOj8WGp3Az42rKoTHbwV8Dx2mW9z7aWUxbKzuc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "FiltrarFuncionariosLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "ExcluirFuncionarioLambdaVersionBQGRF324qCvoEguJPCYlN91vx2ZEUHi9Kv6MONrpc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ExcluirFuncionarioLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "IdFuncionariosLambdaVersionaPgihmoixFvEK5Lu5kUSk0ZKYFlyVw3OPs9vrcU0A": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "IdFuncionariosLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "RegistrarUsuarioLambdaVersionEGjVWeXW4pwpad7j3su5LsVj8qH5HUWoSnTB6J21WX0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "RegistrarUsuarioLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "ValidarUsuarioLambdaVersionNRQswq6l9aRtOvS0xO8kAqmFZGeAADOFXILNURhj1dg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ValidarUsuarioLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "UserEmpresaLambdaVersionHC3q6VrNZcVMXeIG0AIXR42l0KTXj17qQykRVmzE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UserEmpresaLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "CadastrarUserEmpresaLambdaVersionT1pVLU7pMuwpQ08EFmRtpATuQEZSyBqwikRHT9pih4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CadastrarUserEmpresaLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "LoginLambdaVersionOD4gx6OkiVJUP2PYhcnKaghKqhaPynk0BOadmWkdgA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LoginLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "LogoutLambdaVersionOUFObe9jYqtbYRk9jcvruq2svvb8ZZzarJosdlHbXk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LogoutLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "BuscarPontoLambdaVersionuG6mSJ7J44RkIo5675lnGnlpfKMUcT5hUM2AOG60E": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "BuscarPontoLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "LoginPontoLambdaVersioniJwCI2UYv3LFuGjP1aznbi0YtvbtfGOjjBSfugfxRc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LoginPontoLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "BaterPontoLambdaVersion3crQCwHWbOVFeh4lzlkkW0p2Nov4m1MUcTOCq3VHWA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "BaterPontoLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "PontoFacialLambdaVersionHc1b9J7NyP0yk3eMa83y94tEnlR2cobSBVCRU2HzyAc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PontoFacialLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "PontoFuncionarioLambdaVersionOUNGAhZnWcmGYTKMP2xS8JaGCGaVxKsH3TaW7oCUQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PontoFuncionarioLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "PontoAjustarLambdaVersionJqCrSZqADtRl3KVFI0TIPBcrt0qIiQOdYg1b5rUM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PontoAjustarLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "PontoHorarioAjustarLambdaVersion19xddoRUMJ4SZi0pJGNS7ULbgdA00oWPk3WeWzUVdpM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PontoHorarioAjustarLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "EmpresaInfoLambdaVersionI2Lbb1mJ5qabVWKx361zcj2Yvv4BMCcLMYgKFeuuGo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "EmpresaInfoLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "EditarEmpresaLambdaVersionJn6tmoF4NXZ4Uphc0KqeCg4oDiT2K4PjJd8x4PrmB0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "EditarEmpresaLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "RelatorioPontoLambdaVersion0ILvCUqkCmNrAiGK07h0xqPWGa7RADCnYxsz8dZRw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "RelatorioPontoLambdaFunction"
                },
                "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-Backend",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceFuncoes": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "Funcoes",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncoesListar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncoes"
                },
                "PathPart": "Listar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncoesEditar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncoes"
                },
                "PathPart": "Editar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncoesInfo": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncoes"
                },
                "PathPart": "Info",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncoesExcluir": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncoes"
                },
                "PathPart": "Excluir",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncoesInserir": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncoes"
                },
                "PathPart": "Inserir",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionarios": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "Funcionarios",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosListar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionarios"
                },
                "PathPart": "Listar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionarios"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosIdVarEditar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVar"
                },
                "PathPart": "editar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosIdVarExcluir": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVar"
                },
                "PathPart": "excluir",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosCadastrar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionarios"
                },
                "PathPart": "Cadastrar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosFiltrar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionarios"
                },
                "PathPart": "Filtrar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUser": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "User",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserAdd": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Add",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserValidar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Validar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserEmpresa": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Empresa",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserEmail": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Email",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserLogin": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Login",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserLogout": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Logout",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserLoginponto": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "loginPonto",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePonto": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "Ponto",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoBuscar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "Buscar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoRegistrar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "Registrar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoRegistrarfacial": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "RegistrarFacial",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoIdentificar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "Identificar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoAjustardia": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "AjustarDia",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoAjustarhorario": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "AjustarHorario",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceEmpresa": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "Empresa",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceEmpresaInfo": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceEmpresa"
                },
                "PathPart": "Info",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceEmpresaEditar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceEmpresa"
                },
                "PathPart": "Editar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceRelatorio": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "Relatorio",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceRelatorioPonto": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceRelatorio"
                },
                "PathPart": "Ponto",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesListarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesListar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesEditarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesInfoOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesInfo"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesExcluirOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesExcluir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesInserirOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesInserir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncionariosListarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosListar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncionariosIdVarEditarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PATCH'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncionariosCadastrarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosCadastrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncionariosFiltrarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosFiltrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncionariosIdVarExcluirOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserAddOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserAdd"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserValidarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserValidar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserEmpresaOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserEmpresa"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserEmailOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserEmail"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserLoginOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLogin"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserLogoutOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLogout"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoBuscarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoBuscar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserLoginpontoOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLoginponto"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoRegistrarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoRegistrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoRegistrarfacialOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoRegistrarfacial"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoIdentificarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoIdentificar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoAjustardiaOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoAjustardia"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoAjustarhorarioOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoAjustarhorario"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodEmpresaInfoOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEmpresaInfo"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodEmpresaEditarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEmpresaEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodRelatorioPontoOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceRelatorioPonto"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesListarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesListar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "FuncoesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "FuncoesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncoesEditarPatch": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PATCH",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AtualizarFuncoesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AtualizarFuncoesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncoesInfoGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesInfo"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "IdFuncoesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "IdFuncoesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncoesExcluirDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesExcluir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ExcluirFuncoesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ExcluirFuncoesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncoesInserirPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesInserir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "InserirFuncoesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "InserirFuncoesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosListarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosListar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "FuncionariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "FuncionariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosIdVarEditarPatch": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PATCH",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "EditarFuncionariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "EditarFuncionariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosCadastrarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosCadastrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CadastrarFuncionariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CadastrarFuncionariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosFiltrarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosFiltrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "FiltrarFuncionariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "FiltrarFuncionariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosIdVarExcluirDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ExcluirFuncionarioLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ExcluirFuncionarioLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosIdVarEditarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "IdFuncionariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "IdFuncionariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserAddPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserAdd"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RegistrarUsuarioLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "RegistrarUsuarioLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserValidarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserValidar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ValidarUsuarioLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ValidarUsuarioLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserEmpresaGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserEmpresa"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UserEmpresaLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UserEmpresaLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserEmailPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserEmail"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CadastrarUserEmpresaLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CadastrarUserEmpresaLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserLoginPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLogin"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "LoginLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "LoginLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserLogoutPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLogout"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "LogoutLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "LogoutLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoBuscarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoBuscar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "BuscarPontoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "BuscarPontoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserLoginpontoPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLoginponto"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "LoginPontoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "LoginPontoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoRegistrarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoRegistrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "BaterPontoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "BaterPontoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoRegistrarfacialPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoRegistrarfacial"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PontoFacialLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PontoFacialLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoIdentificarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoIdentificar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PontoFuncionarioLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PontoFuncionarioLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoAjustardiaPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoAjustardia"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PontoAjustarLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PontoAjustarLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoAjustarhorarioPatch": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PATCH",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoAjustarhorario"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PontoHorarioAjustarLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PontoHorarioAjustarLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodEmpresaInfoGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEmpresaInfo"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "EmpresaInfoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "EmpresaInfoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodEmpresaEditarPatch": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PATCH",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEmpresaEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "EditarEmpresaLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "EditarEmpresaLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodRelatorioPontoGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceRelatorioPonto"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RelatorioPontoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "RelatorioPontoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1739483029900": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodFuncoesListarOptions",
                "ApiGatewayMethodFuncoesEditarOptions",
                "ApiGatewayMethodFuncoesInfoOptions",
                "ApiGatewayMethodFuncoesExcluirOptions",
                "ApiGatewayMethodFuncoesInserirOptions",
                "ApiGatewayMethodFuncionariosListarOptions",
                "ApiGatewayMethodFuncionariosIdVarEditarOptions",
                "ApiGatewayMethodFuncionariosCadastrarOptions",
                "ApiGatewayMethodFuncionariosFiltrarOptions",
                "ApiGatewayMethodFuncionariosIdVarExcluirOptions",
                "ApiGatewayMethodUserAddOptions",
                "ApiGatewayMethodUserValidarOptions",
                "ApiGatewayMethodUserEmpresaOptions",
                "ApiGatewayMethodUserEmailOptions",
                "ApiGatewayMethodUserLoginOptions",
                "ApiGatewayMethodUserLogoutOptions",
                "ApiGatewayMethodPontoBuscarOptions",
                "ApiGatewayMethodUserLoginpontoOptions",
                "ApiGatewayMethodPontoRegistrarOptions",
                "ApiGatewayMethodPontoRegistrarfacialOptions",
                "ApiGatewayMethodPontoIdentificarOptions",
                "ApiGatewayMethodPontoAjustardiaOptions",
                "ApiGatewayMethodPontoAjustarhorarioOptions",
                "ApiGatewayMethodEmpresaInfoOptions",
                "ApiGatewayMethodEmpresaEditarOptions",
                "ApiGatewayMethodRelatorioPontoOptions",
                "ApiGatewayMethodFuncoesListarGet",
                "ApiGatewayMethodFuncoesEditarPatch",
                "ApiGatewayMethodFuncoesInfoGet",
                "ApiGatewayMethodFuncoesExcluirDelete",
                "ApiGatewayMethodFuncoesInserirPost",
                "ApiGatewayMethodFuncionariosListarGet",
                "ApiGatewayMethodFuncionariosIdVarEditarPatch",
                "ApiGatewayMethodFuncionariosCadastrarPost",
                "ApiGatewayMethodFuncionariosFiltrarGet",
                "ApiGatewayMethodFuncionariosIdVarExcluirDelete",
                "ApiGatewayMethodFuncionariosIdVarEditarGet",
                "ApiGatewayMethodUserAddPost",
                "ApiGatewayMethodUserValidarPost",
                "ApiGatewayMethodUserEmpresaGet",
                "ApiGatewayMethodUserEmailPost",
                "ApiGatewayMethodUserLoginPost",
                "ApiGatewayMethodUserLogoutPost",
                "ApiGatewayMethodPontoBuscarGet",
                "ApiGatewayMethodUserLoginpontoPost",
                "ApiGatewayMethodPontoRegistrarPost",
                "ApiGatewayMethodPontoRegistrarfacialPost",
                "ApiGatewayMethodPontoIdentificarGet",
                "ApiGatewayMethodPontoAjustardiaPost",
                "ApiGatewayMethodPontoAjustarhorarioPatch",
                "ApiGatewayMethodEmpresaInfoGet",
                "ApiGatewayMethodEmpresaEditarPatch",
                "ApiGatewayMethodRelatorioPontoGet"
              ]
            },
            "FuncoesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "FuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "AtualizarFuncoesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AtualizarFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "IdFuncoesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "IdFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ExcluirFuncoesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ExcluirFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "InserirFuncoesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "InserirFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "FuncionariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "FuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "EditarFuncionariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "EditarFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CadastrarFuncionariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CadastrarFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "FiltrarFuncionariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "FiltrarFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ExcluirFuncionarioLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ExcluirFuncionarioLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "IdFuncionariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "IdFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "RegistrarUsuarioLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "RegistrarUsuarioLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ValidarUsuarioLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ValidarUsuarioLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UserEmpresaLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UserEmpresaLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CadastrarUserEmpresaLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CadastrarUserEmpresaLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "LoginLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LoginLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "LogoutLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LogoutLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "BuscarPontoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "BuscarPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "LoginPontoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LoginPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "BaterPontoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "BaterPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PontoFacialLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PontoFacialLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PontoFuncionarioLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PontoFuncionarioLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PontoAjustarLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PontoAjustarLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PontoHorarioAjustarLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PontoHorarioAjustarLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "EmpresaInfoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "EmpresaInfoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "EditarEmpresaLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "EditarEmpresaLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "RelatorioPontoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "RelatorioPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "Export": {
                "Name": "sls-Backend-dev-ServerlessDeploymentBucketName"
              }
            },
            "FuncoesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "FuncoesLambdaVersionTnVvPyEhwZW0o86uwrLs1fxp2oGXAEfUKLvaoXYM"
              },
              "Export": {
                "Name": "sls-Backend-dev-FuncoesLambdaFunctionQualifiedArn"
              }
            },
            "AtualizarFuncoesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AtualizarFuncoesLambdaVersionXIaGTpv5yH5TT4t5jEFaf1MggZbvD7ZEaKrS7UU90Q0"
              },
              "Export": {
                "Name": "sls-Backend-dev-AtualizarFuncoesLambdaFunctionQualifiedArn"
              }
            },
            "IdFuncoesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "IdFuncoesLambdaVersionYfMStapb8Bq4wliNGkv3QDWnM9R5dAB83QVo9d9bY"
              },
              "Export": {
                "Name": "sls-Backend-dev-IdFuncoesLambdaFunctionQualifiedArn"
              }
            },
            "ExcluirFuncoesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ExcluirFuncoesLambdaVersionsNMvWbw7ZUNtVViEkI1fUsTXScxwgPoZITuCxXkE"
              },
              "Export": {
                "Name": "sls-Backend-dev-ExcluirFuncoesLambdaFunctionQualifiedArn"
              }
            },
            "InserirFuncoesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "InserirFuncoesLambdaVersionZPgSLrJMi3pL9dnoqmI5f0Hkp2XbmtPjyBsVzabEl2A"
              },
              "Export": {
                "Name": "sls-Backend-dev-InserirFuncoesLambdaFunctionQualifiedArn"
              }
            },
            "FuncionariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "FuncionariosLambdaVersionFgrDj4Q82EOjZ9GExk4j4CD8Lc8ggAksAh1XCogfJY"
              },
              "Export": {
                "Name": "sls-Backend-dev-FuncionariosLambdaFunctionQualifiedArn"
              }
            },
            "EditarFuncionariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "EditarFuncionariosLambdaVersionSTAOpU47okmWPajscBbwEv5I5SZU7vzbQKQ8xdr8s"
              },
              "Export": {
                "Name": "sls-Backend-dev-EditarFuncionariosLambdaFunctionQualifiedArn"
              }
            },
            "CadastrarFuncionariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CadastrarFuncionariosLambdaVersionrjNwwCFeTcojCN9YkROycZQaVQdTUeQ2Mzk3Flays"
              },
              "Export": {
                "Name": "sls-Backend-dev-CadastrarFuncionariosLambdaFunctionQualifiedArn"
              }
            },
            "FiltrarFuncionariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "FiltrarFuncionariosLambdaVersionZbteOj8WGp3Az42rKoTHbwV8Dx2mW9z7aWUxbKzuc"
              },
              "Export": {
                "Name": "sls-Backend-dev-FiltrarFuncionariosLambdaFunctionQualifiedArn"
              }
            },
            "ExcluirFuncionarioLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ExcluirFuncionarioLambdaVersionBQGRF324qCvoEguJPCYlN91vx2ZEUHi9Kv6MONrpc"
              },
              "Export": {
                "Name": "sls-Backend-dev-ExcluirFuncionarioLambdaFunctionQualifiedArn"
              }
            },
            "IdFuncionariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "IdFuncionariosLambdaVersionaPgihmoixFvEK5Lu5kUSk0ZKYFlyVw3OPs9vrcU0A"
              },
              "Export": {
                "Name": "sls-Backend-dev-IdFuncionariosLambdaFunctionQualifiedArn"
              }
            },
            "RegistrarUsuarioLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "RegistrarUsuarioLambdaVersionEGjVWeXW4pwpad7j3su5LsVj8qH5HUWoSnTB6J21WX0"
              },
              "Export": {
                "Name": "sls-Backend-dev-RegistrarUsuarioLambdaFunctionQualifiedArn"
              }
            },
            "ValidarUsuarioLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ValidarUsuarioLambdaVersionNRQswq6l9aRtOvS0xO8kAqmFZGeAADOFXILNURhj1dg"
              },
              "Export": {
                "Name": "sls-Backend-dev-ValidarUsuarioLambdaFunctionQualifiedArn"
              }
            },
            "UserEmpresaLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UserEmpresaLambdaVersionHC3q6VrNZcVMXeIG0AIXR42l0KTXj17qQykRVmzE"
              },
              "Export": {
                "Name": "sls-Backend-dev-UserEmpresaLambdaFunctionQualifiedArn"
              }
            },
            "CadastrarUserEmpresaLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CadastrarUserEmpresaLambdaVersionT1pVLU7pMuwpQ08EFmRtpATuQEZSyBqwikRHT9pih4"
              },
              "Export": {
                "Name": "sls-Backend-dev-CadastrarUserEmpresaLambdaFunctionQualifiedArn"
              }
            },
            "LoginLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LoginLambdaVersionOD4gx6OkiVJUP2PYhcnKaghKqhaPynk0BOadmWkdgA"
              },
              "Export": {
                "Name": "sls-Backend-dev-LoginLambdaFunctionQualifiedArn"
              }
            },
            "LogoutLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LogoutLambdaVersionOUFObe9jYqtbYRk9jcvruq2svvb8ZZzarJosdlHbXk"
              },
              "Export": {
                "Name": "sls-Backend-dev-LogoutLambdaFunctionQualifiedArn"
              }
            },
            "BuscarPontoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "BuscarPontoLambdaVersionuG6mSJ7J44RkIo5675lnGnlpfKMUcT5hUM2AOG60E"
              },
              "Export": {
                "Name": "sls-Backend-dev-BuscarPontoLambdaFunctionQualifiedArn"
              }
            },
            "LoginPontoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LoginPontoLambdaVersioniJwCI2UYv3LFuGjP1aznbi0YtvbtfGOjjBSfugfxRc"
              },
              "Export": {
                "Name": "sls-Backend-dev-LoginPontoLambdaFunctionQualifiedArn"
              }
            },
            "BaterPontoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "BaterPontoLambdaVersion3crQCwHWbOVFeh4lzlkkW0p2Nov4m1MUcTOCq3VHWA"
              },
              "Export": {
                "Name": "sls-Backend-dev-BaterPontoLambdaFunctionQualifiedArn"
              }
            },
            "PontoFacialLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PontoFacialLambdaVersionHc1b9J7NyP0yk3eMa83y94tEnlR2cobSBVCRU2HzyAc"
              },
              "Export": {
                "Name": "sls-Backend-dev-PontoFacialLambdaFunctionQualifiedArn"
              }
            },
            "PontoFuncionarioLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PontoFuncionarioLambdaVersionOUNGAhZnWcmGYTKMP2xS8JaGCGaVxKsH3TaW7oCUQ"
              },
              "Export": {
                "Name": "sls-Backend-dev-PontoFuncionarioLambdaFunctionQualifiedArn"
              }
            },
            "PontoAjustarLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PontoAjustarLambdaVersionJqCrSZqADtRl3KVFI0TIPBcrt0qIiQOdYg1b5rUM"
              },
              "Export": {
                "Name": "sls-Backend-dev-PontoAjustarLambdaFunctionQualifiedArn"
              }
            },
            "PontoHorarioAjustarLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PontoHorarioAjustarLambdaVersion19xddoRUMJ4SZi0pJGNS7ULbgdA00oWPk3WeWzUVdpM"
              },
              "Export": {
                "Name": "sls-Backend-dev-PontoHorarioAjustarLambdaFunctionQualifiedArn"
              }
            },
            "EmpresaInfoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "EmpresaInfoLambdaVersionI2Lbb1mJ5qabVWKx361zcj2Yvv4BMCcLMYgKFeuuGo"
              },
              "Export": {
                "Name": "sls-Backend-dev-EmpresaInfoLambdaFunctionQualifiedArn"
              }
            },
            "EditarEmpresaLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "EditarEmpresaLambdaVersionJn6tmoF4NXZ4Uphc0KqeCg4oDiT2K4PjJd8x4PrmB0"
              },
              "Export": {
                "Name": "sls-Backend-dev-EditarEmpresaLambdaFunctionQualifiedArn"
              }
            },
            "RelatorioPontoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "RelatorioPontoLambdaVersion0ILvCUqkCmNrAiGK07h0xqPWGa7RADCnYxsz8dZRw"
              },
              "Export": {
                "Name": "sls-Backend-dev-RelatorioPontoLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-Backend-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "plugins": [
        "serverless-dotenv-plugin",
        "serverless-pseudo-parameters"
      ],
      "functions": {
        "Funcoes": {
          "handler": "src/handlers/funcoes/listarFuncoes.handler",
          "package": {
            "include": [
              "src/handlers/funcoes/listarFuncoes.js",
              "src/services/Funcoes/listarFuncoesService.js",
              "src/database/database.js"
            ]
          },
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "events": [
            {
              "http": {
                "path": "Funcoes/Listar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-Funcoes",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "FuncoesLambdaVersionTnVvPyEhwZW0o86uwrLs1fxp2oGXAEfUKLvaoXYM"
        },
        "atualizarFuncoes": {
          "handler": "src/handlers/funcoes/editarFuncao.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/funcoes/editarFuncao.js",
              "src/services/Funcoes/editarFuncaoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcoes/Editar",
                "method": "patch",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "PATCH"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-atualizarFuncoes",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "AtualizarFuncoesLambdaVersionXIaGTpv5yH5TT4t5jEFaf1MggZbvD7ZEaKrS7UU90Q0"
        },
        "idFuncoes": {
          "handler": "src/handlers/funcoes/idFuncao.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/funcoes/idFuncao.js",
              "src/services/Funcoes/idFuncaoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcoes/Info",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-idFuncoes",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "IdFuncoesLambdaVersionYfMStapb8Bq4wliNGkv3QDWnM9R5dAB83QVo9d9bY"
        },
        "excluirFuncoes": {
          "handler": "src/handlers/funcoes/excluirFuncao.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/funcoes/excluirFuncao.js",
              "src/services/funcoes/excluirFuncaoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcoes/Excluir",
                "method": "delete",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "DELETE"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-excluirFuncoes",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "ExcluirFuncoesLambdaVersionsNMvWbw7ZUNtVViEkI1fUsTXScxwgPoZITuCxXkE"
        },
        "inserirFuncoes": {
          "handler": "src/handlers/funcoes/inserirFuncao.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/funcoes/inserirFuncao.js",
              "src/services/funcoes/inserirFuncaoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcoes/Inserir",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-inserirFuncoes",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "InserirFuncoesLambdaVersionZPgSLrJMi3pL9dnoqmI5f0Hkp2XbmtPjyBsVzabEl2A"
        },
        "Funcionarios": {
          "handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/autocompleteFuncionariosHandler.js",
              "src/services/Funcionarios/autocompleteFuncionarios.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/Listar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-Funcionarios",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "FuncionariosLambdaVersionFgrDj4Q82EOjZ9GExk4j4CD8Lc8ggAksAh1XCogfJY"
        },
        "editarFuncionarios": {
          "handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/editarFuncionarios.js",
              "src/services/Funcionarios/editarFuncionarioService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/{id}/editar",
                "method": "patch",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "PATCH"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-editarFuncionarios",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "EditarFuncionariosLambdaVersionSTAOpU47okmWPajscBbwEv5I5SZU7vzbQKQ8xdr8s"
        },
        "cadastrarFuncionarios": {
          "handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/cadastrarFuncionarios.js",
              "src/services/Funcionarios/cadastrarFuncionariosService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/Cadastrar",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-cadastrarFuncionarios",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CadastrarFuncionariosLambdaVersionrjNwwCFeTcojCN9YkROycZQaVQdTUeQ2Mzk3Flays"
        },
        "filtrarFuncionarios": {
          "handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/listarFuncionarios.js",
              "src/services/Funcionarios/listarFuncionariosService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/Filtrar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-filtrarFuncionarios",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "FiltrarFuncionariosLambdaVersionZbteOj8WGp3Az42rKoTHbwV8Dx2mW9z7aWUxbKzuc"
        },
        "excluirFuncionario": {
          "handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/excluirFuncionarios.js",
              "src/services/Funcionarios/excluirFuncionariosService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/{id}/excluir",
                "method": "delete",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "DELETE"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-excluirFuncionario",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "ExcluirFuncionarioLambdaVersionBQGRF324qCvoEguJPCYlN91vx2ZEUHi9Kv6MONrpc"
        },
        "idFuncionarios": {
          "handler": "src/handlers/Funcionarios/idFuncionarios.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/idFuncionarios.js",
              "src/services/Funcionarios/idFuncionariosService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/{id}/editar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-idFuncionarios",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "IdFuncionariosLambdaVersionaPgihmoixFvEK5Lu5kUSk0ZKYFlyVw3OPs9vrcU0A"
        },
        "RegistrarUsuario": {
          "handler": "src/handlers/users/registro.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/registro.js",
              "src/services/Usuarios/registroService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Add",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-RegistrarUsuario",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "RegistrarUsuarioLambdaVersionEGjVWeXW4pwpad7j3su5LsVj8qH5HUWoSnTB6J21WX0"
        },
        "ValidarUsuario": {
          "handler": "src/handlers/users/codigoUser.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/codigoUser.js",
              "src/services/Usuarios/codigoUserService.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Validar",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-ValidarUsuario",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "ValidarUsuarioLambdaVersionNRQswq6l9aRtOvS0xO8kAqmFZGeAADOFXILNURhj1dg"
        },
        "userEmpresa": {
          "handler": "src/handlers/users/empresa.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/empresa.js",
              "src/services/Usuarios/empresa.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Empresa",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-userEmpresa",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UserEmpresaLambdaVersionHC3q6VrNZcVMXeIG0AIXR42l0KTXj17qQykRVmzE"
        },
        "cadastrarUserEmpresa": {
          "handler": "src/handlers/users/usuarioEmpresa.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/codigoUser.js",
              "src/services/Usuarios/codigoUserService.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Email",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-cadastrarUserEmpresa",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CadastrarUserEmpresaLambdaVersionT1pVLU7pMuwpQ08EFmRtpATuQEZSyBqwikRHT9pih4"
        },
        "Login": {
          "handler": "src/handlers/users/login.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/login.js",
              "src/services/Usuarios/loginService.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Login",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-Login",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "LoginLambdaVersionOD4gx6OkiVJUP2PYhcnKaghKqhaPynk0BOadmWkdgA"
        },
        "Logout": {
          "handler": "src/handlers/users/login.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/login.js",
              "src/services/Usuarios/loginService.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Logout",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-Logout",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "LogoutLambdaVersionOUFObe9jYqtbYRk9jcvruq2svvb8ZZzarJosdlHbXk"
        },
        "buscarPonto": {
          "handler": "src/handlers/Ponto/buscarPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/buscarPonto.js",
              "src/services/Ponto/consultaPontoService.js",
              "src/services/Ponto/jornadaInfoService.js",
              "src/services/Ponto/calculoBancoHoras.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/Buscar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-buscarPonto",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "BuscarPontoLambdaVersionuG6mSJ7J44RkIo5675lnGnlpfKMUcT5hUM2AOG60E"
        },
        "loginPonto": {
          "handler": "src/handlers/users/loginPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/login.js",
              "src/services/Usuarios/loginService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/loginPonto",
                "method": "post",
                "cors": {
                  "origin": "https://registrodepontocontroltek.netlify.app",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-loginPonto",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "LoginPontoLambdaVersioniJwCI2UYv3LFuGjP1aznbi0YtvbtfGOjjBSfugfxRc"
        },
        "baterPonto": {
          "handler": "src/handlers/Ponto/baterPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/baterPonto.js",
              "src/services/Ponto/baterPontoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/Registrar",
                "method": "post",
                "cors": {
                  "origin": "https://registrodepontocontroltek.netlify.app",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-baterPonto",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "BaterPontoLambdaVersion3crQCwHWbOVFeh4lzlkkW0p2Nov4m1MUcTOCq3VHWA"
        },
        "PontoFacial": {
          "handler": "src/handlers/Ponto/baterPontoFacial.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/baterPontoFacial.js",
              "src/services/Ponto/baterPontoFacialService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/RegistrarFacial",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-PontoFacial",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "PontoFacialLambdaVersionHc1b9J7NyP0yk3eMa83y94tEnlR2cobSBVCRU2HzyAc"
        },
        "PontoFuncionario": {
          "handler": "src/handlers/Ponto/identificarFuncionario.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/identificarFuncionario.js",
              "src/services/Ponto/idFuncionarioCodigo.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/Identificar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-PontoFuncionario",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "PontoFuncionarioLambdaVersionOUNGAhZnWcmGYTKMP2xS8JaGCGaVxKsH3TaW7oCUQ"
        },
        "PontoAjustar": {
          "handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/ajusteDiaPonto.js",
              "src/services/Ponto/ajusteDiaPontoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/AjustarDia",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-PontoAjustar",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "PontoAjustarLambdaVersionJqCrSZqADtRl3KVFI0TIPBcrt0qIiQOdYg1b5rUM"
        },
        "PontoHorarioAjustar": {
          "handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/ajusteHorarioPonto.js",
              "src/services/Ponto/ajusteHorarioPontoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/AjustarHorario",
                "method": "patch",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "PATCH"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-PontoHorarioAjustar",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "PontoHorarioAjustarLambdaVersion19xddoRUMJ4SZi0pJGNS7ULbgdA00oWPk3WeWzUVdpM"
        },
        "empresaInfo": {
          "handler": "src/handlers/Empresa/buscarEmpresa.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Empresa/buscarEmpresa.js",
              "src/services/Empresa/buscarEmpresaService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Empresa/Info",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-empresaInfo",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "EmpresaInfoLambdaVersionI2Lbb1mJ5qabVWKx361zcj2Yvv4BMCcLMYgKFeuuGo"
        },
        "editarEmpresa": {
          "handler": "src/handlers/Empresa/editarEmpresa.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Empresa/editarEmpresa.js",
              "src/services/Empresa/editarEmpresaService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Empresa/Editar",
                "method": "patch",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "PATCH"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-editarEmpresa",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "EditarEmpresaLambdaVersionJn6tmoF4NXZ4Uphc0KqeCg4oDiT2K4PjJd8x4PrmB0"
        },
        "relatorioPonto": {
          "handler": "src/handlers/Relatorios/relatorioPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Empresa/editarEmpresa.js",
              "src/services/Empresa/editarEmpresaService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Relatorio/Ponto",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-relatorioPonto",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "RelatorioPontoLambdaVersion0ILvCUqkCmNrAiGK07h0xqPWGa7RADCnYxsz8dZRw"
        }
      },
      "package": {
        "exclude": [
          "node_modules/**",
          "mocks/**",
          "nodejs/**"
        ],
        "artifactsS3KeyDirname": "serverless/Backend/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
        "artifact": "C:\\APIS\\Serverless\\BACKEND\\.serverless\\Backend.zip",
        "artifactDirectoryName": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z"
      },
      "custom": {
        "stage": "dev",
        "webpack": {
          "includeModules": false,
          "packager": "npm",
          "webpackConfig": "./webpack.config.js"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "sa-east-1",
      "environment": {
        "JWT_SECRET": "<REDACTED>",
        "DB_HOST": "193.203.175.60",
        "DB_USER": "u945487164_Kilberty",
        "DB_PWD": "Kilberty32316943",
        "DB_PORT": "3306",
        "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
        "CLIENT_SECRET": "<REDACTED>",
        "POOL_ID": "sa-east-1_JDeOso4LH",
        "ORIGIN": "http://localhost:5173",
        "NODE_PATH": "./:/opt/node20/node_modules"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "cognito-idp:AdminInitiateAuth"
          ],
          "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "FuncoesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-Funcoes"
            }
          },
          "AtualizarFuncoesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-atualizarFuncoes"
            }
          },
          "IdFuncoesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-idFuncoes"
            }
          },
          "ExcluirFuncoesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncoes"
            }
          },
          "InserirFuncoesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-inserirFuncoes"
            }
          },
          "FuncionariosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-Funcionarios"
            }
          },
          "EditarFuncionariosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-editarFuncionarios"
            }
          },
          "CadastrarFuncionariosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-cadastrarFuncionarios"
            }
          },
          "FiltrarFuncionariosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-filtrarFuncionarios"
            }
          },
          "ExcluirFuncionarioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncionario"
            }
          },
          "IdFuncionariosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-idFuncionarios"
            }
          },
          "RegistrarUsuarioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-RegistrarUsuario"
            }
          },
          "ValidarUsuarioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-ValidarUsuario"
            }
          },
          "UserEmpresaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-userEmpresa"
            }
          },
          "CadastrarUserEmpresaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-cadastrarUserEmpresa"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-Login"
            }
          },
          "LogoutLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-Logout"
            }
          },
          "BuscarPontoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-buscarPonto"
            }
          },
          "LoginPontoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-loginPonto"
            }
          },
          "BaterPontoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-baterPonto"
            }
          },
          "PontoFacialLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-PontoFacial"
            }
          },
          "PontoFuncionarioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-PontoFuncionario"
            }
          },
          "PontoAjustarLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-PontoAjustar"
            }
          },
          "PontoHorarioAjustarLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-PontoHorarioAjustar"
            }
          },
          "EmpresaInfoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-empresaInfo"
            }
          },
          "EditarEmpresaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-editarEmpresa"
            }
          },
          "RelatorioPontoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/Backend-dev-relatorioPonto"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "Backend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "cognito-idp:AdminInitiateAuth"
                        ],
                        "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "Backend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "FuncoesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/funcoes/listarFuncoes.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-Funcoes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "FuncoesLogGroup"
            ]
          },
          "AtualizarFuncoesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/funcoes/editarFuncao.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-atualizarFuncoes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "AtualizarFuncoesLogGroup"
            ]
          },
          "IdFuncoesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/funcoes/idFuncao.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-idFuncoes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "IdFuncoesLogGroup"
            ]
          },
          "ExcluirFuncoesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/funcoes/excluirFuncao.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-excluirFuncoes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "ExcluirFuncoesLogGroup"
            ]
          },
          "InserirFuncoesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/funcoes/inserirFuncao.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-inserirFuncoes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "InserirFuncoesLogGroup"
            ]
          },
          "FuncionariosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-Funcionarios",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "FuncionariosLogGroup"
            ]
          },
          "EditarFuncionariosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-editarFuncionarios",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "EditarFuncionariosLogGroup"
            ]
          },
          "CadastrarFuncionariosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-cadastrarFuncionarios",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "CadastrarFuncionariosLogGroup"
            ]
          },
          "FiltrarFuncionariosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-filtrarFuncionarios",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "FiltrarFuncionariosLogGroup"
            ]
          },
          "ExcluirFuncionarioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-excluirFuncionario",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "ExcluirFuncionarioLogGroup"
            ]
          },
          "IdFuncionariosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Funcionarios/idFuncionarios.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-idFuncionarios",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "IdFuncionariosLogGroup"
            ]
          },
          "RegistrarUsuarioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/users/registro.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-RegistrarUsuario",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "RegistrarUsuarioLogGroup"
            ]
          },
          "ValidarUsuarioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/users/codigoUser.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-ValidarUsuario",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "ValidarUsuarioLogGroup"
            ]
          },
          "UserEmpresaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/users/empresa.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-userEmpresa",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "UserEmpresaLogGroup"
            ]
          },
          "CadastrarUserEmpresaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/users/usuarioEmpresa.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-cadastrarUserEmpresa",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "CadastrarUserEmpresaLogGroup"
            ]
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/users/login.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-Login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "LogoutLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/users/login.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-Logout",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "LogoutLogGroup"
            ]
          },
          "BuscarPontoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Ponto/buscarPonto.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-buscarPonto",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "BuscarPontoLogGroup"
            ]
          },
          "LoginPontoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/users/loginPonto.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-loginPonto",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "LoginPontoLogGroup"
            ]
          },
          "BaterPontoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Ponto/baterPonto.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-baterPonto",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "BaterPontoLogGroup"
            ]
          },
          "PontoFacialLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Ponto/baterPontoFacial.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-PontoFacial",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "PontoFacialLogGroup"
            ]
          },
          "PontoFuncionarioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Ponto/identificarFuncionario.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-PontoFuncionario",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "PontoFuncionarioLogGroup"
            ]
          },
          "PontoAjustarLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-PontoAjustar",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "PontoAjustarLogGroup"
            ]
          },
          "PontoHorarioAjustarLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-PontoHorarioAjustar",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "PontoHorarioAjustarLogGroup"
            ]
          },
          "EmpresaInfoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Empresa/buscarEmpresa.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-empresaInfo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "EmpresaInfoLogGroup"
            ]
          },
          "EditarEmpresaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Empresa/editarEmpresa.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-editarEmpresa",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "EditarEmpresaLogGroup"
            ]
          },
          "RelatorioPontoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
              },
              "Handler": "src/handlers/Relatorios/relatorioPonto.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "Backend-dev-relatorioPonto",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "DB_HOST": "193.203.175.60",
                  "DB_USER": "u945487164_Kilberty",
                  "DB_PWD": "Kilberty32316943",
                  "DB_PORT": "3306",
                  "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                  "CLIENT_SECRET": "<REDACTED>",
                  "POOL_ID": "sa-east-1_JDeOso4LH",
                  "ORIGIN": "http://localhost:5173",
                  "NODE_PATH": "./:/opt/node20/node_modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
              ]
            },
            "DependsOn": [
              "RelatorioPontoLogGroup"
            ]
          },
          "FuncoesLambdaVersionTnVvPyEhwZW0o86uwrLs1fxp2oGXAEfUKLvaoXYM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FuncoesLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "AtualizarFuncoesLambdaVersionXIaGTpv5yH5TT4t5jEFaf1MggZbvD7ZEaKrS7UU90Q0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AtualizarFuncoesLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "IdFuncoesLambdaVersionYfMStapb8Bq4wliNGkv3QDWnM9R5dAB83QVo9d9bY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "IdFuncoesLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "ExcluirFuncoesLambdaVersionsNMvWbw7ZUNtVViEkI1fUsTXScxwgPoZITuCxXkE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ExcluirFuncoesLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "InserirFuncoesLambdaVersionZPgSLrJMi3pL9dnoqmI5f0Hkp2XbmtPjyBsVzabEl2A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "InserirFuncoesLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "FuncionariosLambdaVersionFgrDj4Q82EOjZ9GExk4j4CD8Lc8ggAksAh1XCogfJY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FuncionariosLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "EditarFuncionariosLambdaVersionSTAOpU47okmWPajscBbwEv5I5SZU7vzbQKQ8xdr8s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EditarFuncionariosLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "CadastrarFuncionariosLambdaVersionrjNwwCFeTcojCN9YkROycZQaVQdTUeQ2Mzk3Flays": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CadastrarFuncionariosLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "FiltrarFuncionariosLambdaVersionZbteOj8WGp3Az42rKoTHbwV8Dx2mW9z7aWUxbKzuc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FiltrarFuncionariosLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "ExcluirFuncionarioLambdaVersionBQGRF324qCvoEguJPCYlN91vx2ZEUHi9Kv6MONrpc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ExcluirFuncionarioLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "IdFuncionariosLambdaVersionaPgihmoixFvEK5Lu5kUSk0ZKYFlyVw3OPs9vrcU0A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "IdFuncionariosLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "RegistrarUsuarioLambdaVersionEGjVWeXW4pwpad7j3su5LsVj8qH5HUWoSnTB6J21WX0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RegistrarUsuarioLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "ValidarUsuarioLambdaVersionNRQswq6l9aRtOvS0xO8kAqmFZGeAADOFXILNURhj1dg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ValidarUsuarioLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "UserEmpresaLambdaVersionHC3q6VrNZcVMXeIG0AIXR42l0KTXj17qQykRVmzE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserEmpresaLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "CadastrarUserEmpresaLambdaVersionT1pVLU7pMuwpQ08EFmRtpATuQEZSyBqwikRHT9pih4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CadastrarUserEmpresaLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "LoginLambdaVersionOD4gx6OkiVJUP2PYhcnKaghKqhaPynk0BOadmWkdgA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "LogoutLambdaVersionOUFObe9jYqtbYRk9jcvruq2svvb8ZZzarJosdlHbXk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LogoutLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "BuscarPontoLambdaVersionuG6mSJ7J44RkIo5675lnGnlpfKMUcT5hUM2AOG60E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BuscarPontoLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "LoginPontoLambdaVersioniJwCI2UYv3LFuGjP1aznbi0YtvbtfGOjjBSfugfxRc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginPontoLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "BaterPontoLambdaVersion3crQCwHWbOVFeh4lzlkkW0p2Nov4m1MUcTOCq3VHWA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BaterPontoLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "PontoFacialLambdaVersionHc1b9J7NyP0yk3eMa83y94tEnlR2cobSBVCRU2HzyAc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PontoFacialLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "PontoFuncionarioLambdaVersionOUNGAhZnWcmGYTKMP2xS8JaGCGaVxKsH3TaW7oCUQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PontoFuncionarioLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "PontoAjustarLambdaVersionJqCrSZqADtRl3KVFI0TIPBcrt0qIiQOdYg1b5rUM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PontoAjustarLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "PontoHorarioAjustarLambdaVersion19xddoRUMJ4SZi0pJGNS7ULbgdA00oWPk3WeWzUVdpM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PontoHorarioAjustarLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "EmpresaInfoLambdaVersionI2Lbb1mJ5qabVWKx361zcj2Yvv4BMCcLMYgKFeuuGo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EmpresaInfoLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "EditarEmpresaLambdaVersionJn6tmoF4NXZ4Uphc0KqeCg4oDiT2K4PjJd8x4PrmB0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EditarEmpresaLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "RelatorioPontoLambdaVersion0ILvCUqkCmNrAiGK07h0xqPWGa7RADCnYxsz8dZRw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RelatorioPontoLambdaFunction"
              },
              "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-Backend",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceFuncoes": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "Funcoes",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncoesListar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncoes"
              },
              "PathPart": "Listar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncoesEditar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncoes"
              },
              "PathPart": "Editar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncoesInfo": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncoes"
              },
              "PathPart": "Info",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncoesExcluir": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncoes"
              },
              "PathPart": "Excluir",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncoesInserir": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncoes"
              },
              "PathPart": "Inserir",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncionarios": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "Funcionarios",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncionariosListar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncionarios"
              },
              "PathPart": "Listar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncionariosIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncionarios"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncionariosIdVarEditar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncionariosIdVar"
              },
              "PathPart": "editar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncionariosIdVarExcluir": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncionariosIdVar"
              },
              "PathPart": "excluir",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncionariosCadastrar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncionarios"
              },
              "PathPart": "Cadastrar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFuncionariosFiltrar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFuncionarios"
              },
              "PathPart": "Filtrar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "User",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "Add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserValidar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "Validar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserEmpresa": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "Empresa",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserEmail": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "Email",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "Login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserLogout": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "Logout",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserLoginponto": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "loginPonto",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePonto": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "Ponto",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePontoBuscar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePonto"
              },
              "PathPart": "Buscar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePontoRegistrar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePonto"
              },
              "PathPart": "Registrar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePontoRegistrarfacial": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePonto"
              },
              "PathPart": "RegistrarFacial",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePontoIdentificar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePonto"
              },
              "PathPart": "Identificar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePontoAjustardia": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePonto"
              },
              "PathPart": "AjustarDia",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePontoAjustarhorario": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePonto"
              },
              "PathPart": "AjustarHorario",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceEmpresa": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "Empresa",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceEmpresaInfo": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceEmpresa"
              },
              "PathPart": "Info",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceEmpresaEditar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceEmpresa"
              },
              "PathPart": "Editar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceRelatorio": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "Relatorio",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceRelatorioPonto": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceRelatorio"
              },
              "PathPart": "Ponto",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncoesListarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncoesListar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncoesEditarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncoesEditar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncoesInfoOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncoesInfo"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncoesExcluirOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncoesExcluir"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncoesInserirOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncoesInserir"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncionariosListarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosListar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncionariosIdVarEditarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncionariosCadastrarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosCadastrar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncionariosFiltrarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosFiltrar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncionariosIdVarExcluirOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserValidarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserValidar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserEmpresaOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserEmpresa"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserEmailOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserEmail"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserLoginOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserLogoutOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserLogout"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPontoBuscarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoBuscar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserLoginpontoOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserLoginponto"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPontoRegistrarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoRegistrar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPontoRegistrarfacialOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoRegistrarfacial"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPontoIdentificarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoIdentificar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPontoAjustardiaOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoAjustardia"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPontoAjustarhorarioOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoAjustarhorario"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodEmpresaInfoOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceEmpresaInfo"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodEmpresaEditarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceEmpresaEditar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodRelatorioPontoOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceRelatorioPonto"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFuncoesListarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncoesListar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FuncoesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFuncoesEditarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncoesEditar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AtualizarFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AtualizarFuncoesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFuncoesInfoGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncoesInfo"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "IdFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "IdFuncoesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFuncoesExcluirDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncoesExcluir"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ExcluirFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ExcluirFuncoesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFuncoesInserirPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncoesInserir"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "InserirFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "InserirFuncoesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFuncionariosListarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosListar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FuncionariosLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFuncionariosIdVarEditarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "EditarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "EditarFuncionariosLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFuncionariosCadastrarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosCadastrar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CadastrarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CadastrarFuncionariosLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFuncionariosFiltrarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosFiltrar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FiltrarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FiltrarFuncionariosLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFuncionariosIdVarExcluirDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ExcluirFuncionarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ExcluirFuncionarioLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFuncionariosIdVarEditarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "IdFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "IdFuncionariosLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RegistrarUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "RegistrarUsuarioLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserValidarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserValidar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ValidarUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ValidarUsuarioLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserEmpresaGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserEmpresa"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UserEmpresaLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserEmailPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserEmail"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CadastrarUserEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CadastrarUserEmpresaLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LoginLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserLogoutPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserLogout"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LogoutLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LogoutLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPontoBuscarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoBuscar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BuscarPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "BuscarPontoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserLoginpontoPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserLoginponto"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LoginPontoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPontoRegistrarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoRegistrar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BaterPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "BaterPontoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPontoRegistrarfacialPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoRegistrarfacial"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PontoFacialLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PontoFacialLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPontoIdentificarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoIdentificar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PontoFuncionarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PontoFuncionarioLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPontoAjustardiaPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoAjustardia"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PontoAjustarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PontoAjustarLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPontoAjustarhorarioPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePontoAjustarhorario"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PontoHorarioAjustarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PontoHorarioAjustarLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodEmpresaInfoGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceEmpresaInfo"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "EmpresaInfoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "EmpresaInfoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodEmpresaEditarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceEmpresaEditar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "EditarEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "EditarEmpresaLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodRelatorioPontoGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRelatorioPonto"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RelatorioPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "RelatorioPontoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1739483029900": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodFuncoesListarOptions",
              "ApiGatewayMethodFuncoesEditarOptions",
              "ApiGatewayMethodFuncoesInfoOptions",
              "ApiGatewayMethodFuncoesExcluirOptions",
              "ApiGatewayMethodFuncoesInserirOptions",
              "ApiGatewayMethodFuncionariosListarOptions",
              "ApiGatewayMethodFuncionariosIdVarEditarOptions",
              "ApiGatewayMethodFuncionariosCadastrarOptions",
              "ApiGatewayMethodFuncionariosFiltrarOptions",
              "ApiGatewayMethodFuncionariosIdVarExcluirOptions",
              "ApiGatewayMethodUserAddOptions",
              "ApiGatewayMethodUserValidarOptions",
              "ApiGatewayMethodUserEmpresaOptions",
              "ApiGatewayMethodUserEmailOptions",
              "ApiGatewayMethodUserLoginOptions",
              "ApiGatewayMethodUserLogoutOptions",
              "ApiGatewayMethodPontoBuscarOptions",
              "ApiGatewayMethodUserLoginpontoOptions",
              "ApiGatewayMethodPontoRegistrarOptions",
              "ApiGatewayMethodPontoRegistrarfacialOptions",
              "ApiGatewayMethodPontoIdentificarOptions",
              "ApiGatewayMethodPontoAjustardiaOptions",
              "ApiGatewayMethodPontoAjustarhorarioOptions",
              "ApiGatewayMethodEmpresaInfoOptions",
              "ApiGatewayMethodEmpresaEditarOptions",
              "ApiGatewayMethodRelatorioPontoOptions",
              "ApiGatewayMethodFuncoesListarGet",
              "ApiGatewayMethodFuncoesEditarPatch",
              "ApiGatewayMethodFuncoesInfoGet",
              "ApiGatewayMethodFuncoesExcluirDelete",
              "ApiGatewayMethodFuncoesInserirPost",
              "ApiGatewayMethodFuncionariosListarGet",
              "ApiGatewayMethodFuncionariosIdVarEditarPatch",
              "ApiGatewayMethodFuncionariosCadastrarPost",
              "ApiGatewayMethodFuncionariosFiltrarGet",
              "ApiGatewayMethodFuncionariosIdVarExcluirDelete",
              "ApiGatewayMethodFuncionariosIdVarEditarGet",
              "ApiGatewayMethodUserAddPost",
              "ApiGatewayMethodUserValidarPost",
              "ApiGatewayMethodUserEmpresaGet",
              "ApiGatewayMethodUserEmailPost",
              "ApiGatewayMethodUserLoginPost",
              "ApiGatewayMethodUserLogoutPost",
              "ApiGatewayMethodPontoBuscarGet",
              "ApiGatewayMethodUserLoginpontoPost",
              "ApiGatewayMethodPontoRegistrarPost",
              "ApiGatewayMethodPontoRegistrarfacialPost",
              "ApiGatewayMethodPontoIdentificarGet",
              "ApiGatewayMethodPontoAjustardiaPost",
              "ApiGatewayMethodPontoAjustarhorarioPatch",
              "ApiGatewayMethodEmpresaInfoGet",
              "ApiGatewayMethodEmpresaEditarPatch",
              "ApiGatewayMethodRelatorioPontoGet"
            ]
          },
          "FuncoesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FuncoesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AtualizarFuncoesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AtualizarFuncoesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "IdFuncoesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "IdFuncoesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ExcluirFuncoesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ExcluirFuncoesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "InserirFuncoesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "InserirFuncoesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FuncionariosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FuncionariosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "EditarFuncionariosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EditarFuncionariosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CadastrarFuncionariosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CadastrarFuncionariosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FiltrarFuncionariosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FiltrarFuncionariosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ExcluirFuncionarioLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ExcluirFuncionarioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "IdFuncionariosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "IdFuncionariosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RegistrarUsuarioLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RegistrarUsuarioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ValidarUsuarioLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ValidarUsuarioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserEmpresaLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserEmpresaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CadastrarUserEmpresaLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CadastrarUserEmpresaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LoginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LogoutLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LogoutLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "BuscarPontoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "BuscarPontoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LoginPontoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginPontoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "BaterPontoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "BaterPontoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PontoFacialLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PontoFacialLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PontoFuncionarioLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PontoFuncionarioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PontoAjustarLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PontoAjustarLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PontoHorarioAjustarLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PontoHorarioAjustarLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "EmpresaInfoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EmpresaInfoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "EditarEmpresaLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EditarEmpresaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RelatorioPontoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RelatorioPontoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
            "Export": {
              "Name": "sls-Backend-dev-ServerlessDeploymentBucketName"
            }
          },
          "FuncoesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FuncoesLambdaVersionTnVvPyEhwZW0o86uwrLs1fxp2oGXAEfUKLvaoXYM"
            },
            "Export": {
              "Name": "sls-Backend-dev-FuncoesLambdaFunctionQualifiedArn"
            }
          },
          "AtualizarFuncoesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AtualizarFuncoesLambdaVersionXIaGTpv5yH5TT4t5jEFaf1MggZbvD7ZEaKrS7UU90Q0"
            },
            "Export": {
              "Name": "sls-Backend-dev-AtualizarFuncoesLambdaFunctionQualifiedArn"
            }
          },
          "IdFuncoesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "IdFuncoesLambdaVersionYfMStapb8Bq4wliNGkv3QDWnM9R5dAB83QVo9d9bY"
            },
            "Export": {
              "Name": "sls-Backend-dev-IdFuncoesLambdaFunctionQualifiedArn"
            }
          },
          "ExcluirFuncoesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ExcluirFuncoesLambdaVersionsNMvWbw7ZUNtVViEkI1fUsTXScxwgPoZITuCxXkE"
            },
            "Export": {
              "Name": "sls-Backend-dev-ExcluirFuncoesLambdaFunctionQualifiedArn"
            }
          },
          "InserirFuncoesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "InserirFuncoesLambdaVersionZPgSLrJMi3pL9dnoqmI5f0Hkp2XbmtPjyBsVzabEl2A"
            },
            "Export": {
              "Name": "sls-Backend-dev-InserirFuncoesLambdaFunctionQualifiedArn"
            }
          },
          "FuncionariosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FuncionariosLambdaVersionFgrDj4Q82EOjZ9GExk4j4CD8Lc8ggAksAh1XCogfJY"
            },
            "Export": {
              "Name": "sls-Backend-dev-FuncionariosLambdaFunctionQualifiedArn"
            }
          },
          "EditarFuncionariosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EditarFuncionariosLambdaVersionSTAOpU47okmWPajscBbwEv5I5SZU7vzbQKQ8xdr8s"
            },
            "Export": {
              "Name": "sls-Backend-dev-EditarFuncionariosLambdaFunctionQualifiedArn"
            }
          },
          "CadastrarFuncionariosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CadastrarFuncionariosLambdaVersionrjNwwCFeTcojCN9YkROycZQaVQdTUeQ2Mzk3Flays"
            },
            "Export": {
              "Name": "sls-Backend-dev-CadastrarFuncionariosLambdaFunctionQualifiedArn"
            }
          },
          "FiltrarFuncionariosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FiltrarFuncionariosLambdaVersionZbteOj8WGp3Az42rKoTHbwV8Dx2mW9z7aWUxbKzuc"
            },
            "Export": {
              "Name": "sls-Backend-dev-FiltrarFuncionariosLambdaFunctionQualifiedArn"
            }
          },
          "ExcluirFuncionarioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ExcluirFuncionarioLambdaVersionBQGRF324qCvoEguJPCYlN91vx2ZEUHi9Kv6MONrpc"
            },
            "Export": {
              "Name": "sls-Backend-dev-ExcluirFuncionarioLambdaFunctionQualifiedArn"
            }
          },
          "IdFuncionariosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "IdFuncionariosLambdaVersionaPgihmoixFvEK5Lu5kUSk0ZKYFlyVw3OPs9vrcU0A"
            },
            "Export": {
              "Name": "sls-Backend-dev-IdFuncionariosLambdaFunctionQualifiedArn"
            }
          },
          "RegistrarUsuarioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RegistrarUsuarioLambdaVersionEGjVWeXW4pwpad7j3su5LsVj8qH5HUWoSnTB6J21WX0"
            },
            "Export": {
              "Name": "sls-Backend-dev-RegistrarUsuarioLambdaFunctionQualifiedArn"
            }
          },
          "ValidarUsuarioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ValidarUsuarioLambdaVersionNRQswq6l9aRtOvS0xO8kAqmFZGeAADOFXILNURhj1dg"
            },
            "Export": {
              "Name": "sls-Backend-dev-ValidarUsuarioLambdaFunctionQualifiedArn"
            }
          },
          "UserEmpresaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserEmpresaLambdaVersionHC3q6VrNZcVMXeIG0AIXR42l0KTXj17qQykRVmzE"
            },
            "Export": {
              "Name": "sls-Backend-dev-UserEmpresaLambdaFunctionQualifiedArn"
            }
          },
          "CadastrarUserEmpresaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CadastrarUserEmpresaLambdaVersionT1pVLU7pMuwpQ08EFmRtpATuQEZSyBqwikRHT9pih4"
            },
            "Export": {
              "Name": "sls-Backend-dev-CadastrarUserEmpresaLambdaFunctionQualifiedArn"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionOD4gx6OkiVJUP2PYhcnKaghKqhaPynk0BOadmWkdgA"
            },
            "Export": {
              "Name": "sls-Backend-dev-LoginLambdaFunctionQualifiedArn"
            }
          },
          "LogoutLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LogoutLambdaVersionOUFObe9jYqtbYRk9jcvruq2svvb8ZZzarJosdlHbXk"
            },
            "Export": {
              "Name": "sls-Backend-dev-LogoutLambdaFunctionQualifiedArn"
            }
          },
          "BuscarPontoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BuscarPontoLambdaVersionuG6mSJ7J44RkIo5675lnGnlpfKMUcT5hUM2AOG60E"
            },
            "Export": {
              "Name": "sls-Backend-dev-BuscarPontoLambdaFunctionQualifiedArn"
            }
          },
          "LoginPontoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginPontoLambdaVersioniJwCI2UYv3LFuGjP1aznbi0YtvbtfGOjjBSfugfxRc"
            },
            "Export": {
              "Name": "sls-Backend-dev-LoginPontoLambdaFunctionQualifiedArn"
            }
          },
          "BaterPontoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BaterPontoLambdaVersion3crQCwHWbOVFeh4lzlkkW0p2Nov4m1MUcTOCq3VHWA"
            },
            "Export": {
              "Name": "sls-Backend-dev-BaterPontoLambdaFunctionQualifiedArn"
            }
          },
          "PontoFacialLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PontoFacialLambdaVersionHc1b9J7NyP0yk3eMa83y94tEnlR2cobSBVCRU2HzyAc"
            },
            "Export": {
              "Name": "sls-Backend-dev-PontoFacialLambdaFunctionQualifiedArn"
            }
          },
          "PontoFuncionarioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PontoFuncionarioLambdaVersionOUNGAhZnWcmGYTKMP2xS8JaGCGaVxKsH3TaW7oCUQ"
            },
            "Export": {
              "Name": "sls-Backend-dev-PontoFuncionarioLambdaFunctionQualifiedArn"
            }
          },
          "PontoAjustarLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PontoAjustarLambdaVersionJqCrSZqADtRl3KVFI0TIPBcrt0qIiQOdYg1b5rUM"
            },
            "Export": {
              "Name": "sls-Backend-dev-PontoAjustarLambdaFunctionQualifiedArn"
            }
          },
          "PontoHorarioAjustarLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PontoHorarioAjustarLambdaVersion19xddoRUMJ4SZi0pJGNS7ULbgdA00oWPk3WeWzUVdpM"
            },
            "Export": {
              "Name": "sls-Backend-dev-PontoHorarioAjustarLambdaFunctionQualifiedArn"
            }
          },
          "EmpresaInfoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EmpresaInfoLambdaVersionI2Lbb1mJ5qabVWKx361zcj2Yvv4BMCcLMYgKFeuuGo"
            },
            "Export": {
              "Name": "sls-Backend-dev-EmpresaInfoLambdaFunctionQualifiedArn"
            }
          },
          "EditarEmpresaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EditarEmpresaLambdaVersionJn6tmoF4NXZ4Uphc0KqeCg4oDiT2K4PjJd8x4PrmB0"
            },
            "Export": {
              "Name": "sls-Backend-dev-EditarEmpresaLambdaFunctionQualifiedArn"
            }
          },
          "RelatorioPontoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RelatorioPontoLambdaVersion0ILvCUqkCmNrAiGK07h0xqPWGa7RADCnYxsz8dZRw"
            },
            "Export": {
              "Name": "sls-Backend-dev-RelatorioPontoLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-Backend-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: Backend # Nome do seu serviço\r\n\r\nuseDotenv: true\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: sa-east-1 # Região desejada\r\n  environment:\r\n    JWT_SECRET: ${env:JWT_SECRET}\r\n    DB_HOST: ${env:DB_HOST}\r\n    DB_USER: ${env:DB_USER}\r\n    DB_PWD: ${env:DB_PWD}\r\n    DB_PORT: ${env:DB_PORT}\r\n    CLIENT_ID: ${env:CLIENT_ID}\r\n    CLIENT_SECRET: ${env:CLIENT_SECRET}\r\n    POOL_ID: ${env:POOL_ID}\r\n    ORIGIN: ${env:ORIGIN}\r\n    NODE_PATH: \"./:/opt/node20/node_modules\"\r\n  iamRoleStatements:\r\n    - Effect: \"Allow\"\r\n      Action:\r\n        - \"cognito-idp:AdminInitiateAuth\"\r\n      Resource: \r\n        - \"arn:aws:cognito-idp:sa-east-1:717626617280:userpool/${env:POOL_ID}\"\r\n     \r\n\r\nplugins:\r\n  - serverless-dotenv-plugin\r\n  - serverless-pseudo-parameters\r\n\r\n\r\n\r\n\r\nfunctions:\r\n  Funcoes:\r\n    handler: src/handlers/funcoes/listarFuncoes.handler\r\n    package:\r\n      include:\r\n        - src/handlers/funcoes/listarFuncoes.js\r\n        - src/services/Funcoes/listarFuncoesService.js\r\n        - src/database/database.js\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    events:\r\n      - http:\r\n          path: /Funcoes/Listar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN} # Usa o valor definido no .env\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n          response:\r\n            headers:\r\n              Content-Type: \"'application/json'\"\r\n              Access-Control-Allow-Origin: \"'${env:ORIGIN}'\" # Referência ao valor do .env\r\n              Access-Control-Allow-Methods: \"'GET,OPTIONS'\"\r\n              Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Requested-With'\"\r\n            statusCodes:\r\n              200:\r\n                pattern: ''\r\n              401:\r\n                pattern: '.*Unauthorized.*'\r\n              403:\r\n                pattern: '.*Forbidden.*'\r\n  \r\n  atualizarFuncoes:\r\n    handler: src/handlers/funcoes/editarFuncao.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n\r\n     include:\r\n        - src/handlers/funcoes/editarFuncao.js\r\n        - src/services/Funcoes/editarFuncaoService.js\r\n        - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcoes/Editar\r\n          method: patch\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  idFuncoes:\r\n    handler: src/handlers/funcoes/idFuncao.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n\r\n     include:\r\n        - src/handlers/funcoes/idFuncao.js\r\n        - src/services/Funcoes/idFuncaoService.js\r\n        - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcoes/Info\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n  \r\n\r\n   \r\n  \r\n  excluirFuncoes:\r\n    handler: src/handlers/funcoes/excluirFuncao.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/funcoes/excluirFuncao.js\r\n         - src/services/funcoes/excluirFuncaoService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcoes/Excluir\r\n          method: delete\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n\r\n  inserirFuncoes:\r\n    handler: src/handlers/funcoes/inserirFuncao.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n \r\n     include:\r\n         - src/handlers/funcoes/inserirFuncao.js\r\n         - src/services/funcoes/inserirFuncaoService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcoes/Inserir\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n  \r\n  Funcionarios:\r\n    handler: src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/Funcionarios/autocompleteFuncionariosHandler.js\r\n         - src/services/Funcionarios/autocompleteFuncionarios.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/Listar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  editarFuncionarios:\r\n    handler: src/handlers/Funcionarios/editarFuncionarios.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/Funcionarios/editarFuncionarios.js\r\n         - src/services/Funcionarios/editarFuncionarioService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/{id}/editar\r\n          method: patch\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  cadastrarFuncionarios:\r\n    handler: src/handlers/Funcionarios/cadastrarFuncionarios.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/Funcionarios/cadastrarFuncionarios.js\r\n         - src/services/Funcionarios/cadastrarFuncionariosService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/Cadastrar\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  \r\n\r\n  filtrarFuncionarios:\r\n    handler: src/handlers/Funcionarios/listarFuncionarios.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n\r\n     include:\r\n         - src/handlers/Funcionarios/listarFuncionarios.js\r\n         - src/services/Funcionarios/listarFuncionariosService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/Filtrar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  excluirFuncionario:\r\n    handler: src/handlers/Funcionarios/excluirFuncionarios.handler # Corrigido o nome\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n    \r\n     include:\r\n         - src/handlers/Funcionarios/excluirFuncionarios.js\r\n         - src/services/Funcionarios/excluirFuncionariosService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/{id}/excluir\r\n          method: delete\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  idFuncionarios:\r\n    handler: src/handlers/Funcionarios/idFuncionarios.handler # Corrigido o nome\r\n    layers:\r\n     - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/Funcionarios/idFuncionarios.js\r\n         - src/services/Funcionarios/idFuncionariosService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/{id}/editar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  RegistrarUsuario:\r\n    handler: src/handlers/users/registro.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n    \r\n     include:\r\n         - src/handlers/users/registro.js\r\n         - src/services/Usuarios/registroService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /User/Add\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n \r\n  ValidarUsuario:\r\n    handler: src/handlers/users/codigoUser.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/users/codigoUser.js\r\n         - src/services/Usuarios/codigoUserService.js\r\n     \r\n    events:\r\n      - http:\r\n          path: /User/Validar\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  userEmpresa:\r\n    handler: src/handlers/users/empresa.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/users/empresa.js\r\n         - src/services/Usuarios/empresa.js\r\n     \r\n    events:\r\n      - http:\r\n          path: /User/Empresa\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  cadastrarUserEmpresa:\r\n    handler: src/handlers/users/usuarioEmpresa.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/users/codigoUser.js\r\n         - src/services/Usuarios/codigoUserService.js\r\n     \r\n    events:\r\n      - http:\r\n          path: /User/Email\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n\r\n\r\n\r\n  Login:\r\n    handler: src/handlers/users/login.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n    \r\n     include:\r\n         - src/handlers/users/login.js\r\n         - src/services/Usuarios/loginService.js\r\n        \r\n    events:\r\n      - http:\r\n          path: /User/Login\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  Logout:\r\n    handler: src/handlers/users/login.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n    \r\n     include:\r\n         - src/handlers/users/login.js\r\n         - src/services/Usuarios/loginService.js\r\n        \r\n    events:\r\n      - http:\r\n          path: /User/Logout\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  buscarPonto:\r\n    handler: src/handlers/Ponto/buscarPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n\r\n     include:\r\n         - src/handlers/Ponto/buscarPonto.js\r\n         - src/services/Ponto/consultaPontoService.js\r\n         - src/services/Ponto/jornadaInfoService.js\r\n         - src/services/Ponto/calculoBancoHoras.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/Buscar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n  \r\n  loginPonto:\r\n    handler: src/handlers/users/loginPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/users/login.js\r\n         - src/services/Usuarios/loginService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /User/loginPonto\r\n          method: post\r\n          cors:\r\n            origin: https://registrodepontocontroltek.netlify.app\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n  \r\n  baterPonto:\r\n    handler: src/handlers/Ponto/baterPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/Ponto/baterPonto.js\r\n         - src/services/Ponto/baterPontoService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/Registrar\r\n          method: post\r\n          cors:\r\n            origin: https://registrodepontocontroltek.netlify.app\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n\r\n  PontoFacial:\r\n    handler: src/handlers/Ponto/baterPontoFacial.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/Ponto/baterPontoFacial.js\r\n         - src/services/Ponto/baterPontoFacialService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/RegistrarFacial\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n\r\n  PontoFuncionario:\r\n    handler: src/handlers/Ponto/identificarFuncionario.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/Ponto/identificarFuncionario.js\r\n         - src/services/Ponto/idFuncionarioCodigo.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/Identificar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  PontoAjustar:\r\n    handler: src/handlers/Ponto/ajusteDiaPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/Ponto/ajusteDiaPonto.js\r\n         - src/services/Ponto/ajusteDiaPontoService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/AjustarDia\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n\r\n  PontoHorarioAjustar:\r\n    handler: src/handlers/Ponto/ajusteHorarioPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/Ponto/ajusteHorarioPonto.js\r\n         - src/services/Ponto/ajusteHorarioPontoService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/AjustarHorario\r\n          method: patch\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n\r\n\r\n  \r\n  empresaInfo:\r\n    handler: src/handlers/Empresa/buscarEmpresa.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n     \r\n     include:\r\n         - src/handlers/Empresa/buscarEmpresa.js\r\n         - src/services/Empresa/buscarEmpresaService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Empresa/Info\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  editarEmpresa:\r\n    handler: src/handlers/Empresa/editarEmpresa.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n        - src/handlers/Empresa/editarEmpresa.js\r\n        - src/services/Empresa/editarEmpresaService.js\r\n        - src/database/database.js  # Inclui somente os arquivos necessários\r\n    events:\r\n     - http:\r\n        path: /Empresa/Editar\r\n        method: patch\r\n        cors:\r\n          origin: ${env:ORIGIN}\r\n          headers:\r\n            - Content-Type\r\n            - Authorization\r\n            - X-Requested-With\r\n            - Access-Control-Allow-Origin\r\n            - Access-Control-Allow-Methods\r\n            - Access-Control-Allow-Headers\r\n\r\n\r\n  relatorioPonto:\r\n    handler: src/handlers/Relatorios/relatorioPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n        - src/handlers/Empresa/editarEmpresa.js\r\n        - src/services/Empresa/editarEmpresaService.js\r\n        - src/database/database.js  # Inclui somente os arquivos necessários\r\n    events:\r\n     - http:\r\n        path: /Relatorio/Ponto\r\n        method: get\r\n        cors:\r\n          origin: ${env:ORIGIN}\r\n          headers:\r\n            - Content-Type\r\n            - Authorization\r\n            - X-Requested-With\r\n            - Access-Control-Allow-Origin\r\n            - Access-Control-Allow-Methods\r\n            - Access-Control-Allow-Headers\r\n\r\n\r\npackage:\r\n  exclude:\r\n   - node_modules/**\r\n   - mocks/**\r\n   - nodejs/**\r\n   \r\n   \r\n\r\n\r\n\r\ncustom:\r\n  stage: ${opt:stage, 'dev'}\r\n \r\n  \r\n  webpack:\r\n    includeModules: false\r\n    packager: 'npm'\r\n    webpackConfig: './webpack.config.js' # Aponta para o arquivo de configuração do Webpack\r\n    \r\n\r\n\r\n",
    "command": [
      "deploy"
    ],
    "options": {
      "stage": "dev"
    },
    "orgId": "5f676be9-4363-451a-80fe-231680b801f5",
    "orgName": "kilberty",
    "userId": "426htdtd7mV0Gj65ld",
    "userName": "kilberty",
    "serviceProviderAwsAccountId": "717626617280",
    "serviceProviderAwsCfStackName": "Backend-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:sa-east-1:717626617280:stack/Backend-dev/ad25f9d0-9f72-11ef-9093-06a96d2363eb",
    "serviceProviderAwsCfStackCreated": "2024-11-10T14:47:15.318Z",
    "serviceProviderAwsCfStackUpdated": "2025-02-13T00:51:49.180Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "LogoutLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-Logout:16",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-LogoutLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UserEmpresaLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-userEmpresa:37",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-UserEmpresaLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "IdFuncoesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-idFuncoes:19",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-IdFuncoesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AtualizarFuncoesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-atualizarFuncoes:119",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-AtualizarFuncoesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CadastrarUserEmpresaLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-cadastrarUserEmpresa:32",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-CadastrarUserEmpresaLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "BaterPontoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-baterPonto:147",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-BaterPontoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "InserirFuncoesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-inserirFuncoes:126",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-InserirFuncoesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ExcluirFuncoesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-excluirFuncoes:114",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-ExcluirFuncoesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PontoAjustarLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-PontoAjustar:48",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-PontoAjustarLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "EditarEmpresaLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-editarEmpresa:115",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-EditarEmpresaLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
        "ExportName": "sls-Backend-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "ValidarUsuarioLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-ValidarUsuario:194",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-ValidarUsuarioLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "EmpresaInfoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-empresaInfo:131",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-EmpresaInfoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginPontoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-loginPonto:133",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-LoginPontoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "BuscarPontoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-buscarPonto:149",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-BuscarPontoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "EditarFuncionariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-editarFuncionarios:121",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-EditarFuncionariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CadastrarFuncionariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-cadastrarFuncionarios:159",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-CadastrarFuncionariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "FuncoesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-Funcoes:217",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-FuncoesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "FuncionariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-Funcionarios:205",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-FuncionariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ExcluirFuncionarioLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-excluirFuncionario:148",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-ExcluirFuncionarioLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PontoFacialLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-PontoFacial:57",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-PontoFacialLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "RegistrarUsuarioLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-RegistrarUsuario:199",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-RegistrarUsuarioLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PontoFuncionarioLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-PontoFuncionario:55",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-PontoFuncionarioLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "FiltrarFuncionariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-filtrarFuncionarios:163",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-FiltrarFuncionariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PontoHorarioAjustarLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-PontoHorarioAjustar:47",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-PontoHorarioAjustarLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "RelatorioPontoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-relatorioPonto:18",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-RelatorioPontoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "IdFuncionariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-idFuncionarios:167",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-IdFuncionariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-Login:189",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-LoginLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://gndfw9o6r9.execute-api.sa-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-Backend-dev-ServiceEndpoint"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "FuncoesLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-Funcoes"
          }
        },
        "AtualizarFuncoesLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-atualizarFuncoes"
          }
        },
        "IdFuncoesLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-idFuncoes"
          }
        },
        "ExcluirFuncoesLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncoes"
          }
        },
        "InserirFuncoesLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-inserirFuncoes"
          }
        },
        "FuncionariosLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-Funcionarios"
          }
        },
        "EditarFuncionariosLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-editarFuncionarios"
          }
        },
        "CadastrarFuncionariosLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-cadastrarFuncionarios"
          }
        },
        "FiltrarFuncionariosLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-filtrarFuncionarios"
          }
        },
        "ExcluirFuncionarioLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncionario"
          }
        },
        "IdFuncionariosLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-idFuncionarios"
          }
        },
        "RegistrarUsuarioLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-RegistrarUsuario"
          }
        },
        "ValidarUsuarioLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-ValidarUsuario"
          }
        },
        "UserEmpresaLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-userEmpresa"
          }
        },
        "CadastrarUserEmpresaLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-cadastrarUserEmpresa"
          }
        },
        "LoginLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-Login"
          }
        },
        "LogoutLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-Logout"
          }
        },
        "BuscarPontoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-buscarPonto"
          }
        },
        "LoginPontoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-loginPonto"
          }
        },
        "BaterPontoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-baterPonto"
          }
        },
        "PontoFacialLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-PontoFacial"
          }
        },
        "PontoFuncionarioLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-PontoFuncionario"
          }
        },
        "PontoAjustarLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-PontoAjustar"
          }
        },
        "PontoHorarioAjustarLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-PontoHorarioAjustar"
          }
        },
        "EmpresaInfoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-empresaInfo"
          }
        },
        "EditarEmpresaLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-editarEmpresa"
          }
        },
        "RelatorioPontoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/Backend-dev-relatorioPonto"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "Backend",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "cognito-idp:AdminInitiateAuth"
                      ],
                      "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "Backend",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "FuncoesLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/funcoes/listarFuncoes.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-Funcoes",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "FuncoesLogGroup"
          ]
        },
        "AtualizarFuncoesLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/funcoes/editarFuncao.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-atualizarFuncoes",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "AtualizarFuncoesLogGroup"
          ]
        },
        "IdFuncoesLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/funcoes/idFuncao.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-idFuncoes",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "IdFuncoesLogGroup"
          ]
        },
        "ExcluirFuncoesLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/funcoes/excluirFuncao.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-excluirFuncoes",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "ExcluirFuncoesLogGroup"
          ]
        },
        "InserirFuncoesLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/funcoes/inserirFuncao.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-inserirFuncoes",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "InserirFuncoesLogGroup"
          ]
        },
        "FuncionariosLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-Funcionarios",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "FuncionariosLogGroup"
          ]
        },
        "EditarFuncionariosLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-editarFuncionarios",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "EditarFuncionariosLogGroup"
          ]
        },
        "CadastrarFuncionariosLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-cadastrarFuncionarios",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "CadastrarFuncionariosLogGroup"
          ]
        },
        "FiltrarFuncionariosLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-filtrarFuncionarios",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "FiltrarFuncionariosLogGroup"
          ]
        },
        "ExcluirFuncionarioLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-excluirFuncionario",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "ExcluirFuncionarioLogGroup"
          ]
        },
        "IdFuncionariosLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Funcionarios/idFuncionarios.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-idFuncionarios",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "IdFuncionariosLogGroup"
          ]
        },
        "RegistrarUsuarioLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/users/registro.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-RegistrarUsuario",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "RegistrarUsuarioLogGroup"
          ]
        },
        "ValidarUsuarioLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/users/codigoUser.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-ValidarUsuario",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "ValidarUsuarioLogGroup"
          ]
        },
        "UserEmpresaLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/users/empresa.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-userEmpresa",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "UserEmpresaLogGroup"
          ]
        },
        "CadastrarUserEmpresaLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/users/usuarioEmpresa.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-cadastrarUserEmpresa",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "CadastrarUserEmpresaLogGroup"
          ]
        },
        "LoginLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/users/login.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-Login",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "LoginLogGroup"
          ]
        },
        "LogoutLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/users/login.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-Logout",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "LogoutLogGroup"
          ]
        },
        "BuscarPontoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Ponto/buscarPonto.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-buscarPonto",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "BuscarPontoLogGroup"
          ]
        },
        "LoginPontoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/users/loginPonto.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-loginPonto",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "LoginPontoLogGroup"
          ]
        },
        "BaterPontoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Ponto/baterPonto.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-baterPonto",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "BaterPontoLogGroup"
          ]
        },
        "PontoFacialLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Ponto/baterPontoFacial.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-PontoFacial",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "PontoFacialLogGroup"
          ]
        },
        "PontoFuncionarioLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Ponto/identificarFuncionario.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-PontoFuncionario",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "PontoFuncionarioLogGroup"
          ]
        },
        "PontoAjustarLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-PontoAjustar",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "PontoAjustarLogGroup"
          ]
        },
        "PontoHorarioAjustarLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-PontoHorarioAjustar",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "PontoHorarioAjustarLogGroup"
          ]
        },
        "EmpresaInfoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Empresa/buscarEmpresa.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-empresaInfo",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "EmpresaInfoLogGroup"
          ]
        },
        "EditarEmpresaLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Empresa/editarEmpresa.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-editarEmpresa",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "EditarEmpresaLogGroup"
          ]
        },
        "RelatorioPontoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "S3Key": "serverless/Backend/dev/1739483043481-2025-02-13T21:44:03.481Z/Backend.zip"
            },
            "Handler": "src/handlers/Relatorios/relatorioPonto.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "Backend-dev-relatorioPonto",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
            ]
          },
          "DependsOn": [
            "RelatorioPontoLogGroup"
          ]
        },
        "FuncoesLambdaVersionTnVvPyEhwZW0o86uwrLs1fxp2oGXAEfUKLvaoXYM": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "FuncoesLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "AtualizarFuncoesLambdaVersionXIaGTpv5yH5TT4t5jEFaf1MggZbvD7ZEaKrS7UU90Q0": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "AtualizarFuncoesLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "IdFuncoesLambdaVersionYfMStapb8Bq4wliNGkv3QDWnM9R5dAB83QVo9d9bY": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "IdFuncoesLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "ExcluirFuncoesLambdaVersionsNMvWbw7ZUNtVViEkI1fUsTXScxwgPoZITuCxXkE": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ExcluirFuncoesLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "InserirFuncoesLambdaVersionZPgSLrJMi3pL9dnoqmI5f0Hkp2XbmtPjyBsVzabEl2A": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "InserirFuncoesLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "FuncionariosLambdaVersionFgrDj4Q82EOjZ9GExk4j4CD8Lc8ggAksAh1XCogfJY": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "FuncionariosLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "EditarFuncionariosLambdaVersionSTAOpU47okmWPajscBbwEv5I5SZU7vzbQKQ8xdr8s": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "EditarFuncionariosLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "CadastrarFuncionariosLambdaVersionrjNwwCFeTcojCN9YkROycZQaVQdTUeQ2Mzk3Flays": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CadastrarFuncionariosLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "FiltrarFuncionariosLambdaVersionZbteOj8WGp3Az42rKoTHbwV8Dx2mW9z7aWUxbKzuc": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "FiltrarFuncionariosLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "ExcluirFuncionarioLambdaVersionBQGRF324qCvoEguJPCYlN91vx2ZEUHi9Kv6MONrpc": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ExcluirFuncionarioLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "IdFuncionariosLambdaVersionaPgihmoixFvEK5Lu5kUSk0ZKYFlyVw3OPs9vrcU0A": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "IdFuncionariosLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "RegistrarUsuarioLambdaVersionEGjVWeXW4pwpad7j3su5LsVj8qH5HUWoSnTB6J21WX0": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "RegistrarUsuarioLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "ValidarUsuarioLambdaVersionNRQswq6l9aRtOvS0xO8kAqmFZGeAADOFXILNURhj1dg": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ValidarUsuarioLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "UserEmpresaLambdaVersionHC3q6VrNZcVMXeIG0AIXR42l0KTXj17qQykRVmzE": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "UserEmpresaLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "CadastrarUserEmpresaLambdaVersionT1pVLU7pMuwpQ08EFmRtpATuQEZSyBqwikRHT9pih4": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CadastrarUserEmpresaLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "LoginLambdaVersionOD4gx6OkiVJUP2PYhcnKaghKqhaPynk0BOadmWkdgA": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "LoginLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "LogoutLambdaVersionOUFObe9jYqtbYRk9jcvruq2svvb8ZZzarJosdlHbXk": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "LogoutLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "BuscarPontoLambdaVersionuG6mSJ7J44RkIo5675lnGnlpfKMUcT5hUM2AOG60E": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "BuscarPontoLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "LoginPontoLambdaVersioniJwCI2UYv3LFuGjP1aznbi0YtvbtfGOjjBSfugfxRc": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "LoginPontoLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "BaterPontoLambdaVersion3crQCwHWbOVFeh4lzlkkW0p2Nov4m1MUcTOCq3VHWA": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "BaterPontoLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "PontoFacialLambdaVersionHc1b9J7NyP0yk3eMa83y94tEnlR2cobSBVCRU2HzyAc": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "PontoFacialLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "PontoFuncionarioLambdaVersionOUNGAhZnWcmGYTKMP2xS8JaGCGaVxKsH3TaW7oCUQ": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "PontoFuncionarioLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "PontoAjustarLambdaVersionJqCrSZqADtRl3KVFI0TIPBcrt0qIiQOdYg1b5rUM": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "PontoAjustarLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "PontoHorarioAjustarLambdaVersion19xddoRUMJ4SZi0pJGNS7ULbgdA00oWPk3WeWzUVdpM": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "PontoHorarioAjustarLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "EmpresaInfoLambdaVersionI2Lbb1mJ5qabVWKx361zcj2Yvv4BMCcLMYgKFeuuGo": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "EmpresaInfoLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "EditarEmpresaLambdaVersionJn6tmoF4NXZ4Uphc0KqeCg4oDiT2K4PjJd8x4PrmB0": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "EditarEmpresaLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "RelatorioPontoLambdaVersion0ILvCUqkCmNrAiGK07h0xqPWGa7RADCnYxsz8dZRw": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "RelatorioPontoLambdaFunction"
            },
            "CodeSha256": "6qQTrBSxZLf31RL7UDIhliXmj4enxjbeoSryZeFN9m8="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-Backend",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceFuncoes": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "Funcoes",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncoesListar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncoes"
            },
            "PathPart": "Listar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncoesEditar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncoes"
            },
            "PathPart": "Editar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncoesInfo": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncoes"
            },
            "PathPart": "Info",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncoesExcluir": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncoes"
            },
            "PathPart": "Excluir",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncoesInserir": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncoes"
            },
            "PathPart": "Inserir",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncionarios": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "Funcionarios",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncionariosListar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncionarios"
            },
            "PathPart": "Listar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncionariosIdVar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncionarios"
            },
            "PathPart": "{id}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncionariosIdVarEditar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncionariosIdVar"
            },
            "PathPart": "editar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncionariosIdVarExcluir": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncionariosIdVar"
            },
            "PathPart": "excluir",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncionariosCadastrar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncionarios"
            },
            "PathPart": "Cadastrar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFuncionariosFiltrar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFuncionarios"
            },
            "PathPart": "Filtrar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUser": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "User",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUserAdd": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceUser"
            },
            "PathPart": "Add",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUserValidar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceUser"
            },
            "PathPart": "Validar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUserEmpresa": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceUser"
            },
            "PathPart": "Empresa",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUserEmail": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceUser"
            },
            "PathPart": "Email",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUserLogin": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceUser"
            },
            "PathPart": "Login",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUserLogout": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceUser"
            },
            "PathPart": "Logout",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUserLoginponto": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceUser"
            },
            "PathPart": "loginPonto",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourcePonto": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "Ponto",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourcePontoBuscar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourcePonto"
            },
            "PathPart": "Buscar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourcePontoRegistrar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourcePonto"
            },
            "PathPart": "Registrar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourcePontoRegistrarfacial": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourcePonto"
            },
            "PathPart": "RegistrarFacial",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourcePontoIdentificar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourcePonto"
            },
            "PathPart": "Identificar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourcePontoAjustardia": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourcePonto"
            },
            "PathPart": "AjustarDia",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourcePontoAjustarhorario": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourcePonto"
            },
            "PathPart": "AjustarHorario",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceEmpresa": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "Empresa",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceEmpresaInfo": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceEmpresa"
            },
            "PathPart": "Info",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceEmpresaEditar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceEmpresa"
            },
            "PathPart": "Editar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceRelatorio": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "Relatorio",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceRelatorioPonto": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceRelatorio"
            },
            "PathPart": "Ponto",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncoesListarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncoesListar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncoesEditarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncoesEditar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncoesInfoOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncoesInfo"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncoesExcluirOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncoesExcluir"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncoesInserirOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncoesInserir"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncionariosListarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosListar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncionariosIdVarEditarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PATCH'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncionariosCadastrarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosCadastrar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncionariosFiltrarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosFiltrar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncionariosIdVarExcluirOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUserAddOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserAdd"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUserValidarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserValidar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUserEmpresaOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserEmpresa"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUserEmailOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserEmail"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUserLoginOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserLogin"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUserLogoutOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserLogout"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodPontoBuscarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoBuscar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUserLoginpontoOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserLoginponto"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodPontoRegistrarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoRegistrar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodPontoRegistrarfacialOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoRegistrarfacial"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodPontoIdentificarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoIdentificar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodPontoAjustardiaOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoAjustardia"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodPontoAjustarhorarioOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoAjustarhorario"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodEmpresaInfoOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceEmpresaInfo"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodEmpresaEditarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceEmpresaEditar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodRelatorioPontoOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceRelatorioPonto"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFuncoesListarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncoesListar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "FuncoesLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "FuncoesLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFuncoesEditarPatch": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "PATCH",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncoesEditar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AtualizarFuncoesLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "AtualizarFuncoesLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFuncoesInfoGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncoesInfo"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "IdFuncoesLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "IdFuncoesLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFuncoesExcluirDelete": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "DELETE",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncoesExcluir"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ExcluirFuncoesLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "ExcluirFuncoesLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFuncoesInserirPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncoesInserir"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "InserirFuncoesLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "InserirFuncoesLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFuncionariosListarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosListar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "FuncionariosLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "FuncionariosLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFuncionariosIdVarEditarPatch": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "PATCH",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "EditarFuncionariosLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "EditarFuncionariosLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFuncionariosCadastrarPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosCadastrar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "CadastrarFuncionariosLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "CadastrarFuncionariosLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFuncionariosFiltrarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosFiltrar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "FiltrarFuncionariosLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "FiltrarFuncionariosLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFuncionariosIdVarExcluirDelete": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "DELETE",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ExcluirFuncionarioLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "ExcluirFuncionarioLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFuncionariosIdVarEditarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "IdFuncionariosLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "IdFuncionariosLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUserAddPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserAdd"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "RegistrarUsuarioLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "RegistrarUsuarioLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUserValidarPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserValidar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ValidarUsuarioLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "ValidarUsuarioLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUserEmpresaGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserEmpresa"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "UserEmpresaLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "UserEmpresaLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUserEmailPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserEmail"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "CadastrarUserEmpresaLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "CadastrarUserEmpresaLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUserLoginPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserLogin"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "LoginLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "LoginLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUserLogoutPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserLogout"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "LogoutLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "LogoutLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodPontoBuscarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoBuscar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "BuscarPontoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "BuscarPontoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUserLoginpontoPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUserLoginponto"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "LoginPontoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "LoginPontoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodPontoRegistrarPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoRegistrar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "BaterPontoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "BaterPontoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodPontoRegistrarfacialPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoRegistrarfacial"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "PontoFacialLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "PontoFacialLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodPontoIdentificarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoIdentificar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "PontoFuncionarioLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "PontoFuncionarioLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodPontoAjustardiaPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoAjustardia"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "PontoAjustarLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "PontoAjustarLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodPontoAjustarhorarioPatch": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "PATCH",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourcePontoAjustarhorario"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "PontoHorarioAjustarLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "PontoHorarioAjustarLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodEmpresaInfoGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceEmpresaInfo"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "EmpresaInfoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "EmpresaInfoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodEmpresaEditarPatch": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "PATCH",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceEmpresaEditar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "EditarEmpresaLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "EditarEmpresaLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodRelatorioPontoGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceRelatorioPonto"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "RelatorioPontoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "RelatorioPontoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1739483029900": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodFuncoesListarOptions",
            "ApiGatewayMethodFuncoesEditarOptions",
            "ApiGatewayMethodFuncoesInfoOptions",
            "ApiGatewayMethodFuncoesExcluirOptions",
            "ApiGatewayMethodFuncoesInserirOptions",
            "ApiGatewayMethodFuncionariosListarOptions",
            "ApiGatewayMethodFuncionariosIdVarEditarOptions",
            "ApiGatewayMethodFuncionariosCadastrarOptions",
            "ApiGatewayMethodFuncionariosFiltrarOptions",
            "ApiGatewayMethodFuncionariosIdVarExcluirOptions",
            "ApiGatewayMethodUserAddOptions",
            "ApiGatewayMethodUserValidarOptions",
            "ApiGatewayMethodUserEmpresaOptions",
            "ApiGatewayMethodUserEmailOptions",
            "ApiGatewayMethodUserLoginOptions",
            "ApiGatewayMethodUserLogoutOptions",
            "ApiGatewayMethodPontoBuscarOptions",
            "ApiGatewayMethodUserLoginpontoOptions",
            "ApiGatewayMethodPontoRegistrarOptions",
            "ApiGatewayMethodPontoRegistrarfacialOptions",
            "ApiGatewayMethodPontoIdentificarOptions",
            "ApiGatewayMethodPontoAjustardiaOptions",
            "ApiGatewayMethodPontoAjustarhorarioOptions",
            "ApiGatewayMethodEmpresaInfoOptions",
            "ApiGatewayMethodEmpresaEditarOptions",
            "ApiGatewayMethodRelatorioPontoOptions",
            "ApiGatewayMethodFuncoesListarGet",
            "ApiGatewayMethodFuncoesEditarPatch",
            "ApiGatewayMethodFuncoesInfoGet",
            "ApiGatewayMethodFuncoesExcluirDelete",
            "ApiGatewayMethodFuncoesInserirPost",
            "ApiGatewayMethodFuncionariosListarGet",
            "ApiGatewayMethodFuncionariosIdVarEditarPatch",
            "ApiGatewayMethodFuncionariosCadastrarPost",
            "ApiGatewayMethodFuncionariosFiltrarGet",
            "ApiGatewayMethodFuncionariosIdVarExcluirDelete",
            "ApiGatewayMethodFuncionariosIdVarEditarGet",
            "ApiGatewayMethodUserAddPost",
            "ApiGatewayMethodUserValidarPost",
            "ApiGatewayMethodUserEmpresaGet",
            "ApiGatewayMethodUserEmailPost",
            "ApiGatewayMethodUserLoginPost",
            "ApiGatewayMethodUserLogoutPost",
            "ApiGatewayMethodPontoBuscarGet",
            "ApiGatewayMethodUserLoginpontoPost",
            "ApiGatewayMethodPontoRegistrarPost",
            "ApiGatewayMethodPontoRegistrarfacialPost",
            "ApiGatewayMethodPontoIdentificarGet",
            "ApiGatewayMethodPontoAjustardiaPost",
            "ApiGatewayMethodPontoAjustarhorarioPatch",
            "ApiGatewayMethodEmpresaInfoGet",
            "ApiGatewayMethodEmpresaEditarPatch",
            "ApiGatewayMethodRelatorioPontoGet"
          ]
        },
        "FuncoesLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "FuncoesLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "AtualizarFuncoesLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "AtualizarFuncoesLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "IdFuncoesLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "IdFuncoesLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "ExcluirFuncoesLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ExcluirFuncoesLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "InserirFuncoesLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "InserirFuncoesLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "FuncionariosLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "FuncionariosLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "EditarFuncionariosLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "EditarFuncionariosLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "CadastrarFuncionariosLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CadastrarFuncionariosLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "FiltrarFuncionariosLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "FiltrarFuncionariosLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "ExcluirFuncionarioLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ExcluirFuncionarioLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "IdFuncionariosLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "IdFuncionariosLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "RegistrarUsuarioLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "RegistrarUsuarioLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "ValidarUsuarioLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ValidarUsuarioLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "UserEmpresaLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "UserEmpresaLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "CadastrarUserEmpresaLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CadastrarUserEmpresaLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "LoginLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "LoginLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "LogoutLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "LogoutLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "BuscarPontoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "BuscarPontoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "LoginPontoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "LoginPontoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "BaterPontoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "BaterPontoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "PontoFacialLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "PontoFacialLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "PontoFuncionarioLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "PontoFuncionarioLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "PontoAjustarLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "PontoAjustarLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "PontoHorarioAjustarLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "PontoHorarioAjustarLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "EmpresaInfoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "EmpresaInfoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "EditarEmpresaLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "EditarEmpresaLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "RelatorioPontoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "RelatorioPontoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
          "Export": {
            "Name": "sls-Backend-dev-ServerlessDeploymentBucketName"
          }
        },
        "FuncoesLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "FuncoesLambdaVersionTnVvPyEhwZW0o86uwrLs1fxp2oGXAEfUKLvaoXYM"
          },
          "Export": {
            "Name": "sls-Backend-dev-FuncoesLambdaFunctionQualifiedArn"
          }
        },
        "AtualizarFuncoesLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "AtualizarFuncoesLambdaVersionXIaGTpv5yH5TT4t5jEFaf1MggZbvD7ZEaKrS7UU90Q0"
          },
          "Export": {
            "Name": "sls-Backend-dev-AtualizarFuncoesLambdaFunctionQualifiedArn"
          }
        },
        "IdFuncoesLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "IdFuncoesLambdaVersionYfMStapb8Bq4wliNGkv3QDWnM9R5dAB83QVo9d9bY"
          },
          "Export": {
            "Name": "sls-Backend-dev-IdFuncoesLambdaFunctionQualifiedArn"
          }
        },
        "ExcluirFuncoesLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ExcluirFuncoesLambdaVersionsNMvWbw7ZUNtVViEkI1fUsTXScxwgPoZITuCxXkE"
          },
          "Export": {
            "Name": "sls-Backend-dev-ExcluirFuncoesLambdaFunctionQualifiedArn"
          }
        },
        "InserirFuncoesLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "InserirFuncoesLambdaVersionZPgSLrJMi3pL9dnoqmI5f0Hkp2XbmtPjyBsVzabEl2A"
          },
          "Export": {
            "Name": "sls-Backend-dev-InserirFuncoesLambdaFunctionQualifiedArn"
          }
        },
        "FuncionariosLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "FuncionariosLambdaVersionFgrDj4Q82EOjZ9GExk4j4CD8Lc8ggAksAh1XCogfJY"
          },
          "Export": {
            "Name": "sls-Backend-dev-FuncionariosLambdaFunctionQualifiedArn"
          }
        },
        "EditarFuncionariosLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "EditarFuncionariosLambdaVersionSTAOpU47okmWPajscBbwEv5I5SZU7vzbQKQ8xdr8s"
          },
          "Export": {
            "Name": "sls-Backend-dev-EditarFuncionariosLambdaFunctionQualifiedArn"
          }
        },
        "CadastrarFuncionariosLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CadastrarFuncionariosLambdaVersionrjNwwCFeTcojCN9YkROycZQaVQdTUeQ2Mzk3Flays"
          },
          "Export": {
            "Name": "sls-Backend-dev-CadastrarFuncionariosLambdaFunctionQualifiedArn"
          }
        },
        "FiltrarFuncionariosLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "FiltrarFuncionariosLambdaVersionZbteOj8WGp3Az42rKoTHbwV8Dx2mW9z7aWUxbKzuc"
          },
          "Export": {
            "Name": "sls-Backend-dev-FiltrarFuncionariosLambdaFunctionQualifiedArn"
          }
        },
        "ExcluirFuncionarioLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ExcluirFuncionarioLambdaVersionBQGRF324qCvoEguJPCYlN91vx2ZEUHi9Kv6MONrpc"
          },
          "Export": {
            "Name": "sls-Backend-dev-ExcluirFuncionarioLambdaFunctionQualifiedArn"
          }
        },
        "IdFuncionariosLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "IdFuncionariosLambdaVersionaPgihmoixFvEK5Lu5kUSk0ZKYFlyVw3OPs9vrcU0A"
          },
          "Export": {
            "Name": "sls-Backend-dev-IdFuncionariosLambdaFunctionQualifiedArn"
          }
        },
        "RegistrarUsuarioLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "RegistrarUsuarioLambdaVersionEGjVWeXW4pwpad7j3su5LsVj8qH5HUWoSnTB6J21WX0"
          },
          "Export": {
            "Name": "sls-Backend-dev-RegistrarUsuarioLambdaFunctionQualifiedArn"
          }
        },
        "ValidarUsuarioLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ValidarUsuarioLambdaVersionNRQswq6l9aRtOvS0xO8kAqmFZGeAADOFXILNURhj1dg"
          },
          "Export": {
            "Name": "sls-Backend-dev-ValidarUsuarioLambdaFunctionQualifiedArn"
          }
        },
        "UserEmpresaLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "UserEmpresaLambdaVersionHC3q6VrNZcVMXeIG0AIXR42l0KTXj17qQykRVmzE"
          },
          "Export": {
            "Name": "sls-Backend-dev-UserEmpresaLambdaFunctionQualifiedArn"
          }
        },
        "CadastrarUserEmpresaLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CadastrarUserEmpresaLambdaVersionT1pVLU7pMuwpQ08EFmRtpATuQEZSyBqwikRHT9pih4"
          },
          "Export": {
            "Name": "sls-Backend-dev-CadastrarUserEmpresaLambdaFunctionQualifiedArn"
          }
        },
        "LoginLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "LoginLambdaVersionOD4gx6OkiVJUP2PYhcnKaghKqhaPynk0BOadmWkdgA"
          },
          "Export": {
            "Name": "sls-Backend-dev-LoginLambdaFunctionQualifiedArn"
          }
        },
        "LogoutLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "LogoutLambdaVersionOUFObe9jYqtbYRk9jcvruq2svvb8ZZzarJosdlHbXk"
          },
          "Export": {
            "Name": "sls-Backend-dev-LogoutLambdaFunctionQualifiedArn"
          }
        },
        "BuscarPontoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "BuscarPontoLambdaVersionuG6mSJ7J44RkIo5675lnGnlpfKMUcT5hUM2AOG60E"
          },
          "Export": {
            "Name": "sls-Backend-dev-BuscarPontoLambdaFunctionQualifiedArn"
          }
        },
        "LoginPontoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "LoginPontoLambdaVersioniJwCI2UYv3LFuGjP1aznbi0YtvbtfGOjjBSfugfxRc"
          },
          "Export": {
            "Name": "sls-Backend-dev-LoginPontoLambdaFunctionQualifiedArn"
          }
        },
        "BaterPontoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "BaterPontoLambdaVersion3crQCwHWbOVFeh4lzlkkW0p2Nov4m1MUcTOCq3VHWA"
          },
          "Export": {
            "Name": "sls-Backend-dev-BaterPontoLambdaFunctionQualifiedArn"
          }
        },
        "PontoFacialLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "PontoFacialLambdaVersionHc1b9J7NyP0yk3eMa83y94tEnlR2cobSBVCRU2HzyAc"
          },
          "Export": {
            "Name": "sls-Backend-dev-PontoFacialLambdaFunctionQualifiedArn"
          }
        },
        "PontoFuncionarioLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "PontoFuncionarioLambdaVersionOUNGAhZnWcmGYTKMP2xS8JaGCGaVxKsH3TaW7oCUQ"
          },
          "Export": {
            "Name": "sls-Backend-dev-PontoFuncionarioLambdaFunctionQualifiedArn"
          }
        },
        "PontoAjustarLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "PontoAjustarLambdaVersionJqCrSZqADtRl3KVFI0TIPBcrt0qIiQOdYg1b5rUM"
          },
          "Export": {
            "Name": "sls-Backend-dev-PontoAjustarLambdaFunctionQualifiedArn"
          }
        },
        "PontoHorarioAjustarLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "PontoHorarioAjustarLambdaVersion19xddoRUMJ4SZi0pJGNS7ULbgdA00oWPk3WeWzUVdpM"
          },
          "Export": {
            "Name": "sls-Backend-dev-PontoHorarioAjustarLambdaFunctionQualifiedArn"
          }
        },
        "EmpresaInfoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "EmpresaInfoLambdaVersionI2Lbb1mJ5qabVWKx361zcj2Yvv4BMCcLMYgKFeuuGo"
          },
          "Export": {
            "Name": "sls-Backend-dev-EmpresaInfoLambdaFunctionQualifiedArn"
          }
        },
        "EditarEmpresaLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "EditarEmpresaLambdaVersionJn6tmoF4NXZ4Uphc0KqeCg4oDiT2K4PjJd8x4PrmB0"
          },
          "Export": {
            "Name": "sls-Backend-dev-EditarEmpresaLambdaFunctionQualifiedArn"
          }
        },
        "RelatorioPontoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "RelatorioPontoLambdaVersion0ILvCUqkCmNrAiGK07h0xqPWGa7RADCnYxsz8dZRw"
          },
          "Export": {
            "Name": "sls-Backend-dev-RelatorioPontoLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-Backend-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}