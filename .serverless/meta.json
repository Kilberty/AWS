{
  "C:\\APIS\\Serverless\\BACKEND": {
    "versionSfCore": null,
    "versionFramework": "4.4.19",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "env": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "Backend",
            "useDotenv": true,
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "sa-east-1",
              "environment": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:AdminInitiateAuth"
                  ],
                  "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                }
              ],
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "FuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Funcoes"
                    }
                  },
                  "AtualizarFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-atualizarFuncoes"
                    }
                  },
                  "IdFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-idFuncoes"
                    }
                  },
                  "ExcluirFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncoes"
                    }
                  },
                  "InserirFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-inserirFuncoes"
                    }
                  },
                  "FuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Funcionarios"
                    }
                  },
                  "EditarFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-editarFuncionarios"
                    }
                  },
                  "CadastrarFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-cadastrarFuncionarios"
                    }
                  },
                  "FiltrarFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-filtrarFuncionarios"
                    }
                  },
                  "ExcluirFuncionarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncionario"
                    }
                  },
                  "IdFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-idFuncionarios"
                    }
                  },
                  "RegistrarUsuarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-RegistrarUsuario"
                    }
                  },
                  "ValidarUsuarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-ValidarUsuario"
                    }
                  },
                  "UserEmpresaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-userEmpresa"
                    }
                  },
                  "CadastrarUserEmpresaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-cadastrarUserEmpresa"
                    }
                  },
                  "LoginLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Login"
                    }
                  },
                  "LogoutLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Logout"
                    }
                  },
                  "BuscarPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-buscarPonto"
                    }
                  },
                  "LoginPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-loginPonto"
                    }
                  },
                  "BaterPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-baterPonto"
                    }
                  },
                  "PontoFacialLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoFacial"
                    }
                  },
                  "PontoFuncionarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoFuncionario"
                    }
                  },
                  "PontoAjustarLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoAjustar"
                    }
                  },
                  "PontoHorarioAjustarLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoHorarioAjustar"
                    }
                  },
                  "EmpresaInfoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-empresaInfo"
                    }
                  },
                  "EditarEmpresaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-editarEmpresa"
                    }
                  },
                  "RelatorioPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-relatorioPonto"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "Backend",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "cognito-idp:AdminInitiateAuth"
                                ],
                                "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "Backend",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "FuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/listarFuncoes.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Funcoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "FuncoesLogGroup"
                    ]
                  },
                  "AtualizarFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/editarFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-atualizarFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "AtualizarFuncoesLogGroup"
                    ]
                  },
                  "IdFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/idFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-idFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "IdFuncoesLogGroup"
                    ]
                  },
                  "ExcluirFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/excluirFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-excluirFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "ExcluirFuncoesLogGroup"
                    ]
                  },
                  "InserirFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/inserirFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-inserirFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "InserirFuncoesLogGroup"
                    ]
                  },
                  "FuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Funcionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "FuncionariosLogGroup"
                    ]
                  },
                  "EditarFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-editarFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "EditarFuncionariosLogGroup"
                    ]
                  },
                  "CadastrarFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-cadastrarFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "CadastrarFuncionariosLogGroup"
                    ]
                  },
                  "FiltrarFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-filtrarFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "FiltrarFuncionariosLogGroup"
                    ]
                  },
                  "ExcluirFuncionarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-excluirFuncionario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "ExcluirFuncionarioLogGroup"
                    ]
                  },
                  "IdFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/idFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-idFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "IdFuncionariosLogGroup"
                    ]
                  },
                  "RegistrarUsuarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/registro.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-RegistrarUsuario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "RegistrarUsuarioLogGroup"
                    ]
                  },
                  "ValidarUsuarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/codigoUser.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-ValidarUsuario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "ValidarUsuarioLogGroup"
                    ]
                  },
                  "UserEmpresaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/empresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-userEmpresa",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "UserEmpresaLogGroup"
                    ]
                  },
                  "CadastrarUserEmpresaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/usuarioEmpresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-cadastrarUserEmpresa",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "CadastrarUserEmpresaLogGroup"
                    ]
                  },
                  "LoginLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/login.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Login",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "LoginLogGroup"
                    ]
                  },
                  "LogoutLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/login.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Logout",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "LogoutLogGroup"
                    ]
                  },
                  "BuscarPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/buscarPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-buscarPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "BuscarPontoLogGroup"
                    ]
                  },
                  "LoginPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/loginPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-loginPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "LoginPontoLogGroup"
                    ]
                  },
                  "BaterPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/baterPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-baterPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "BaterPontoLogGroup"
                    ]
                  },
                  "PontoFacialLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/baterPontoFacial.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoFacial",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoFacialLogGroup"
                    ]
                  },
                  "PontoFuncionarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/identificarFuncionario.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoFuncionario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoFuncionarioLogGroup"
                    ]
                  },
                  "PontoAjustarLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoAjustar",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoAjustarLogGroup"
                    ]
                  },
                  "PontoHorarioAjustarLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoHorarioAjustar",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoHorarioAjustarLogGroup"
                    ]
                  },
                  "EmpresaInfoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Empresa/buscarEmpresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-empresaInfo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "EmpresaInfoLogGroup"
                    ]
                  },
                  "EditarEmpresaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Empresa/editarEmpresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-editarEmpresa",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "EditarEmpresaLogGroup"
                    ]
                  },
                  "RelatorioPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Relatorios/relatorioPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-relatorioPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "RelatorioPontoLogGroup"
                    ]
                  },
                  "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "FuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AtualizarFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "IdFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ExcluirFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "InserirFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "FuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EditarFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CadastrarFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "FiltrarFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ExcluirFuncionarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "IdFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RegistrarUsuarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ValidarUsuarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UserEmpresaLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CadastrarUserEmpresaLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LogoutLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "BuscarPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "BaterPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoFacialLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoFuncionarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoAjustarLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoHorarioAjustarLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EmpresaInfoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EditarEmpresaLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RelatorioPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-Backend",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceFuncoes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Funcoes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesListar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Listar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesInfo": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Info",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesExcluir": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Excluir",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesInserir": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Inserir",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionarios": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Funcionarios",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosListar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "Listar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosIdVarEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVar"
                      },
                      "PathPart": "editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosIdVarExcluir": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVar"
                      },
                      "PathPart": "excluir",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosCadastrar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "Cadastrar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosFiltrar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "Filtrar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUser": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "User",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserAdd": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Add",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserValidar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Validar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserEmpresa": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Empresa",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserEmail": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Email",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserLogin": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Login",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserLogout": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Logout",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserLoginponto": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "loginPonto",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePonto": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Ponto",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoBuscar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "Buscar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoRegistrar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "Registrar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoRegistrarfacial": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "RegistrarFacial",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoIdentificar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "Identificar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoAjustardia": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "AjustarDia",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoAjustarhorario": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "AjustarHorario",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEmpresa": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Empresa",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEmpresaInfo": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceEmpresa"
                      },
                      "PathPart": "Info",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEmpresaEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceEmpresa"
                      },
                      "PathPart": "Editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceRelatorio": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Relatorio",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceRelatorioPonto": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceRelatorio"
                      },
                      "PathPart": "Ponto",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesListarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesInfoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesExcluirOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesInserirOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInserir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosListarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosIdVarEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosCadastrarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosCadastrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosFiltrarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosFiltrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosIdVarExcluirOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserAddOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserAdd"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserValidarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserValidar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserEmpresaOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmpresa"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserEmailOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmail"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserLoginOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserLogoutOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogout"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoBuscarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoBuscar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserLoginpontoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLoginponto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoRegistrarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoRegistrarfacialOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrarfacial"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoIdentificarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoIdentificar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoAjustardiaOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustardia"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoAjustarhorarioOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustarhorario"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodEmpresaInfoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodEmpresaEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodRelatorioPontoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceRelatorioPonto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesListarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "FuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "FuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesEditarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AtualizarFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AtualizarFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesInfoGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "IdFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "IdFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesExcluirDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ExcluirFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ExcluirFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesInserirPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInserir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "InserirFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "InserirFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosListarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "FuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "FuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosIdVarEditarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EditarFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EditarFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosCadastrarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosCadastrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CadastrarFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CadastrarFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosFiltrarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosFiltrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "FiltrarFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "FiltrarFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosIdVarExcluirDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ExcluirFuncionarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ExcluirFuncionarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosIdVarEditarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "IdFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "IdFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserAddPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserAdd"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "RegistrarUsuarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "RegistrarUsuarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserValidarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserValidar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ValidarUsuarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ValidarUsuarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserEmpresaGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmpresa"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UserEmpresaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "UserEmpresaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserEmailPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmail"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CadastrarUserEmpresaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CadastrarUserEmpresaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserLoginPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LoginLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LoginLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserLogoutPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogout"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LogoutLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LogoutLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoBuscarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoBuscar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "BuscarPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "BuscarPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserLoginpontoPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLoginponto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LoginPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LoginPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoRegistrarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "BaterPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "BaterPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoRegistrarfacialPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrarfacial"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoFacialLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoFacialLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoIdentificarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoIdentificar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoFuncionarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoFuncionarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoAjustardiaPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustardia"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoAjustarLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoAjustarLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoAjustarhorarioPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustarhorario"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoHorarioAjustarLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoHorarioAjustarLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEmpresaInfoGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EmpresaInfoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EmpresaInfoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEmpresaEditarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EditarEmpresaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EditarEmpresaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodRelatorioPontoGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceRelatorioPonto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "RelatorioPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "RelatorioPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1736983465735": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodFuncoesListarOptions",
                      "ApiGatewayMethodFuncoesEditarOptions",
                      "ApiGatewayMethodFuncoesInfoOptions",
                      "ApiGatewayMethodFuncoesExcluirOptions",
                      "ApiGatewayMethodFuncoesInserirOptions",
                      "ApiGatewayMethodFuncionariosListarOptions",
                      "ApiGatewayMethodFuncionariosIdVarEditarOptions",
                      "ApiGatewayMethodFuncionariosCadastrarOptions",
                      "ApiGatewayMethodFuncionariosFiltrarOptions",
                      "ApiGatewayMethodFuncionariosIdVarExcluirOptions",
                      "ApiGatewayMethodUserAddOptions",
                      "ApiGatewayMethodUserValidarOptions",
                      "ApiGatewayMethodUserEmpresaOptions",
                      "ApiGatewayMethodUserEmailOptions",
                      "ApiGatewayMethodUserLoginOptions",
                      "ApiGatewayMethodUserLogoutOptions",
                      "ApiGatewayMethodPontoBuscarOptions",
                      "ApiGatewayMethodUserLoginpontoOptions",
                      "ApiGatewayMethodPontoRegistrarOptions",
                      "ApiGatewayMethodPontoRegistrarfacialOptions",
                      "ApiGatewayMethodPontoIdentificarOptions",
                      "ApiGatewayMethodPontoAjustardiaOptions",
                      "ApiGatewayMethodPontoAjustarhorarioOptions",
                      "ApiGatewayMethodEmpresaInfoOptions",
                      "ApiGatewayMethodEmpresaEditarOptions",
                      "ApiGatewayMethodRelatorioPontoOptions",
                      "ApiGatewayMethodFuncoesListarGet",
                      "ApiGatewayMethodFuncoesEditarPatch",
                      "ApiGatewayMethodFuncoesInfoGet",
                      "ApiGatewayMethodFuncoesExcluirDelete",
                      "ApiGatewayMethodFuncoesInserirPost",
                      "ApiGatewayMethodFuncionariosListarGet",
                      "ApiGatewayMethodFuncionariosIdVarEditarPatch",
                      "ApiGatewayMethodFuncionariosCadastrarPost",
                      "ApiGatewayMethodFuncionariosFiltrarGet",
                      "ApiGatewayMethodFuncionariosIdVarExcluirDelete",
                      "ApiGatewayMethodFuncionariosIdVarEditarGet",
                      "ApiGatewayMethodUserAddPost",
                      "ApiGatewayMethodUserValidarPost",
                      "ApiGatewayMethodUserEmpresaGet",
                      "ApiGatewayMethodUserEmailPost",
                      "ApiGatewayMethodUserLoginPost",
                      "ApiGatewayMethodUserLogoutPost",
                      "ApiGatewayMethodPontoBuscarGet",
                      "ApiGatewayMethodUserLoginpontoPost",
                      "ApiGatewayMethodPontoRegistrarPost",
                      "ApiGatewayMethodPontoRegistrarfacialPost",
                      "ApiGatewayMethodPontoIdentificarGet",
                      "ApiGatewayMethodPontoAjustardiaPost",
                      "ApiGatewayMethodPontoAjustarhorarioPatch",
                      "ApiGatewayMethodEmpresaInfoGet",
                      "ApiGatewayMethodEmpresaEditarPatch",
                      "ApiGatewayMethodRelatorioPontoGet"
                    ]
                  },
                  "FuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "FuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AtualizarFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AtualizarFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "IdFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "IdFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ExcluirFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ExcluirFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "InserirFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "InserirFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "FuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "FuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EditarFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EditarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CadastrarFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CadastrarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "FiltrarFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "FiltrarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ExcluirFuncionarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ExcluirFuncionarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "IdFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "IdFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "RegistrarUsuarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RegistrarUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ValidarUsuarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ValidarUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UserEmpresaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UserEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CadastrarUserEmpresaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CadastrarUserEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LoginLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LogoutLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LogoutLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "BuscarPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "BuscarPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LoginPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "BaterPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "BaterPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoFacialLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoFacialLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoFuncionarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoFuncionarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoAjustarLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoAjustarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoHorarioAjustarLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoHorarioAjustarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EmpresaInfoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EmpresaInfoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EditarEmpresaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EditarEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "RelatorioPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RelatorioPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                    "Export": {
                      "Name": "sls-Backend-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "FuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-FuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "AtualizarFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-AtualizarFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "IdFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-IdFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ExcluirFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ExcluirFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "InserirFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-InserirFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "FuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-FuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "EditarFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-EditarFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "CadastrarFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-CadastrarFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "FiltrarFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-FiltrarFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "ExcluirFuncionarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ExcluirFuncionarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "IdFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-IdFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "RegistrarUsuarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-RegistrarUsuarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "ValidarUsuarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ValidarUsuarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "UserEmpresaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-UserEmpresaLambdaFunctionQualifiedArn"
                    }
                  },
                  "CadastrarUserEmpresaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-CadastrarUserEmpresaLambdaFunctionQualifiedArn"
                    }
                  },
                  "LoginLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-LoginLambdaFunctionQualifiedArn"
                    }
                  },
                  "LogoutLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-LogoutLambdaFunctionQualifiedArn"
                    }
                  },
                  "BuscarPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-BuscarPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "LoginPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-LoginPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "BaterPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-BaterPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoFacialLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoFacialLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoFuncionarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoFuncionarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoAjustarLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoAjustarLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoHorarioAjustarLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoHorarioAjustarLambdaFunctionQualifiedArn"
                    }
                  },
                  "EmpresaInfoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-EmpresaInfoLambdaFunctionQualifiedArn"
                    }
                  },
                  "EditarEmpresaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-EditarEmpresaLambdaFunctionQualifiedArn"
                    }
                  },
                  "RelatorioPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-RelatorioPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "plugins": [
              "serverless-dotenv-plugin",
              "serverless-pseudo-parameters"
            ],
            "functions": {
              "Funcoes": {
                "handler": "src/handlers/funcoes/listarFuncoes.handler",
                "package": {
                  "include": [
                    "src/handlers/funcoes/listarFuncoes.js",
                    "src/services/Funcoes/listarFuncoesService.js",
                    "src/database/database.js"
                  ]
                },
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Listar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Funcoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc"
              },
              "atualizarFuncoes": {
                "handler": "src/handlers/funcoes/editarFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/editarFuncao.js",
                    "src/services/Funcoes/editarFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Editar",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-atualizarFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY"
              },
              "idFuncoes": {
                "handler": "src/handlers/funcoes/idFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/idFuncao.js",
                    "src/services/Funcoes/idFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Info",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-idFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU"
              },
              "excluirFuncoes": {
                "handler": "src/handlers/funcoes/excluirFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/excluirFuncao.js",
                    "src/services/funcoes/excluirFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Excluir",
                      "method": "delete",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-excluirFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU"
              },
              "inserirFuncoes": {
                "handler": "src/handlers/funcoes/inserirFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/inserirFuncao.js",
                    "src/services/funcoes/inserirFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Inserir",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-inserirFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M"
              },
              "Funcionarios": {
                "handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/autocompleteFuncionariosHandler.js",
                    "src/services/Funcionarios/autocompleteFuncionarios.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/Listar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Funcionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM"
              },
              "editarFuncionarios": {
                "handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/editarFuncionarios.js",
                    "src/services/Funcionarios/editarFuncionarioService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/{id}/editar",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-editarFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A"
              },
              "cadastrarFuncionarios": {
                "handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/cadastrarFuncionarios.js",
                    "src/services/Funcionarios/cadastrarFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/Cadastrar",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-cadastrarFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA"
              },
              "filtrarFuncionarios": {
                "handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/listarFuncionarios.js",
                    "src/services/Funcionarios/listarFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/Filtrar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-filtrarFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE"
              },
              "excluirFuncionario": {
                "handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/excluirFuncionarios.js",
                    "src/services/Funcionarios/excluirFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/{id}/excluir",
                      "method": "delete",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-excluirFuncionario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg"
              },
              "idFuncionarios": {
                "handler": "src/handlers/Funcionarios/idFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/idFuncionarios.js",
                    "src/services/Funcionarios/idFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/{id}/editar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-idFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc"
              },
              "RegistrarUsuario": {
                "handler": "src/handlers/users/registro.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/registro.js",
                    "src/services/Usuarios/registroService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Add",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-RegistrarUsuario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk"
              },
              "ValidarUsuario": {
                "handler": "src/handlers/users/codigoUser.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/codigoUser.js",
                    "src/services/Usuarios/codigoUserService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Validar",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-ValidarUsuario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE"
              },
              "userEmpresa": {
                "handler": "src/handlers/users/empresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/empresa.js",
                    "src/services/Usuarios/empresa.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Empresa",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-userEmpresa",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc"
              },
              "cadastrarUserEmpresa": {
                "handler": "src/handlers/users/usuarioEmpresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/codigoUser.js",
                    "src/services/Usuarios/codigoUserService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Email",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-cadastrarUserEmpresa",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE"
              },
              "Login": {
                "handler": "src/handlers/users/login.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/login.js",
                    "src/services/Usuarios/loginService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Login",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Login",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik"
              },
              "Logout": {
                "handler": "src/handlers/users/login.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/login.js",
                    "src/services/Usuarios/loginService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Logout",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Logout",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4"
              },
              "buscarPonto": {
                "handler": "src/handlers/Ponto/buscarPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/buscarPonto.js",
                    "src/services/Ponto/consultaPontoService.js",
                    "src/services/Ponto/jornadaInfoService.js",
                    "src/services/Ponto/calculoBancoHoras.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/Buscar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-buscarPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ"
              },
              "loginPonto": {
                "handler": "src/handlers/users/loginPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/login.js",
                    "src/services/Usuarios/loginService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/loginPonto",
                      "method": "post",
                      "cors": {
                        "origin": "https://registrodepontocontroltek.netlify.app",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-loginPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY"
              },
              "baterPonto": {
                "handler": "src/handlers/Ponto/baterPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/baterPonto.js",
                    "src/services/Ponto/baterPontoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/Registrar",
                      "method": "post",
                      "cors": {
                        "origin": "https://registrodepontocontroltek.netlify.app",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-baterPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs"
              },
              "PontoFacial": {
                "handler": "src/handlers/Ponto/baterPontoFacial.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/baterPontoFacial.js",
                    "src/services/Ponto/baterPontoFacialService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/RegistrarFacial",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoFacial",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU"
              },
              "PontoFuncionario": {
                "handler": "src/handlers/Ponto/identificarFuncionario.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/identificarFuncionario.js",
                    "src/services/Ponto/idFuncionarioCodigo.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/Identificar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoFuncionario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI"
              },
              "PontoAjustar": {
                "handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/ajusteDiaPonto.js",
                    "src/services/Ponto/ajusteDiaPontoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/AjustarDia",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoAjustar",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8"
              },
              "PontoHorarioAjustar": {
                "handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/ajusteHorarioPonto.js",
                    "src/services/Ponto/ajusteHorarioPontoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/AjustarHorario",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoHorarioAjustar",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw"
              },
              "empresaInfo": {
                "handler": "src/handlers/Empresa/buscarEmpresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Empresa/buscarEmpresa.js",
                    "src/services/Empresa/buscarEmpresaService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Empresa/Info",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-empresaInfo",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE"
              },
              "editarEmpresa": {
                "handler": "src/handlers/Empresa/editarEmpresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Empresa/editarEmpresa.js",
                    "src/services/Empresa/editarEmpresaService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Empresa/Editar",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-editarEmpresa",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ"
              },
              "relatorioPonto": {
                "handler": "src/handlers/Relatorios/relatorioPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Empresa/editarEmpresa.js",
                    "src/services/Empresa/editarEmpresaService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Relatorio/Ponto",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-relatorioPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI"
              }
            },
            "package": {
              "exclude": [
                "node_modules/**",
                "mocks/**",
                "nodejs/**"
              ],
              "artifactsS3KeyDirname": "serverless/Backend/dev/code-artifacts",
              "deploymentBucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "artifact": "C:\\APIS\\Serverless\\BACKEND\\.serverless\\Backend.zip",
              "artifactDirectoryName": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z"
            },
            "custom": {
              "stage": "dev",
              "webpack": {
                "includeModules": false,
                "packager": "npm",
                "webpackConfig": "./webpack.config.js"
              }
            }
          },
          "configFileDirPath": "C:\\APIS\\Serverless\\BACKEND",
          "config": {
            "type": "env"
          },
          "options": {
            "stage": "dev"
          },
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:env",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "opt": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "Backend",
            "useDotenv": true,
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "sa-east-1",
              "environment": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:AdminInitiateAuth"
                  ],
                  "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                }
              ],
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "FuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Funcoes"
                    }
                  },
                  "AtualizarFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-atualizarFuncoes"
                    }
                  },
                  "IdFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-idFuncoes"
                    }
                  },
                  "ExcluirFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncoes"
                    }
                  },
                  "InserirFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-inserirFuncoes"
                    }
                  },
                  "FuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Funcionarios"
                    }
                  },
                  "EditarFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-editarFuncionarios"
                    }
                  },
                  "CadastrarFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-cadastrarFuncionarios"
                    }
                  },
                  "FiltrarFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-filtrarFuncionarios"
                    }
                  },
                  "ExcluirFuncionarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncionario"
                    }
                  },
                  "IdFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-idFuncionarios"
                    }
                  },
                  "RegistrarUsuarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-RegistrarUsuario"
                    }
                  },
                  "ValidarUsuarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-ValidarUsuario"
                    }
                  },
                  "UserEmpresaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-userEmpresa"
                    }
                  },
                  "CadastrarUserEmpresaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-cadastrarUserEmpresa"
                    }
                  },
                  "LoginLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Login"
                    }
                  },
                  "LogoutLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Logout"
                    }
                  },
                  "BuscarPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-buscarPonto"
                    }
                  },
                  "LoginPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-loginPonto"
                    }
                  },
                  "BaterPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-baterPonto"
                    }
                  },
                  "PontoFacialLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoFacial"
                    }
                  },
                  "PontoFuncionarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoFuncionario"
                    }
                  },
                  "PontoAjustarLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoAjustar"
                    }
                  },
                  "PontoHorarioAjustarLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoHorarioAjustar"
                    }
                  },
                  "EmpresaInfoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-empresaInfo"
                    }
                  },
                  "EditarEmpresaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-editarEmpresa"
                    }
                  },
                  "RelatorioPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-relatorioPonto"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "Backend",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "cognito-idp:AdminInitiateAuth"
                                ],
                                "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "Backend",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "FuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/listarFuncoes.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Funcoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "FuncoesLogGroup"
                    ]
                  },
                  "AtualizarFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/editarFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-atualizarFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "AtualizarFuncoesLogGroup"
                    ]
                  },
                  "IdFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/idFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-idFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "IdFuncoesLogGroup"
                    ]
                  },
                  "ExcluirFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/excluirFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-excluirFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "ExcluirFuncoesLogGroup"
                    ]
                  },
                  "InserirFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/inserirFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-inserirFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "InserirFuncoesLogGroup"
                    ]
                  },
                  "FuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Funcionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "FuncionariosLogGroup"
                    ]
                  },
                  "EditarFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-editarFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "EditarFuncionariosLogGroup"
                    ]
                  },
                  "CadastrarFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-cadastrarFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "CadastrarFuncionariosLogGroup"
                    ]
                  },
                  "FiltrarFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-filtrarFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "FiltrarFuncionariosLogGroup"
                    ]
                  },
                  "ExcluirFuncionarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-excluirFuncionario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "ExcluirFuncionarioLogGroup"
                    ]
                  },
                  "IdFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/idFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-idFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "IdFuncionariosLogGroup"
                    ]
                  },
                  "RegistrarUsuarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/registro.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-RegistrarUsuario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "RegistrarUsuarioLogGroup"
                    ]
                  },
                  "ValidarUsuarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/codigoUser.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-ValidarUsuario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "ValidarUsuarioLogGroup"
                    ]
                  },
                  "UserEmpresaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/empresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-userEmpresa",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "UserEmpresaLogGroup"
                    ]
                  },
                  "CadastrarUserEmpresaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/usuarioEmpresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-cadastrarUserEmpresa",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "CadastrarUserEmpresaLogGroup"
                    ]
                  },
                  "LoginLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/login.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Login",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "LoginLogGroup"
                    ]
                  },
                  "LogoutLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/login.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Logout",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "LogoutLogGroup"
                    ]
                  },
                  "BuscarPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/buscarPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-buscarPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "BuscarPontoLogGroup"
                    ]
                  },
                  "LoginPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/loginPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-loginPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "LoginPontoLogGroup"
                    ]
                  },
                  "BaterPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/baterPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-baterPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "BaterPontoLogGroup"
                    ]
                  },
                  "PontoFacialLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/baterPontoFacial.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoFacial",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoFacialLogGroup"
                    ]
                  },
                  "PontoFuncionarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/identificarFuncionario.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoFuncionario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoFuncionarioLogGroup"
                    ]
                  },
                  "PontoAjustarLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoAjustar",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoAjustarLogGroup"
                    ]
                  },
                  "PontoHorarioAjustarLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoHorarioAjustar",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoHorarioAjustarLogGroup"
                    ]
                  },
                  "EmpresaInfoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Empresa/buscarEmpresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-empresaInfo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "EmpresaInfoLogGroup"
                    ]
                  },
                  "EditarEmpresaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Empresa/editarEmpresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-editarEmpresa",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "EditarEmpresaLogGroup"
                    ]
                  },
                  "RelatorioPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Relatorios/relatorioPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-relatorioPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "RelatorioPontoLogGroup"
                    ]
                  },
                  "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "FuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AtualizarFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "IdFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ExcluirFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "InserirFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "FuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EditarFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CadastrarFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "FiltrarFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ExcluirFuncionarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "IdFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RegistrarUsuarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ValidarUsuarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UserEmpresaLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CadastrarUserEmpresaLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LogoutLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "BuscarPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "BaterPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoFacialLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoFuncionarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoAjustarLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoHorarioAjustarLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EmpresaInfoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EditarEmpresaLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RelatorioPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-Backend",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceFuncoes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Funcoes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesListar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Listar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesInfo": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Info",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesExcluir": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Excluir",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesInserir": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Inserir",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionarios": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Funcionarios",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosListar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "Listar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosIdVarEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVar"
                      },
                      "PathPart": "editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosIdVarExcluir": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVar"
                      },
                      "PathPart": "excluir",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosCadastrar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "Cadastrar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosFiltrar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "Filtrar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUser": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "User",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserAdd": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Add",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserValidar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Validar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserEmpresa": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Empresa",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserEmail": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Email",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserLogin": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Login",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserLogout": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Logout",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserLoginponto": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "loginPonto",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePonto": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Ponto",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoBuscar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "Buscar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoRegistrar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "Registrar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoRegistrarfacial": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "RegistrarFacial",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoIdentificar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "Identificar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoAjustardia": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "AjustarDia",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoAjustarhorario": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "AjustarHorario",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEmpresa": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Empresa",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEmpresaInfo": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceEmpresa"
                      },
                      "PathPart": "Info",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEmpresaEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceEmpresa"
                      },
                      "PathPart": "Editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceRelatorio": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Relatorio",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceRelatorioPonto": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceRelatorio"
                      },
                      "PathPart": "Ponto",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesListarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesInfoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesExcluirOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesInserirOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInserir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosListarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosIdVarEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosCadastrarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosCadastrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosFiltrarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosFiltrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosIdVarExcluirOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserAddOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserAdd"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserValidarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserValidar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserEmpresaOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmpresa"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserEmailOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmail"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserLoginOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserLogoutOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogout"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoBuscarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoBuscar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserLoginpontoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLoginponto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoRegistrarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoRegistrarfacialOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrarfacial"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoIdentificarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoIdentificar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoAjustardiaOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustardia"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoAjustarhorarioOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustarhorario"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodEmpresaInfoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodEmpresaEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodRelatorioPontoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceRelatorioPonto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesListarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "FuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "FuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesEditarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AtualizarFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AtualizarFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesInfoGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "IdFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "IdFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesExcluirDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ExcluirFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ExcluirFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesInserirPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInserir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "InserirFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "InserirFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosListarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "FuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "FuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosIdVarEditarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EditarFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EditarFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosCadastrarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosCadastrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CadastrarFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CadastrarFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosFiltrarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosFiltrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "FiltrarFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "FiltrarFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosIdVarExcluirDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ExcluirFuncionarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ExcluirFuncionarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosIdVarEditarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "IdFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "IdFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserAddPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserAdd"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "RegistrarUsuarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "RegistrarUsuarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserValidarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserValidar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ValidarUsuarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ValidarUsuarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserEmpresaGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmpresa"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UserEmpresaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "UserEmpresaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserEmailPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmail"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CadastrarUserEmpresaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CadastrarUserEmpresaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserLoginPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LoginLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LoginLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserLogoutPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogout"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LogoutLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LogoutLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoBuscarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoBuscar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "BuscarPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "BuscarPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserLoginpontoPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLoginponto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LoginPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LoginPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoRegistrarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "BaterPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "BaterPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoRegistrarfacialPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrarfacial"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoFacialLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoFacialLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoIdentificarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoIdentificar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoFuncionarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoFuncionarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoAjustardiaPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustardia"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoAjustarLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoAjustarLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoAjustarhorarioPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustarhorario"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoHorarioAjustarLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoHorarioAjustarLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEmpresaInfoGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EmpresaInfoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EmpresaInfoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEmpresaEditarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EditarEmpresaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EditarEmpresaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodRelatorioPontoGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceRelatorioPonto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "RelatorioPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "RelatorioPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1736983465735": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodFuncoesListarOptions",
                      "ApiGatewayMethodFuncoesEditarOptions",
                      "ApiGatewayMethodFuncoesInfoOptions",
                      "ApiGatewayMethodFuncoesExcluirOptions",
                      "ApiGatewayMethodFuncoesInserirOptions",
                      "ApiGatewayMethodFuncionariosListarOptions",
                      "ApiGatewayMethodFuncionariosIdVarEditarOptions",
                      "ApiGatewayMethodFuncionariosCadastrarOptions",
                      "ApiGatewayMethodFuncionariosFiltrarOptions",
                      "ApiGatewayMethodFuncionariosIdVarExcluirOptions",
                      "ApiGatewayMethodUserAddOptions",
                      "ApiGatewayMethodUserValidarOptions",
                      "ApiGatewayMethodUserEmpresaOptions",
                      "ApiGatewayMethodUserEmailOptions",
                      "ApiGatewayMethodUserLoginOptions",
                      "ApiGatewayMethodUserLogoutOptions",
                      "ApiGatewayMethodPontoBuscarOptions",
                      "ApiGatewayMethodUserLoginpontoOptions",
                      "ApiGatewayMethodPontoRegistrarOptions",
                      "ApiGatewayMethodPontoRegistrarfacialOptions",
                      "ApiGatewayMethodPontoIdentificarOptions",
                      "ApiGatewayMethodPontoAjustardiaOptions",
                      "ApiGatewayMethodPontoAjustarhorarioOptions",
                      "ApiGatewayMethodEmpresaInfoOptions",
                      "ApiGatewayMethodEmpresaEditarOptions",
                      "ApiGatewayMethodRelatorioPontoOptions",
                      "ApiGatewayMethodFuncoesListarGet",
                      "ApiGatewayMethodFuncoesEditarPatch",
                      "ApiGatewayMethodFuncoesInfoGet",
                      "ApiGatewayMethodFuncoesExcluirDelete",
                      "ApiGatewayMethodFuncoesInserirPost",
                      "ApiGatewayMethodFuncionariosListarGet",
                      "ApiGatewayMethodFuncionariosIdVarEditarPatch",
                      "ApiGatewayMethodFuncionariosCadastrarPost",
                      "ApiGatewayMethodFuncionariosFiltrarGet",
                      "ApiGatewayMethodFuncionariosIdVarExcluirDelete",
                      "ApiGatewayMethodFuncionariosIdVarEditarGet",
                      "ApiGatewayMethodUserAddPost",
                      "ApiGatewayMethodUserValidarPost",
                      "ApiGatewayMethodUserEmpresaGet",
                      "ApiGatewayMethodUserEmailPost",
                      "ApiGatewayMethodUserLoginPost",
                      "ApiGatewayMethodUserLogoutPost",
                      "ApiGatewayMethodPontoBuscarGet",
                      "ApiGatewayMethodUserLoginpontoPost",
                      "ApiGatewayMethodPontoRegistrarPost",
                      "ApiGatewayMethodPontoRegistrarfacialPost",
                      "ApiGatewayMethodPontoIdentificarGet",
                      "ApiGatewayMethodPontoAjustardiaPost",
                      "ApiGatewayMethodPontoAjustarhorarioPatch",
                      "ApiGatewayMethodEmpresaInfoGet",
                      "ApiGatewayMethodEmpresaEditarPatch",
                      "ApiGatewayMethodRelatorioPontoGet"
                    ]
                  },
                  "FuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "FuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AtualizarFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AtualizarFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "IdFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "IdFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ExcluirFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ExcluirFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "InserirFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "InserirFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "FuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "FuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EditarFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EditarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CadastrarFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CadastrarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "FiltrarFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "FiltrarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ExcluirFuncionarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ExcluirFuncionarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "IdFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "IdFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "RegistrarUsuarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RegistrarUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ValidarUsuarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ValidarUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UserEmpresaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UserEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CadastrarUserEmpresaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CadastrarUserEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LoginLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LogoutLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LogoutLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "BuscarPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "BuscarPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LoginPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "BaterPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "BaterPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoFacialLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoFacialLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoFuncionarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoFuncionarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoAjustarLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoAjustarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoHorarioAjustarLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoHorarioAjustarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EmpresaInfoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EmpresaInfoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EditarEmpresaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EditarEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "RelatorioPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RelatorioPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                    "Export": {
                      "Name": "sls-Backend-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "FuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-FuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "AtualizarFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-AtualizarFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "IdFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-IdFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ExcluirFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ExcluirFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "InserirFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-InserirFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "FuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-FuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "EditarFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-EditarFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "CadastrarFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-CadastrarFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "FiltrarFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-FiltrarFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "ExcluirFuncionarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ExcluirFuncionarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "IdFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-IdFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "RegistrarUsuarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-RegistrarUsuarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "ValidarUsuarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ValidarUsuarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "UserEmpresaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-UserEmpresaLambdaFunctionQualifiedArn"
                    }
                  },
                  "CadastrarUserEmpresaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-CadastrarUserEmpresaLambdaFunctionQualifiedArn"
                    }
                  },
                  "LoginLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-LoginLambdaFunctionQualifiedArn"
                    }
                  },
                  "LogoutLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-LogoutLambdaFunctionQualifiedArn"
                    }
                  },
                  "BuscarPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-BuscarPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "LoginPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-LoginPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "BaterPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-BaterPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoFacialLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoFacialLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoFuncionarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoFuncionarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoAjustarLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoAjustarLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoHorarioAjustarLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoHorarioAjustarLambdaFunctionQualifiedArn"
                    }
                  },
                  "EmpresaInfoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-EmpresaInfoLambdaFunctionQualifiedArn"
                    }
                  },
                  "EditarEmpresaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-EditarEmpresaLambdaFunctionQualifiedArn"
                    }
                  },
                  "RelatorioPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-RelatorioPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "plugins": [
              "serverless-dotenv-plugin",
              "serverless-pseudo-parameters"
            ],
            "functions": {
              "Funcoes": {
                "handler": "src/handlers/funcoes/listarFuncoes.handler",
                "package": {
                  "include": [
                    "src/handlers/funcoes/listarFuncoes.js",
                    "src/services/Funcoes/listarFuncoesService.js",
                    "src/database/database.js"
                  ]
                },
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Listar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Funcoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc"
              },
              "atualizarFuncoes": {
                "handler": "src/handlers/funcoes/editarFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/editarFuncao.js",
                    "src/services/Funcoes/editarFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Editar",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-atualizarFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY"
              },
              "idFuncoes": {
                "handler": "src/handlers/funcoes/idFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/idFuncao.js",
                    "src/services/Funcoes/idFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Info",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-idFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU"
              },
              "excluirFuncoes": {
                "handler": "src/handlers/funcoes/excluirFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/excluirFuncao.js",
                    "src/services/funcoes/excluirFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Excluir",
                      "method": "delete",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-excluirFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU"
              },
              "inserirFuncoes": {
                "handler": "src/handlers/funcoes/inserirFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/inserirFuncao.js",
                    "src/services/funcoes/inserirFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Inserir",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-inserirFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M"
              },
              "Funcionarios": {
                "handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/autocompleteFuncionariosHandler.js",
                    "src/services/Funcionarios/autocompleteFuncionarios.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/Listar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Funcionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM"
              },
              "editarFuncionarios": {
                "handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/editarFuncionarios.js",
                    "src/services/Funcionarios/editarFuncionarioService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/{id}/editar",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-editarFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A"
              },
              "cadastrarFuncionarios": {
                "handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/cadastrarFuncionarios.js",
                    "src/services/Funcionarios/cadastrarFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/Cadastrar",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-cadastrarFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA"
              },
              "filtrarFuncionarios": {
                "handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/listarFuncionarios.js",
                    "src/services/Funcionarios/listarFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/Filtrar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-filtrarFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE"
              },
              "excluirFuncionario": {
                "handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/excluirFuncionarios.js",
                    "src/services/Funcionarios/excluirFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/{id}/excluir",
                      "method": "delete",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-excluirFuncionario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg"
              },
              "idFuncionarios": {
                "handler": "src/handlers/Funcionarios/idFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/idFuncionarios.js",
                    "src/services/Funcionarios/idFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/{id}/editar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-idFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc"
              },
              "RegistrarUsuario": {
                "handler": "src/handlers/users/registro.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/registro.js",
                    "src/services/Usuarios/registroService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Add",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-RegistrarUsuario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk"
              },
              "ValidarUsuario": {
                "handler": "src/handlers/users/codigoUser.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/codigoUser.js",
                    "src/services/Usuarios/codigoUserService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Validar",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-ValidarUsuario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE"
              },
              "userEmpresa": {
                "handler": "src/handlers/users/empresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/empresa.js",
                    "src/services/Usuarios/empresa.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Empresa",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-userEmpresa",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc"
              },
              "cadastrarUserEmpresa": {
                "handler": "src/handlers/users/usuarioEmpresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/codigoUser.js",
                    "src/services/Usuarios/codigoUserService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Email",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-cadastrarUserEmpresa",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE"
              },
              "Login": {
                "handler": "src/handlers/users/login.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/login.js",
                    "src/services/Usuarios/loginService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Login",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Login",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik"
              },
              "Logout": {
                "handler": "src/handlers/users/login.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/login.js",
                    "src/services/Usuarios/loginService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Logout",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Logout",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4"
              },
              "buscarPonto": {
                "handler": "src/handlers/Ponto/buscarPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/buscarPonto.js",
                    "src/services/Ponto/consultaPontoService.js",
                    "src/services/Ponto/jornadaInfoService.js",
                    "src/services/Ponto/calculoBancoHoras.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/Buscar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-buscarPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ"
              },
              "loginPonto": {
                "handler": "src/handlers/users/loginPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/login.js",
                    "src/services/Usuarios/loginService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/loginPonto",
                      "method": "post",
                      "cors": {
                        "origin": "https://registrodepontocontroltek.netlify.app",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-loginPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY"
              },
              "baterPonto": {
                "handler": "src/handlers/Ponto/baterPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/baterPonto.js",
                    "src/services/Ponto/baterPontoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/Registrar",
                      "method": "post",
                      "cors": {
                        "origin": "https://registrodepontocontroltek.netlify.app",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-baterPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs"
              },
              "PontoFacial": {
                "handler": "src/handlers/Ponto/baterPontoFacial.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/baterPontoFacial.js",
                    "src/services/Ponto/baterPontoFacialService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/RegistrarFacial",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoFacial",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU"
              },
              "PontoFuncionario": {
                "handler": "src/handlers/Ponto/identificarFuncionario.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/identificarFuncionario.js",
                    "src/services/Ponto/idFuncionarioCodigo.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/Identificar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoFuncionario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI"
              },
              "PontoAjustar": {
                "handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/ajusteDiaPonto.js",
                    "src/services/Ponto/ajusteDiaPontoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/AjustarDia",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoAjustar",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8"
              },
              "PontoHorarioAjustar": {
                "handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/ajusteHorarioPonto.js",
                    "src/services/Ponto/ajusteHorarioPontoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/AjustarHorario",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoHorarioAjustar",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw"
              },
              "empresaInfo": {
                "handler": "src/handlers/Empresa/buscarEmpresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Empresa/buscarEmpresa.js",
                    "src/services/Empresa/buscarEmpresaService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Empresa/Info",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-empresaInfo",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE"
              },
              "editarEmpresa": {
                "handler": "src/handlers/Empresa/editarEmpresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Empresa/editarEmpresa.js",
                    "src/services/Empresa/editarEmpresaService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Empresa/Editar",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-editarEmpresa",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ"
              },
              "relatorioPonto": {
                "handler": "src/handlers/Relatorios/relatorioPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Empresa/editarEmpresa.js",
                    "src/services/Empresa/editarEmpresaService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Relatorio/Ponto",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-relatorioPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI"
              }
            },
            "package": {
              "exclude": [
                "node_modules/**",
                "mocks/**",
                "nodejs/**"
              ],
              "artifactsS3KeyDirname": "serverless/Backend/dev/code-artifacts",
              "deploymentBucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "artifact": "C:\\APIS\\Serverless\\BACKEND\\.serverless\\Backend.zip",
              "artifactDirectoryName": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z"
            },
            "custom": {
              "stage": "dev",
              "webpack": {
                "includeModules": false,
                "packager": "npm",
                "webpackConfig": "./webpack.config.js"
              }
            }
          },
          "configFileDirPath": "C:\\APIS\\Serverless\\BACKEND",
          "config": {
            "type": "opt"
          },
          "options": {
            "stage": "dev"
          },
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:opt",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "Backend",
            "useDotenv": true,
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "sa-east-1",
              "environment": {
                "JWT_SECRET": "<REDACTED>",
                "DB_HOST": "193.203.175.60",
                "DB_USER": "u945487164_Kilberty",
                "DB_PWD": "Kilberty32316943",
                "DB_PORT": "3306",
                "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                "CLIENT_SECRET": "<REDACTED>",
                "POOL_ID": "sa-east-1_JDeOso4LH",
                "ORIGIN": "http://localhost:5173",
                "NODE_PATH": "./:/opt/node20/node_modules"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:AdminInitiateAuth"
                  ],
                  "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                }
              ],
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "FuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Funcoes"
                    }
                  },
                  "AtualizarFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-atualizarFuncoes"
                    }
                  },
                  "IdFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-idFuncoes"
                    }
                  },
                  "ExcluirFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncoes"
                    }
                  },
                  "InserirFuncoesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-inserirFuncoes"
                    }
                  },
                  "FuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Funcionarios"
                    }
                  },
                  "EditarFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-editarFuncionarios"
                    }
                  },
                  "CadastrarFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-cadastrarFuncionarios"
                    }
                  },
                  "FiltrarFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-filtrarFuncionarios"
                    }
                  },
                  "ExcluirFuncionarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncionario"
                    }
                  },
                  "IdFuncionariosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-idFuncionarios"
                    }
                  },
                  "RegistrarUsuarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-RegistrarUsuario"
                    }
                  },
                  "ValidarUsuarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-ValidarUsuario"
                    }
                  },
                  "UserEmpresaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-userEmpresa"
                    }
                  },
                  "CadastrarUserEmpresaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-cadastrarUserEmpresa"
                    }
                  },
                  "LoginLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Login"
                    }
                  },
                  "LogoutLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-Logout"
                    }
                  },
                  "BuscarPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-buscarPonto"
                    }
                  },
                  "LoginPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-loginPonto"
                    }
                  },
                  "BaterPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-baterPonto"
                    }
                  },
                  "PontoFacialLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoFacial"
                    }
                  },
                  "PontoFuncionarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoFuncionario"
                    }
                  },
                  "PontoAjustarLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoAjustar"
                    }
                  },
                  "PontoHorarioAjustarLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-PontoHorarioAjustar"
                    }
                  },
                  "EmpresaInfoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-empresaInfo"
                    }
                  },
                  "EditarEmpresaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-editarEmpresa"
                    }
                  },
                  "RelatorioPontoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/Backend-dev-relatorioPonto"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "Backend",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "cognito-idp:AdminInitiateAuth"
                                ],
                                "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "Backend",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "FuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/listarFuncoes.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Funcoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "FuncoesLogGroup"
                    ]
                  },
                  "AtualizarFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/editarFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-atualizarFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "AtualizarFuncoesLogGroup"
                    ]
                  },
                  "IdFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/idFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-idFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "IdFuncoesLogGroup"
                    ]
                  },
                  "ExcluirFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/excluirFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-excluirFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "ExcluirFuncoesLogGroup"
                    ]
                  },
                  "InserirFuncoesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/funcoes/inserirFuncao.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-inserirFuncoes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "InserirFuncoesLogGroup"
                    ]
                  },
                  "FuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Funcionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "FuncionariosLogGroup"
                    ]
                  },
                  "EditarFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-editarFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "EditarFuncionariosLogGroup"
                    ]
                  },
                  "CadastrarFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-cadastrarFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "CadastrarFuncionariosLogGroup"
                    ]
                  },
                  "FiltrarFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-filtrarFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "FiltrarFuncionariosLogGroup"
                    ]
                  },
                  "ExcluirFuncionarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-excluirFuncionario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "ExcluirFuncionarioLogGroup"
                    ]
                  },
                  "IdFuncionariosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Funcionarios/idFuncionarios.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-idFuncionarios",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "IdFuncionariosLogGroup"
                    ]
                  },
                  "RegistrarUsuarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/registro.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-RegistrarUsuario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "RegistrarUsuarioLogGroup"
                    ]
                  },
                  "ValidarUsuarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/codigoUser.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-ValidarUsuario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "ValidarUsuarioLogGroup"
                    ]
                  },
                  "UserEmpresaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/empresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-userEmpresa",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "UserEmpresaLogGroup"
                    ]
                  },
                  "CadastrarUserEmpresaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/usuarioEmpresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-cadastrarUserEmpresa",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "CadastrarUserEmpresaLogGroup"
                    ]
                  },
                  "LoginLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/login.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Login",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "LoginLogGroup"
                    ]
                  },
                  "LogoutLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/login.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-Logout",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "LogoutLogGroup"
                    ]
                  },
                  "BuscarPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/buscarPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-buscarPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "BuscarPontoLogGroup"
                    ]
                  },
                  "LoginPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/users/loginPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-loginPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "LoginPontoLogGroup"
                    ]
                  },
                  "BaterPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/baterPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-baterPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "BaterPontoLogGroup"
                    ]
                  },
                  "PontoFacialLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/baterPontoFacial.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoFacial",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoFacialLogGroup"
                    ]
                  },
                  "PontoFuncionarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/identificarFuncionario.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoFuncionario",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoFuncionarioLogGroup"
                    ]
                  },
                  "PontoAjustarLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoAjustar",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoAjustarLogGroup"
                    ]
                  },
                  "PontoHorarioAjustarLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-PontoHorarioAjustar",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "PontoHorarioAjustarLogGroup"
                    ]
                  },
                  "EmpresaInfoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Empresa/buscarEmpresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-empresaInfo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "EmpresaInfoLogGroup"
                    ]
                  },
                  "EditarEmpresaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Empresa/editarEmpresa.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-editarEmpresa",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "EditarEmpresaLogGroup"
                    ]
                  },
                  "RelatorioPontoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                        "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                      },
                      "Handler": "src/handlers/Relatorios/relatorioPonto.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "Backend-dev-relatorioPonto",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DB_HOST": "193.203.175.60",
                          "DB_USER": "u945487164_Kilberty",
                          "DB_PWD": "Kilberty32316943",
                          "DB_PORT": "3306",
                          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                          "CLIENT_SECRET": "<REDACTED>",
                          "POOL_ID": "sa-east-1_JDeOso4LH",
                          "ORIGIN": "http://localhost:5173",
                          "NODE_PATH": "./:/opt/node20/node_modules"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                      ]
                    },
                    "DependsOn": [
                      "RelatorioPontoLogGroup"
                    ]
                  },
                  "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "FuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AtualizarFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "IdFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ExcluirFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "InserirFuncoesLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "FuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EditarFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CadastrarFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "FiltrarFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ExcluirFuncionarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "IdFuncionariosLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RegistrarUsuarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ValidarUsuarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UserEmpresaLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CadastrarUserEmpresaLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LogoutLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "BuscarPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "BaterPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoFacialLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoFuncionarioLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoAjustarLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PontoHorarioAjustarLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EmpresaInfoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EditarEmpresaLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RelatorioPontoLambdaFunction"
                      },
                      "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-Backend",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceFuncoes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Funcoes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesListar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Listar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesInfo": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Info",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesExcluir": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Excluir",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncoesInserir": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncoes"
                      },
                      "PathPart": "Inserir",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionarios": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Funcionarios",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosListar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "Listar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosIdVarEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVar"
                      },
                      "PathPart": "editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosIdVarExcluir": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVar"
                      },
                      "PathPart": "excluir",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosCadastrar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "Cadastrar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceFuncionariosFiltrar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceFuncionarios"
                      },
                      "PathPart": "Filtrar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUser": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "User",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserAdd": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Add",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserValidar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Validar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserEmpresa": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Empresa",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserEmail": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Email",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserLogin": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Login",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserLogout": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "Logout",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUserLoginponto": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "PathPart": "loginPonto",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePonto": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Ponto",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoBuscar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "Buscar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoRegistrar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "Registrar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoRegistrarfacial": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "RegistrarFacial",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoIdentificar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "Identificar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoAjustardia": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "AjustarDia",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourcePontoAjustarhorario": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourcePonto"
                      },
                      "PathPart": "AjustarHorario",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEmpresa": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Empresa",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEmpresaInfo": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceEmpresa"
                      },
                      "PathPart": "Info",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceEmpresaEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceEmpresa"
                      },
                      "PathPart": "Editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceRelatorio": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "Relatorio",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceRelatorioPonto": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceRelatorio"
                      },
                      "PathPart": "Ponto",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesListarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesInfoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesExcluirOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesInserirOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInserir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosListarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosIdVarEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosCadastrarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosCadastrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosFiltrarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosFiltrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncionariosIdVarExcluirOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserAddOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserAdd"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserValidarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserValidar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserEmpresaOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmpresa"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserEmailOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmail"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserLoginOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserLogoutOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogout"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoBuscarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoBuscar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserLoginpontoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLoginponto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoRegistrarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoRegistrarfacialOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrarfacial"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoIdentificarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoIdentificar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoAjustardiaOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustardia"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodPontoAjustarhorarioOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustarhorario"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodEmpresaInfoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodEmpresaEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodRelatorioPontoOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceRelatorioPonto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodFuncoesListarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "FuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "FuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesEditarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AtualizarFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AtualizarFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesInfoGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "IdFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "IdFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesExcluirDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ExcluirFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ExcluirFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncoesInserirPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncoesInserir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "InserirFuncoesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "InserirFuncoesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosListarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "FuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "FuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosIdVarEditarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EditarFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EditarFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosCadastrarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosCadastrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CadastrarFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CadastrarFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosFiltrarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosFiltrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "FiltrarFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "FiltrarFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosIdVarExcluirDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ExcluirFuncionarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ExcluirFuncionarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodFuncionariosIdVarEditarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "IdFuncionariosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "IdFuncionariosLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserAddPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserAdd"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "RegistrarUsuarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "RegistrarUsuarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserValidarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserValidar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ValidarUsuarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ValidarUsuarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserEmpresaGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmpresa"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UserEmpresaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "UserEmpresaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserEmailPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserEmail"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CadastrarUserEmpresaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CadastrarUserEmpresaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserLoginPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LoginLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LoginLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserLogoutPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLogout"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LogoutLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LogoutLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoBuscarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoBuscar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "BuscarPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "BuscarPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUserLoginpontoPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUserLoginponto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LoginPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LoginPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoRegistrarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "BaterPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "BaterPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoRegistrarfacialPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoRegistrarfacial"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoFacialLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoFacialLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoIdentificarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoIdentificar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoFuncionarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoFuncionarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoAjustardiaPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustardia"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoAjustarLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoAjustarLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodPontoAjustarhorarioPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourcePontoAjustarhorario"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "PontoHorarioAjustarLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "PontoHorarioAjustarLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEmpresaInfoGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaInfo"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EmpresaInfoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EmpresaInfoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEmpresaEditarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEmpresaEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EditarEmpresaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EditarEmpresaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodRelatorioPontoGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceRelatorioPonto"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "RelatorioPontoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "RelatorioPontoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1736983465735": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodFuncoesListarOptions",
                      "ApiGatewayMethodFuncoesEditarOptions",
                      "ApiGatewayMethodFuncoesInfoOptions",
                      "ApiGatewayMethodFuncoesExcluirOptions",
                      "ApiGatewayMethodFuncoesInserirOptions",
                      "ApiGatewayMethodFuncionariosListarOptions",
                      "ApiGatewayMethodFuncionariosIdVarEditarOptions",
                      "ApiGatewayMethodFuncionariosCadastrarOptions",
                      "ApiGatewayMethodFuncionariosFiltrarOptions",
                      "ApiGatewayMethodFuncionariosIdVarExcluirOptions",
                      "ApiGatewayMethodUserAddOptions",
                      "ApiGatewayMethodUserValidarOptions",
                      "ApiGatewayMethodUserEmpresaOptions",
                      "ApiGatewayMethodUserEmailOptions",
                      "ApiGatewayMethodUserLoginOptions",
                      "ApiGatewayMethodUserLogoutOptions",
                      "ApiGatewayMethodPontoBuscarOptions",
                      "ApiGatewayMethodUserLoginpontoOptions",
                      "ApiGatewayMethodPontoRegistrarOptions",
                      "ApiGatewayMethodPontoRegistrarfacialOptions",
                      "ApiGatewayMethodPontoIdentificarOptions",
                      "ApiGatewayMethodPontoAjustardiaOptions",
                      "ApiGatewayMethodPontoAjustarhorarioOptions",
                      "ApiGatewayMethodEmpresaInfoOptions",
                      "ApiGatewayMethodEmpresaEditarOptions",
                      "ApiGatewayMethodRelatorioPontoOptions",
                      "ApiGatewayMethodFuncoesListarGet",
                      "ApiGatewayMethodFuncoesEditarPatch",
                      "ApiGatewayMethodFuncoesInfoGet",
                      "ApiGatewayMethodFuncoesExcluirDelete",
                      "ApiGatewayMethodFuncoesInserirPost",
                      "ApiGatewayMethodFuncionariosListarGet",
                      "ApiGatewayMethodFuncionariosIdVarEditarPatch",
                      "ApiGatewayMethodFuncionariosCadastrarPost",
                      "ApiGatewayMethodFuncionariosFiltrarGet",
                      "ApiGatewayMethodFuncionariosIdVarExcluirDelete",
                      "ApiGatewayMethodFuncionariosIdVarEditarGet",
                      "ApiGatewayMethodUserAddPost",
                      "ApiGatewayMethodUserValidarPost",
                      "ApiGatewayMethodUserEmpresaGet",
                      "ApiGatewayMethodUserEmailPost",
                      "ApiGatewayMethodUserLoginPost",
                      "ApiGatewayMethodUserLogoutPost",
                      "ApiGatewayMethodPontoBuscarGet",
                      "ApiGatewayMethodUserLoginpontoPost",
                      "ApiGatewayMethodPontoRegistrarPost",
                      "ApiGatewayMethodPontoRegistrarfacialPost",
                      "ApiGatewayMethodPontoIdentificarGet",
                      "ApiGatewayMethodPontoAjustardiaPost",
                      "ApiGatewayMethodPontoAjustarhorarioPatch",
                      "ApiGatewayMethodEmpresaInfoGet",
                      "ApiGatewayMethodEmpresaEditarPatch",
                      "ApiGatewayMethodRelatorioPontoGet"
                    ]
                  },
                  "FuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "FuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AtualizarFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AtualizarFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "IdFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "IdFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ExcluirFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ExcluirFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "InserirFuncoesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "InserirFuncoesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "FuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "FuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EditarFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EditarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CadastrarFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CadastrarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "FiltrarFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "FiltrarFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ExcluirFuncionarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ExcluirFuncionarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "IdFuncionariosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "IdFuncionariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "RegistrarUsuarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RegistrarUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ValidarUsuarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ValidarUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UserEmpresaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UserEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CadastrarUserEmpresaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CadastrarUserEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LoginLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LogoutLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LogoutLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "BuscarPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "BuscarPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LoginPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "BaterPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "BaterPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoFacialLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoFacialLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoFuncionarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoFuncionarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoAjustarLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoAjustarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "PontoHorarioAjustarLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PontoHorarioAjustarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EmpresaInfoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EmpresaInfoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EditarEmpresaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EditarEmpresaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "RelatorioPontoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RelatorioPontoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                    "Export": {
                      "Name": "sls-Backend-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "FuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-FuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "AtualizarFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-AtualizarFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "IdFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-IdFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ExcluirFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ExcluirFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "InserirFuncoesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-InserirFuncoesLambdaFunctionQualifiedArn"
                    }
                  },
                  "FuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-FuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "EditarFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-EditarFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "CadastrarFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-CadastrarFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "FiltrarFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-FiltrarFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "ExcluirFuncionarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ExcluirFuncionarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "IdFuncionariosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-IdFuncionariosLambdaFunctionQualifiedArn"
                    }
                  },
                  "RegistrarUsuarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-RegistrarUsuarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "ValidarUsuarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ValidarUsuarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "UserEmpresaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-UserEmpresaLambdaFunctionQualifiedArn"
                    }
                  },
                  "CadastrarUserEmpresaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-CadastrarUserEmpresaLambdaFunctionQualifiedArn"
                    }
                  },
                  "LoginLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-LoginLambdaFunctionQualifiedArn"
                    }
                  },
                  "LogoutLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-LogoutLambdaFunctionQualifiedArn"
                    }
                  },
                  "BuscarPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-BuscarPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "LoginPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-LoginPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "BaterPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-BaterPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoFacialLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoFacialLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoFuncionarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoFuncionarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoAjustarLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoAjustarLambdaFunctionQualifiedArn"
                    }
                  },
                  "PontoHorarioAjustarLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-PontoHorarioAjustarLambdaFunctionQualifiedArn"
                    }
                  },
                  "EmpresaInfoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-EmpresaInfoLambdaFunctionQualifiedArn"
                    }
                  },
                  "EditarEmpresaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-EditarEmpresaLambdaFunctionQualifiedArn"
                    }
                  },
                  "RelatorioPontoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI"
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-RelatorioPontoLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-Backend-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "plugins": [
              "serverless-dotenv-plugin",
              "serverless-pseudo-parameters"
            ],
            "functions": {
              "Funcoes": {
                "handler": "src/handlers/funcoes/listarFuncoes.handler",
                "package": {
                  "include": [
                    "src/handlers/funcoes/listarFuncoes.js",
                    "src/services/Funcoes/listarFuncoesService.js",
                    "src/database/database.js"
                  ]
                },
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Listar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Funcoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc"
              },
              "atualizarFuncoes": {
                "handler": "src/handlers/funcoes/editarFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/editarFuncao.js",
                    "src/services/Funcoes/editarFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Editar",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-atualizarFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY"
              },
              "idFuncoes": {
                "handler": "src/handlers/funcoes/idFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/idFuncao.js",
                    "src/services/Funcoes/idFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Info",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-idFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU"
              },
              "excluirFuncoes": {
                "handler": "src/handlers/funcoes/excluirFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/excluirFuncao.js",
                    "src/services/funcoes/excluirFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Excluir",
                      "method": "delete",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-excluirFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU"
              },
              "inserirFuncoes": {
                "handler": "src/handlers/funcoes/inserirFuncao.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/funcoes/inserirFuncao.js",
                    "src/services/funcoes/inserirFuncaoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcoes/Inserir",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-inserirFuncoes",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M"
              },
              "Funcionarios": {
                "handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/autocompleteFuncionariosHandler.js",
                    "src/services/Funcionarios/autocompleteFuncionarios.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/Listar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Funcionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM"
              },
              "editarFuncionarios": {
                "handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/editarFuncionarios.js",
                    "src/services/Funcionarios/editarFuncionarioService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/{id}/editar",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-editarFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A"
              },
              "cadastrarFuncionarios": {
                "handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/cadastrarFuncionarios.js",
                    "src/services/Funcionarios/cadastrarFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/Cadastrar",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-cadastrarFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA"
              },
              "filtrarFuncionarios": {
                "handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/listarFuncionarios.js",
                    "src/services/Funcionarios/listarFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/Filtrar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-filtrarFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE"
              },
              "excluirFuncionario": {
                "handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/excluirFuncionarios.js",
                    "src/services/Funcionarios/excluirFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/{id}/excluir",
                      "method": "delete",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-excluirFuncionario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg"
              },
              "idFuncionarios": {
                "handler": "src/handlers/Funcionarios/idFuncionarios.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Funcionarios/idFuncionarios.js",
                    "src/services/Funcionarios/idFuncionariosService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Funcionarios/{id}/editar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-idFuncionarios",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc"
              },
              "RegistrarUsuario": {
                "handler": "src/handlers/users/registro.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/registro.js",
                    "src/services/Usuarios/registroService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Add",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-RegistrarUsuario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk"
              },
              "ValidarUsuario": {
                "handler": "src/handlers/users/codigoUser.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/codigoUser.js",
                    "src/services/Usuarios/codigoUserService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Validar",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-ValidarUsuario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE"
              },
              "userEmpresa": {
                "handler": "src/handlers/users/empresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/empresa.js",
                    "src/services/Usuarios/empresa.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Empresa",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-userEmpresa",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc"
              },
              "cadastrarUserEmpresa": {
                "handler": "src/handlers/users/usuarioEmpresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/codigoUser.js",
                    "src/services/Usuarios/codigoUserService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Email",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-cadastrarUserEmpresa",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE"
              },
              "Login": {
                "handler": "src/handlers/users/login.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/login.js",
                    "src/services/Usuarios/loginService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Login",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Login",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik"
              },
              "Logout": {
                "handler": "src/handlers/users/login.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/login.js",
                    "src/services/Usuarios/loginService.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/Logout",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-Logout",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4"
              },
              "buscarPonto": {
                "handler": "src/handlers/Ponto/buscarPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/buscarPonto.js",
                    "src/services/Ponto/consultaPontoService.js",
                    "src/services/Ponto/jornadaInfoService.js",
                    "src/services/Ponto/calculoBancoHoras.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/Buscar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-buscarPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ"
              },
              "loginPonto": {
                "handler": "src/handlers/users/loginPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/users/login.js",
                    "src/services/Usuarios/loginService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "User/loginPonto",
                      "method": "post",
                      "cors": {
                        "origin": "https://registrodepontocontroltek.netlify.app",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-loginPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY"
              },
              "baterPonto": {
                "handler": "src/handlers/Ponto/baterPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/baterPonto.js",
                    "src/services/Ponto/baterPontoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/Registrar",
                      "method": "post",
                      "cors": {
                        "origin": "https://registrodepontocontroltek.netlify.app",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-baterPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs"
              },
              "PontoFacial": {
                "handler": "src/handlers/Ponto/baterPontoFacial.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/baterPontoFacial.js",
                    "src/services/Ponto/baterPontoFacialService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/RegistrarFacial",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoFacial",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU"
              },
              "PontoFuncionario": {
                "handler": "src/handlers/Ponto/identificarFuncionario.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/identificarFuncionario.js",
                    "src/services/Ponto/idFuncionarioCodigo.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/Identificar",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoFuncionario",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI"
              },
              "PontoAjustar": {
                "handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/ajusteDiaPonto.js",
                    "src/services/Ponto/ajusteDiaPontoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/AjustarDia",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoAjustar",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8"
              },
              "PontoHorarioAjustar": {
                "handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Ponto/ajusteHorarioPonto.js",
                    "src/services/Ponto/ajusteHorarioPontoService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Ponto/AjustarHorario",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-PontoHorarioAjustar",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw"
              },
              "empresaInfo": {
                "handler": "src/handlers/Empresa/buscarEmpresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Empresa/buscarEmpresa.js",
                    "src/services/Empresa/buscarEmpresaService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Empresa/Info",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-empresaInfo",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE"
              },
              "editarEmpresa": {
                "handler": "src/handlers/Empresa/editarEmpresa.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Empresa/editarEmpresa.js",
                    "src/services/Empresa/editarEmpresaService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Empresa/Editar",
                      "method": "patch",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-editarEmpresa",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ"
              },
              "relatorioPonto": {
                "handler": "src/handlers/Relatorios/relatorioPonto.handler",
                "layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ],
                "package": {
                  "include": [
                    "src/handlers/Empresa/editarEmpresa.js",
                    "src/services/Empresa/editarEmpresaService.js",
                    "src/database/database.js"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "Relatorio/Ponto",
                      "method": "get",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "Access-Control-Allow-Origin",
                          "Access-Control-Allow-Methods",
                          "Access-Control-Allow-Headers"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "Backend-dev-relatorioPonto",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI"
              }
            },
            "package": {
              "exclude": [
                "node_modules/**",
                "mocks/**",
                "nodejs/**"
              ],
              "artifactsS3KeyDirname": "serverless/Backend/dev/code-artifacts",
              "deploymentBucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "artifact": "C:\\APIS\\Serverless\\BACKEND\\.serverless\\Backend.zip",
              "artifactDirectoryName": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z"
            },
            "custom": {
              "stage": "dev",
              "webpack": {
                "includeModules": false,
                "packager": "npm",
                "webpackConfig": "./webpack.config.js"
              }
            }
          },
          "configFileDirPath": "C:\\APIS\\Serverless\\BACKEND",
          "config": {
            "type": "sls"
          },
          "options": {
            "stage": "dev"
          },
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\APIS\\Serverless\\BACKEND",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "Backend",
      "useDotenv": true,
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "sa-east-1",
        "environment": {
          "JWT_SECRET": "<REDACTED>",
          "DB_HOST": "193.203.175.60",
          "DB_USER": "u945487164_Kilberty",
          "DB_PWD": "Kilberty32316943",
          "DB_PORT": "3306",
          "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
          "CLIENT_SECRET": "<REDACTED>",
          "POOL_ID": "sa-east-1_JDeOso4LH",
          "ORIGIN": "http://localhost:5173",
          "NODE_PATH": "./:/opt/node20/node_modules"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "cognito-idp:AdminInitiateAuth"
            ],
            "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "FuncoesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-Funcoes"
              }
            },
            "AtualizarFuncoesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-atualizarFuncoes"
              }
            },
            "IdFuncoesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-idFuncoes"
              }
            },
            "ExcluirFuncoesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncoes"
              }
            },
            "InserirFuncoesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-inserirFuncoes"
              }
            },
            "FuncionariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-Funcionarios"
              }
            },
            "EditarFuncionariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-editarFuncionarios"
              }
            },
            "CadastrarFuncionariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-cadastrarFuncionarios"
              }
            },
            "FiltrarFuncionariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-filtrarFuncionarios"
              }
            },
            "ExcluirFuncionarioLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-excluirFuncionario"
              }
            },
            "IdFuncionariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-idFuncionarios"
              }
            },
            "RegistrarUsuarioLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-RegistrarUsuario"
              }
            },
            "ValidarUsuarioLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-ValidarUsuario"
              }
            },
            "UserEmpresaLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-userEmpresa"
              }
            },
            "CadastrarUserEmpresaLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-cadastrarUserEmpresa"
              }
            },
            "LoginLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-Login"
              }
            },
            "LogoutLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-Logout"
              }
            },
            "BuscarPontoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-buscarPonto"
              }
            },
            "LoginPontoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-loginPonto"
              }
            },
            "BaterPontoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-baterPonto"
              }
            },
            "PontoFacialLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-PontoFacial"
              }
            },
            "PontoFuncionarioLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-PontoFuncionario"
              }
            },
            "PontoAjustarLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-PontoAjustar"
              }
            },
            "PontoHorarioAjustarLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-PontoHorarioAjustar"
              }
            },
            "EmpresaInfoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-empresaInfo"
              }
            },
            "EditarEmpresaLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-editarEmpresa"
              }
            },
            "RelatorioPontoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/Backend-dev-relatorioPonto"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "Backend",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Backend-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "cognito-idp:AdminInitiateAuth"
                          ],
                          "Resource": "arn:aws:cognito-idp:sa-east-1:717626617280:userpool/sa-east-1_JDeOso4LH"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "Backend",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "FuncoesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/funcoes/listarFuncoes.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-Funcoes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "FuncoesLogGroup"
              ]
            },
            "AtualizarFuncoesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/funcoes/editarFuncao.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-atualizarFuncoes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "AtualizarFuncoesLogGroup"
              ]
            },
            "IdFuncoesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/funcoes/idFuncao.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-idFuncoes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "IdFuncoesLogGroup"
              ]
            },
            "ExcluirFuncoesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/funcoes/excluirFuncao.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-excluirFuncoes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "ExcluirFuncoesLogGroup"
              ]
            },
            "InserirFuncoesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/funcoes/inserirFuncao.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-inserirFuncoes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "InserirFuncoesLogGroup"
              ]
            },
            "FuncionariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-Funcionarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "FuncionariosLogGroup"
              ]
            },
            "EditarFuncionariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-editarFuncionarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "EditarFuncionariosLogGroup"
              ]
            },
            "CadastrarFuncionariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-cadastrarFuncionarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "CadastrarFuncionariosLogGroup"
              ]
            },
            "FiltrarFuncionariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-filtrarFuncionarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "FiltrarFuncionariosLogGroup"
              ]
            },
            "ExcluirFuncionarioLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-excluirFuncionario",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "ExcluirFuncionarioLogGroup"
              ]
            },
            "IdFuncionariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Funcionarios/idFuncionarios.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-idFuncionarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "IdFuncionariosLogGroup"
              ]
            },
            "RegistrarUsuarioLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/users/registro.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-RegistrarUsuario",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "RegistrarUsuarioLogGroup"
              ]
            },
            "ValidarUsuarioLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/users/codigoUser.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-ValidarUsuario",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "ValidarUsuarioLogGroup"
              ]
            },
            "UserEmpresaLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/users/empresa.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-userEmpresa",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "UserEmpresaLogGroup"
              ]
            },
            "CadastrarUserEmpresaLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/users/usuarioEmpresa.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-cadastrarUserEmpresa",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "CadastrarUserEmpresaLogGroup"
              ]
            },
            "LoginLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/users/login.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-Login",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "LoginLogGroup"
              ]
            },
            "LogoutLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/users/login.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-Logout",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "LogoutLogGroup"
              ]
            },
            "BuscarPontoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/buscarPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-buscarPonto",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "BuscarPontoLogGroup"
              ]
            },
            "LoginPontoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/users/loginPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-loginPonto",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "LoginPontoLogGroup"
              ]
            },
            "BaterPontoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/baterPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-baterPonto",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "BaterPontoLogGroup"
              ]
            },
            "PontoFacialLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/baterPontoFacial.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-PontoFacial",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "PontoFacialLogGroup"
              ]
            },
            "PontoFuncionarioLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/identificarFuncionario.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-PontoFuncionario",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "PontoFuncionarioLogGroup"
              ]
            },
            "PontoAjustarLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-PontoAjustar",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "PontoAjustarLogGroup"
              ]
            },
            "PontoHorarioAjustarLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-PontoHorarioAjustar",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "PontoHorarioAjustarLogGroup"
              ]
            },
            "EmpresaInfoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Empresa/buscarEmpresa.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-empresaInfo",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "EmpresaInfoLogGroup"
              ]
            },
            "EditarEmpresaLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Empresa/editarEmpresa.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-editarEmpresa",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "EditarEmpresaLogGroup"
              ]
            },
            "RelatorioPontoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
                  "S3Key": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z/Backend.zip"
                },
                "Handler": "src/handlers/Relatorios/relatorioPonto.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "Backend-dev-relatorioPonto",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DB_HOST": "193.203.175.60",
                    "DB_USER": "u945487164_Kilberty",
                    "DB_PWD": "Kilberty32316943",
                    "DB_PORT": "3306",
                    "CLIENT_ID": "7ssncpbdginvouitcqsreo5fg0",
                    "CLIENT_SECRET": "<REDACTED>",
                    "POOL_ID": "sa-east-1_JDeOso4LH",
                    "ORIGIN": "http://localhost:5173",
                    "NODE_PATH": "./:/opt/node20/node_modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
                ]
              },
              "DependsOn": [
                "RelatorioPontoLogGroup"
              ]
            },
            "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "FuncoesLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AtualizarFuncoesLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "IdFuncoesLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ExcluirFuncoesLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "InserirFuncoesLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "FuncionariosLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "EditarFuncionariosLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CadastrarFuncionariosLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "FiltrarFuncionariosLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ExcluirFuncionarioLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "IdFuncionariosLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "RegistrarUsuarioLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ValidarUsuarioLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UserEmpresaLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CadastrarUserEmpresaLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LoginLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LogoutLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "BuscarPontoLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LoginPontoLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "BaterPontoLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PontoFacialLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PontoFuncionarioLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PontoAjustarLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PontoHorarioAjustarLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "EmpresaInfoLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "EditarEmpresaLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "RelatorioPontoLambdaFunction"
                },
                "CodeSha256": "AWqGQmfxB7AfQD84Sjh5oY91iGR0EKmDLn6DMjJOU4w="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-Backend",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceFuncoes": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "Funcoes",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncoesListar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncoes"
                },
                "PathPart": "Listar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncoesEditar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncoes"
                },
                "PathPart": "Editar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncoesInfo": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncoes"
                },
                "PathPart": "Info",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncoesExcluir": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncoes"
                },
                "PathPart": "Excluir",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncoesInserir": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncoes"
                },
                "PathPart": "Inserir",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionarios": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "Funcionarios",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosListar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionarios"
                },
                "PathPart": "Listar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionarios"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosIdVarEditar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVar"
                },
                "PathPart": "editar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosIdVarExcluir": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVar"
                },
                "PathPart": "excluir",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosCadastrar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionarios"
                },
                "PathPart": "Cadastrar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFuncionariosFiltrar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFuncionarios"
                },
                "PathPart": "Filtrar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUser": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "User",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserAdd": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Add",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserValidar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Validar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserEmpresa": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Empresa",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserEmail": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Email",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserLogin": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Login",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserLogout": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "Logout",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUserLoginponto": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "PathPart": "loginPonto",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePonto": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "Ponto",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoBuscar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "Buscar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoRegistrar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "Registrar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoRegistrarfacial": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "RegistrarFacial",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoIdentificar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "Identificar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoAjustardia": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "AjustarDia",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePontoAjustarhorario": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourcePonto"
                },
                "PathPart": "AjustarHorario",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceEmpresa": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "Empresa",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceEmpresaInfo": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceEmpresa"
                },
                "PathPart": "Info",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceEmpresaEditar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceEmpresa"
                },
                "PathPart": "Editar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceRelatorio": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "Relatorio",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceRelatorioPonto": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceRelatorio"
                },
                "PathPart": "Ponto",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesListarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesListar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesEditarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesInfoOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesInfo"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesExcluirOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesExcluir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesInserirOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesInserir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncionariosListarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosListar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncionariosIdVarEditarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PATCH'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncionariosCadastrarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosCadastrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncionariosFiltrarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosFiltrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncionariosIdVarExcluirOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserAddOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserAdd"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserValidarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserValidar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserEmpresaOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserEmpresa"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserEmailOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserEmail"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserLoginOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLogin"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserLogoutOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLogout"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoBuscarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoBuscar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserLoginpontoOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLoginponto"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoRegistrarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'https://registrodepontocontroltek.netlify.app'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoRegistrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoRegistrarfacialOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoRegistrarfacial"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoIdentificarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoIdentificar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoAjustardiaOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoAjustardia"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPontoAjustarhorarioOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoAjustarhorario"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodEmpresaInfoOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEmpresaInfo"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodEmpresaEditarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEmpresaEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodRelatorioPontoOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceRelatorioPonto"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFuncoesListarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesListar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "FuncoesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "FuncoesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncoesEditarPatch": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PATCH",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AtualizarFuncoesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AtualizarFuncoesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncoesInfoGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesInfo"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "IdFuncoesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "IdFuncoesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncoesExcluirDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesExcluir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ExcluirFuncoesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ExcluirFuncoesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncoesInserirPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncoesInserir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "InserirFuncoesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "InserirFuncoesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosListarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosListar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "FuncionariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "FuncionariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosIdVarEditarPatch": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PATCH",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "EditarFuncionariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "EditarFuncionariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosCadastrarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosCadastrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CadastrarFuncionariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CadastrarFuncionariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosFiltrarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosFiltrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "FiltrarFuncionariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "FiltrarFuncionariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosIdVarExcluirDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVarExcluir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ExcluirFuncionarioLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ExcluirFuncionarioLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFuncionariosIdVarEditarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFuncionariosIdVarEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "IdFuncionariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "IdFuncionariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserAddPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserAdd"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RegistrarUsuarioLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "RegistrarUsuarioLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserValidarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserValidar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ValidarUsuarioLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ValidarUsuarioLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserEmpresaGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserEmpresa"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UserEmpresaLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UserEmpresaLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserEmailPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserEmail"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CadastrarUserEmpresaLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CadastrarUserEmpresaLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserLoginPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLogin"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "LoginLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "LoginLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserLogoutPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLogout"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "LogoutLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "LogoutLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoBuscarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoBuscar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "BuscarPontoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "BuscarPontoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUserLoginpontoPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUserLoginponto"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "LoginPontoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "LoginPontoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoRegistrarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoRegistrar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "BaterPontoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "BaterPontoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoRegistrarfacialPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoRegistrarfacial"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PontoFacialLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PontoFacialLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoIdentificarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoIdentificar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PontoFuncionarioLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PontoFuncionarioLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoAjustardiaPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoAjustardia"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PontoAjustarLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PontoAjustarLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPontoAjustarhorarioPatch": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PATCH",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePontoAjustarhorario"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PontoHorarioAjustarLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PontoHorarioAjustarLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodEmpresaInfoGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEmpresaInfo"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "EmpresaInfoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "EmpresaInfoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodEmpresaEditarPatch": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PATCH",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEmpresaEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "EditarEmpresaLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "EditarEmpresaLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodRelatorioPontoGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceRelatorioPonto"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RelatorioPontoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "RelatorioPontoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1736983465735": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodFuncoesListarOptions",
                "ApiGatewayMethodFuncoesEditarOptions",
                "ApiGatewayMethodFuncoesInfoOptions",
                "ApiGatewayMethodFuncoesExcluirOptions",
                "ApiGatewayMethodFuncoesInserirOptions",
                "ApiGatewayMethodFuncionariosListarOptions",
                "ApiGatewayMethodFuncionariosIdVarEditarOptions",
                "ApiGatewayMethodFuncionariosCadastrarOptions",
                "ApiGatewayMethodFuncionariosFiltrarOptions",
                "ApiGatewayMethodFuncionariosIdVarExcluirOptions",
                "ApiGatewayMethodUserAddOptions",
                "ApiGatewayMethodUserValidarOptions",
                "ApiGatewayMethodUserEmpresaOptions",
                "ApiGatewayMethodUserEmailOptions",
                "ApiGatewayMethodUserLoginOptions",
                "ApiGatewayMethodUserLogoutOptions",
                "ApiGatewayMethodPontoBuscarOptions",
                "ApiGatewayMethodUserLoginpontoOptions",
                "ApiGatewayMethodPontoRegistrarOptions",
                "ApiGatewayMethodPontoRegistrarfacialOptions",
                "ApiGatewayMethodPontoIdentificarOptions",
                "ApiGatewayMethodPontoAjustardiaOptions",
                "ApiGatewayMethodPontoAjustarhorarioOptions",
                "ApiGatewayMethodEmpresaInfoOptions",
                "ApiGatewayMethodEmpresaEditarOptions",
                "ApiGatewayMethodRelatorioPontoOptions",
                "ApiGatewayMethodFuncoesListarGet",
                "ApiGatewayMethodFuncoesEditarPatch",
                "ApiGatewayMethodFuncoesInfoGet",
                "ApiGatewayMethodFuncoesExcluirDelete",
                "ApiGatewayMethodFuncoesInserirPost",
                "ApiGatewayMethodFuncionariosListarGet",
                "ApiGatewayMethodFuncionariosIdVarEditarPatch",
                "ApiGatewayMethodFuncionariosCadastrarPost",
                "ApiGatewayMethodFuncionariosFiltrarGet",
                "ApiGatewayMethodFuncionariosIdVarExcluirDelete",
                "ApiGatewayMethodFuncionariosIdVarEditarGet",
                "ApiGatewayMethodUserAddPost",
                "ApiGatewayMethodUserValidarPost",
                "ApiGatewayMethodUserEmpresaGet",
                "ApiGatewayMethodUserEmailPost",
                "ApiGatewayMethodUserLoginPost",
                "ApiGatewayMethodUserLogoutPost",
                "ApiGatewayMethodPontoBuscarGet",
                "ApiGatewayMethodUserLoginpontoPost",
                "ApiGatewayMethodPontoRegistrarPost",
                "ApiGatewayMethodPontoRegistrarfacialPost",
                "ApiGatewayMethodPontoIdentificarGet",
                "ApiGatewayMethodPontoAjustardiaPost",
                "ApiGatewayMethodPontoAjustarhorarioPatch",
                "ApiGatewayMethodEmpresaInfoGet",
                "ApiGatewayMethodEmpresaEditarPatch",
                "ApiGatewayMethodRelatorioPontoGet"
              ]
            },
            "FuncoesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "FuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "AtualizarFuncoesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AtualizarFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "IdFuncoesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "IdFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ExcluirFuncoesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ExcluirFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "InserirFuncoesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "InserirFuncoesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "FuncionariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "FuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "EditarFuncionariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "EditarFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CadastrarFuncionariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CadastrarFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "FiltrarFuncionariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "FiltrarFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ExcluirFuncionarioLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ExcluirFuncionarioLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "IdFuncionariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "IdFuncionariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "RegistrarUsuarioLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "RegistrarUsuarioLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ValidarUsuarioLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ValidarUsuarioLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UserEmpresaLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UserEmpresaLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CadastrarUserEmpresaLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CadastrarUserEmpresaLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "LoginLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LoginLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "LogoutLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LogoutLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "BuscarPontoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "BuscarPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "LoginPontoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LoginPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "BaterPontoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "BaterPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PontoFacialLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PontoFacialLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PontoFuncionarioLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PontoFuncionarioLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PontoAjustarLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PontoAjustarLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PontoHorarioAjustarLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PontoHorarioAjustarLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "EmpresaInfoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "EmpresaInfoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "EditarEmpresaLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "EditarEmpresaLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "RelatorioPontoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "RelatorioPontoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
              "Export": {
                "Name": "sls-Backend-dev-ServerlessDeploymentBucketName"
              }
            },
            "FuncoesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc"
              },
              "Export": {
                "Name": "sls-Backend-dev-FuncoesLambdaFunctionQualifiedArn"
              }
            },
            "AtualizarFuncoesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY"
              },
              "Export": {
                "Name": "sls-Backend-dev-AtualizarFuncoesLambdaFunctionQualifiedArn"
              }
            },
            "IdFuncoesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU"
              },
              "Export": {
                "Name": "sls-Backend-dev-IdFuncoesLambdaFunctionQualifiedArn"
              }
            },
            "ExcluirFuncoesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU"
              },
              "Export": {
                "Name": "sls-Backend-dev-ExcluirFuncoesLambdaFunctionQualifiedArn"
              }
            },
            "InserirFuncoesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M"
              },
              "Export": {
                "Name": "sls-Backend-dev-InserirFuncoesLambdaFunctionQualifiedArn"
              }
            },
            "FuncionariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM"
              },
              "Export": {
                "Name": "sls-Backend-dev-FuncionariosLambdaFunctionQualifiedArn"
              }
            },
            "EditarFuncionariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A"
              },
              "Export": {
                "Name": "sls-Backend-dev-EditarFuncionariosLambdaFunctionQualifiedArn"
              }
            },
            "CadastrarFuncionariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA"
              },
              "Export": {
                "Name": "sls-Backend-dev-CadastrarFuncionariosLambdaFunctionQualifiedArn"
              }
            },
            "FiltrarFuncionariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE"
              },
              "Export": {
                "Name": "sls-Backend-dev-FiltrarFuncionariosLambdaFunctionQualifiedArn"
              }
            },
            "ExcluirFuncionarioLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg"
              },
              "Export": {
                "Name": "sls-Backend-dev-ExcluirFuncionarioLambdaFunctionQualifiedArn"
              }
            },
            "IdFuncionariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc"
              },
              "Export": {
                "Name": "sls-Backend-dev-IdFuncionariosLambdaFunctionQualifiedArn"
              }
            },
            "RegistrarUsuarioLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk"
              },
              "Export": {
                "Name": "sls-Backend-dev-RegistrarUsuarioLambdaFunctionQualifiedArn"
              }
            },
            "ValidarUsuarioLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE"
              },
              "Export": {
                "Name": "sls-Backend-dev-ValidarUsuarioLambdaFunctionQualifiedArn"
              }
            },
            "UserEmpresaLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc"
              },
              "Export": {
                "Name": "sls-Backend-dev-UserEmpresaLambdaFunctionQualifiedArn"
              }
            },
            "CadastrarUserEmpresaLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE"
              },
              "Export": {
                "Name": "sls-Backend-dev-CadastrarUserEmpresaLambdaFunctionQualifiedArn"
              }
            },
            "LoginLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik"
              },
              "Export": {
                "Name": "sls-Backend-dev-LoginLambdaFunctionQualifiedArn"
              }
            },
            "LogoutLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4"
              },
              "Export": {
                "Name": "sls-Backend-dev-LogoutLambdaFunctionQualifiedArn"
              }
            },
            "BuscarPontoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ"
              },
              "Export": {
                "Name": "sls-Backend-dev-BuscarPontoLambdaFunctionQualifiedArn"
              }
            },
            "LoginPontoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY"
              },
              "Export": {
                "Name": "sls-Backend-dev-LoginPontoLambdaFunctionQualifiedArn"
              }
            },
            "BaterPontoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs"
              },
              "Export": {
                "Name": "sls-Backend-dev-BaterPontoLambdaFunctionQualifiedArn"
              }
            },
            "PontoFacialLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU"
              },
              "Export": {
                "Name": "sls-Backend-dev-PontoFacialLambdaFunctionQualifiedArn"
              }
            },
            "PontoFuncionarioLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI"
              },
              "Export": {
                "Name": "sls-Backend-dev-PontoFuncionarioLambdaFunctionQualifiedArn"
              }
            },
            "PontoAjustarLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8"
              },
              "Export": {
                "Name": "sls-Backend-dev-PontoAjustarLambdaFunctionQualifiedArn"
              }
            },
            "PontoHorarioAjustarLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw"
              },
              "Export": {
                "Name": "sls-Backend-dev-PontoHorarioAjustarLambdaFunctionQualifiedArn"
              }
            },
            "EmpresaInfoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE"
              },
              "Export": {
                "Name": "sls-Backend-dev-EmpresaInfoLambdaFunctionQualifiedArn"
              }
            },
            "EditarEmpresaLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ"
              },
              "Export": {
                "Name": "sls-Backend-dev-EditarEmpresaLambdaFunctionQualifiedArn"
              }
            },
            "RelatorioPontoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI"
              },
              "Export": {
                "Name": "sls-Backend-dev-RelatorioPontoLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-Backend-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "plugins": [
        "serverless-dotenv-plugin",
        "serverless-pseudo-parameters"
      ],
      "functions": {
        "Funcoes": {
          "handler": "src/handlers/funcoes/listarFuncoes.handler",
          "package": {
            "include": [
              "src/handlers/funcoes/listarFuncoes.js",
              "src/services/Funcoes/listarFuncoesService.js",
              "src/database/database.js"
            ]
          },
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "events": [
            {
              "http": {
                "path": "Funcoes/Listar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-Funcoes",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "FuncoesLambdaVersion5qi3r6oKAIwHy9fVuYcJXxHfetP83nCvMVt7jFsfHtc"
        },
        "atualizarFuncoes": {
          "handler": "src/handlers/funcoes/editarFuncao.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/funcoes/editarFuncao.js",
              "src/services/Funcoes/editarFuncaoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcoes/Editar",
                "method": "patch",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "PATCH"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-atualizarFuncoes",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "AtualizarFuncoesLambdaVersionrDFJ2V7ouGqFKpNtTG5z2irJ4hnqvscxFSYW3PRwCSY"
        },
        "idFuncoes": {
          "handler": "src/handlers/funcoes/idFuncao.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/funcoes/idFuncao.js",
              "src/services/Funcoes/idFuncaoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcoes/Info",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-idFuncoes",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "IdFuncoesLambdaVersionSaar1mDO4DmwwSVWYTeMhOxIydrOS0X8MZVEtfXU"
        },
        "excluirFuncoes": {
          "handler": "src/handlers/funcoes/excluirFuncao.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/funcoes/excluirFuncao.js",
              "src/services/funcoes/excluirFuncaoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcoes/Excluir",
                "method": "delete",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "DELETE"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-excluirFuncoes",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "ExcluirFuncoesLambdaVersion9iVo5N9e4XqaADozjJrXpmgkFvDR2GdjI6wTlXHrwbU"
        },
        "inserirFuncoes": {
          "handler": "src/handlers/funcoes/inserirFuncao.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/funcoes/inserirFuncao.js",
              "src/services/funcoes/inserirFuncaoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcoes/Inserir",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-inserirFuncoes",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "InserirFuncoesLambdaVersionnaj8n8qscM3RUyV57E2GbIb3RfIBIRUmtpP8lxWvy6M"
        },
        "Funcionarios": {
          "handler": "src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/autocompleteFuncionariosHandler.js",
              "src/services/Funcionarios/autocompleteFuncionarios.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/Listar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-Funcionarios",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "FuncionariosLambdaVersionJeVauREkc9A53EYCi81yHuxQ9IQBN8N9i9FCwW4sNoM"
        },
        "editarFuncionarios": {
          "handler": "src/handlers/Funcionarios/editarFuncionarios.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/editarFuncionarios.js",
              "src/services/Funcionarios/editarFuncionarioService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/{id}/editar",
                "method": "patch",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "PATCH"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-editarFuncionarios",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "EditarFuncionariosLambdaVersion2vIXB98bVuoHgD5n0EVqwMfIyKTd3vANZya8Ep8KG6A"
        },
        "cadastrarFuncionarios": {
          "handler": "src/handlers/Funcionarios/cadastrarFuncionarios.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/cadastrarFuncionarios.js",
              "src/services/Funcionarios/cadastrarFuncionariosService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/Cadastrar",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-cadastrarFuncionarios",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CadastrarFuncionariosLambdaVersionjL8Xowztmgo4dlR7Pzjx5P0qCVBgSwxyJA8O1iW47SA"
        },
        "filtrarFuncionarios": {
          "handler": "src/handlers/Funcionarios/listarFuncionarios.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/listarFuncionarios.js",
              "src/services/Funcionarios/listarFuncionariosService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/Filtrar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-filtrarFuncionarios",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "FiltrarFuncionariosLambdaVersion6VqC6VDKYs0sVEfEhjSiu493oag44ruWWkrRVOUE"
        },
        "excluirFuncionario": {
          "handler": "src/handlers/Funcionarios/excluirFuncionarios.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/excluirFuncionarios.js",
              "src/services/Funcionarios/excluirFuncionariosService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/{id}/excluir",
                "method": "delete",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "DELETE"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-excluirFuncionario",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "ExcluirFuncionarioLambdaVersionwouLGvf4zvfIwJmEqMDRG8hkpn2RWGWWtyzZFLWfeg"
        },
        "idFuncionarios": {
          "handler": "src/handlers/Funcionarios/idFuncionarios.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Funcionarios/idFuncionarios.js",
              "src/services/Funcionarios/idFuncionariosService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Funcionarios/{id}/editar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-idFuncionarios",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "IdFuncionariosLambdaVersionva63Zhd1XpkkNrEUgGtVzz9Xl0Egutw4gw6yMcVPPc"
        },
        "RegistrarUsuario": {
          "handler": "src/handlers/users/registro.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/registro.js",
              "src/services/Usuarios/registroService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Add",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-RegistrarUsuario",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "RegistrarUsuarioLambdaVersionXDZdzIDvGordvW22tYf8rLehc5SOlgZRJHXTUpmUk"
        },
        "ValidarUsuario": {
          "handler": "src/handlers/users/codigoUser.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/codigoUser.js",
              "src/services/Usuarios/codigoUserService.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Validar",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-ValidarUsuario",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "ValidarUsuarioLambdaVersionHPE8NhDj4QKuI25wrdOWpjGqXK6reclY6xdyNWL9QE"
        },
        "userEmpresa": {
          "handler": "src/handlers/users/empresa.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/empresa.js",
              "src/services/Usuarios/empresa.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Empresa",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-userEmpresa",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UserEmpresaLambdaVersionpFbRV00qCI5iMz16kqlx9My7vyxru4WscIBHm91oGAc"
        },
        "cadastrarUserEmpresa": {
          "handler": "src/handlers/users/usuarioEmpresa.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/codigoUser.js",
              "src/services/Usuarios/codigoUserService.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Email",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-cadastrarUserEmpresa",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CadastrarUserEmpresaLambdaVersionh6KJgyYdK8WMRDxsQCpaatcPRcuOKmdi0vpTKaQGXE"
        },
        "Login": {
          "handler": "src/handlers/users/login.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/login.js",
              "src/services/Usuarios/loginService.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Login",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-Login",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "LoginLambdaVersion7VAHZfbrRGWKxNMYQs3pyE3h7ija9NqoAG577UwULik"
        },
        "Logout": {
          "handler": "src/handlers/users/login.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/login.js",
              "src/services/Usuarios/loginService.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/Logout",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-Logout",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "LogoutLambdaVersionCwZL6dPTHtedvrtbTuMc5txZ8PoaeULJP5SOhHIN4"
        },
        "buscarPonto": {
          "handler": "src/handlers/Ponto/buscarPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/buscarPonto.js",
              "src/services/Ponto/consultaPontoService.js",
              "src/services/Ponto/jornadaInfoService.js",
              "src/services/Ponto/calculoBancoHoras.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/Buscar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-buscarPonto",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "BuscarPontoLambdaVersionPTeG4I8qlw3nImYnST0OcXqkjVvBlY1sT9Ciexm5RQ"
        },
        "loginPonto": {
          "handler": "src/handlers/users/loginPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/users/login.js",
              "src/services/Usuarios/loginService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "User/loginPonto",
                "method": "post",
                "cors": {
                  "origin": "https://registrodepontocontroltek.netlify.app",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-loginPonto",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "LoginPontoLambdaVersionCjL9vIufok0HytMfMKH5hyhuHYQ8Wln0lrbsiT6rlY"
        },
        "baterPonto": {
          "handler": "src/handlers/Ponto/baterPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/baterPonto.js",
              "src/services/Ponto/baterPontoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/Registrar",
                "method": "post",
                "cors": {
                  "origin": "https://registrodepontocontroltek.netlify.app",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-baterPonto",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "BaterPontoLambdaVersionLreZrokhpZpnrat2qUt7znl3l0Ev632eLiK82Qgs"
        },
        "PontoFacial": {
          "handler": "src/handlers/Ponto/baterPontoFacial.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/baterPontoFacial.js",
              "src/services/Ponto/baterPontoFacialService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/RegistrarFacial",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-PontoFacial",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "PontoFacialLambdaVersion1mnslVrIe0N7qVh5OOTv6nvTEUxP8JdTcYueuUWNNAU"
        },
        "PontoFuncionario": {
          "handler": "src/handlers/Ponto/identificarFuncionario.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/identificarFuncionario.js",
              "src/services/Ponto/idFuncionarioCodigo.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/Identificar",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-PontoFuncionario",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "PontoFuncionarioLambdaVersionzaI2YcyffaoLPezdrm5A4eYC1dLL2YCyBM7Bw5il9XI"
        },
        "PontoAjustar": {
          "handler": "src/handlers/Ponto/ajusteDiaPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/ajusteDiaPonto.js",
              "src/services/Ponto/ajusteDiaPontoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/AjustarDia",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-PontoAjustar",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "PontoAjustarLambdaVersionJ4cvBKU8gJ8YpAiCXMXg8vjKZqIC8hy1oQQCyM7P8"
        },
        "PontoHorarioAjustar": {
          "handler": "src/handlers/Ponto/ajusteHorarioPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Ponto/ajusteHorarioPonto.js",
              "src/services/Ponto/ajusteHorarioPontoService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Ponto/AjustarHorario",
                "method": "patch",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "PATCH"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-PontoHorarioAjustar",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "PontoHorarioAjustarLambdaVersionsYky1pvtpnMkm4fxeGS88JwUX6lcFM6JSItl1l90rw"
        },
        "empresaInfo": {
          "handler": "src/handlers/Empresa/buscarEmpresa.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Empresa/buscarEmpresa.js",
              "src/services/Empresa/buscarEmpresaService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Empresa/Info",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-empresaInfo",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "EmpresaInfoLambdaVersionFuvzwwmtDLbb3m2nZQiOUwOTjZigyLOSEcn7yUvE"
        },
        "editarEmpresa": {
          "handler": "src/handlers/Empresa/editarEmpresa.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Empresa/editarEmpresa.js",
              "src/services/Empresa/editarEmpresaService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Empresa/Editar",
                "method": "patch",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "PATCH"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-editarEmpresa",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "EditarEmpresaLambdaVersionQaCZcxPBWycfzoUCfFKAg9WiWNrQTvm5lBSTCTXOsqQ"
        },
        "relatorioPonto": {
          "handler": "src/handlers/Relatorios/relatorioPonto.handler",
          "layers": [
            "arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22"
          ],
          "package": {
            "include": [
              "src/handlers/Empresa/editarEmpresa.js",
              "src/services/Empresa/editarEmpresaService.js",
              "src/database/database.js"
            ]
          },
          "events": [
            {
              "http": {
                "path": "Relatorio/Ponto",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:5173",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Access-Control-Allow-Origin",
                    "Access-Control-Allow-Methods",
                    "Access-Control-Allow-Headers"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "Backend-dev-relatorioPonto",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "RelatorioPontoLambdaVersionN3nDpyNqtLGULsahPswfFKgUf9NcAEfTZws4FoDCQcI"
        }
      },
      "package": {
        "exclude": [
          "node_modules/**",
          "mocks/**",
          "nodejs/**"
        ],
        "artifactsS3KeyDirname": "serverless/Backend/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
        "artifact": "C:\\APIS\\Serverless\\BACKEND\\.serverless\\Backend.zip",
        "artifactDirectoryName": "serverless/Backend/dev/1736983478698-2025-01-15T23:24:38.698Z"
      },
      "custom": {
        "stage": "dev",
        "webpack": {
          "includeModules": false,
          "packager": "npm",
          "webpackConfig": "./webpack.config.js"
        }
      }
    },
    "serviceRawFile": "service: Backend # Nome do seu serviço\r\n\r\nuseDotenv: true\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: sa-east-1 # Região desejada\r\n  environment:\r\n    JWT_SECRET: ${env:JWT_SECRET}\r\n    DB_HOST: ${env:DB_HOST}\r\n    DB_USER: ${env:DB_USER}\r\n    DB_PWD: ${env:DB_PWD}\r\n    DB_PORT: ${env:DB_PORT}\r\n    CLIENT_ID: ${env:CLIENT_ID}\r\n    CLIENT_SECRET: ${env:CLIENT_SECRET}\r\n    POOL_ID: ${env:POOL_ID}\r\n    ORIGIN: ${env:ORIGIN}\r\n    NODE_PATH: \"./:/opt/node20/node_modules\"\r\n  iamRoleStatements:\r\n    - Effect: \"Allow\"\r\n      Action:\r\n        - \"cognito-idp:AdminInitiateAuth\"\r\n      Resource: \r\n        - \"arn:aws:cognito-idp:sa-east-1:717626617280:userpool/${env:POOL_ID}\"\r\n     \r\n\r\nplugins:\r\n  - serverless-dotenv-plugin\r\n  - serverless-pseudo-parameters\r\n\r\n\r\n\r\n\r\nfunctions:\r\n  Funcoes:\r\n    handler: src/handlers/funcoes/listarFuncoes.handler\r\n    package:\r\n      include:\r\n        - src/handlers/funcoes/listarFuncoes.js\r\n        - src/services/Funcoes/listarFuncoesService.js\r\n        - src/database/database.js\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    events:\r\n      - http:\r\n          path: /Funcoes/Listar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN} # Usa o valor definido no .env\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n          response:\r\n            headers:\r\n              Content-Type: \"'application/json'\"\r\n              Access-Control-Allow-Origin: \"'${env:ORIGIN}'\" # Referência ao valor do .env\r\n              Access-Control-Allow-Methods: \"'GET,OPTIONS'\"\r\n              Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Requested-With'\"\r\n            statusCodes:\r\n              200:\r\n                pattern: ''\r\n              401:\r\n                pattern: '.*Unauthorized.*'\r\n              403:\r\n                pattern: '.*Forbidden.*'\r\n  \r\n  atualizarFuncoes:\r\n    handler: src/handlers/funcoes/editarFuncao.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n\r\n     include:\r\n        - src/handlers/funcoes/editarFuncao.js\r\n        - src/services/Funcoes/editarFuncaoService.js\r\n        - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcoes/Editar\r\n          method: patch\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  idFuncoes:\r\n    handler: src/handlers/funcoes/idFuncao.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n\r\n     include:\r\n        - src/handlers/funcoes/idFuncao.js\r\n        - src/services/Funcoes/idFuncaoService.js\r\n        - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcoes/Info\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n  \r\n\r\n   \r\n  \r\n  excluirFuncoes:\r\n    handler: src/handlers/funcoes/excluirFuncao.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/funcoes/excluirFuncao.js\r\n         - src/services/funcoes/excluirFuncaoService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcoes/Excluir\r\n          method: delete\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n\r\n  inserirFuncoes:\r\n    handler: src/handlers/funcoes/inserirFuncao.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n \r\n     include:\r\n         - src/handlers/funcoes/inserirFuncao.js\r\n         - src/services/funcoes/inserirFuncaoService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcoes/Inserir\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n  \r\n  Funcionarios:\r\n    handler: src/handlers/Funcionarios/autocompleteFuncionariosHandler.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/Funcionarios/autocompleteFuncionariosHandler.js\r\n         - src/services/Funcionarios/autocompleteFuncionarios.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/Listar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  editarFuncionarios:\r\n    handler: src/handlers/Funcionarios/editarFuncionarios.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/Funcionarios/editarFuncionarios.js\r\n         - src/services/Funcionarios/editarFuncionarioService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/{id}/editar\r\n          method: patch\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  cadastrarFuncionarios:\r\n    handler: src/handlers/Funcionarios/cadastrarFuncionarios.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/Funcionarios/cadastrarFuncionarios.js\r\n         - src/services/Funcionarios/cadastrarFuncionariosService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/Cadastrar\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  \r\n\r\n  filtrarFuncionarios:\r\n    handler: src/handlers/Funcionarios/listarFuncionarios.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n\r\n     include:\r\n         - src/handlers/Funcionarios/listarFuncionarios.js\r\n         - src/services/Funcionarios/listarFuncionariosService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/Filtrar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  excluirFuncionario:\r\n    handler: src/handlers/Funcionarios/excluirFuncionarios.handler # Corrigido o nome\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n    \r\n     include:\r\n         - src/handlers/Funcionarios/excluirFuncionarios.js\r\n         - src/services/Funcionarios/excluirFuncionariosService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/{id}/excluir\r\n          method: delete\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  idFuncionarios:\r\n    handler: src/handlers/Funcionarios/idFuncionarios.handler # Corrigido o nome\r\n    layers:\r\n     - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/Funcionarios/idFuncionarios.js\r\n         - src/services/Funcionarios/idFuncionariosService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Funcionarios/{id}/editar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  RegistrarUsuario:\r\n    handler: src/handlers/users/registro.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n    \r\n     include:\r\n         - src/handlers/users/registro.js\r\n         - src/services/Usuarios/registroService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /User/Add\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n \r\n  ValidarUsuario:\r\n    handler: src/handlers/users/codigoUser.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/users/codigoUser.js\r\n         - src/services/Usuarios/codigoUserService.js\r\n     \r\n    events:\r\n      - http:\r\n          path: /User/Validar\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  userEmpresa:\r\n    handler: src/handlers/users/empresa.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/users/empresa.js\r\n         - src/services/Usuarios/empresa.js\r\n     \r\n    events:\r\n      - http:\r\n          path: /User/Empresa\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  cadastrarUserEmpresa:\r\n    handler: src/handlers/users/usuarioEmpresa.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n         - src/handlers/users/codigoUser.js\r\n         - src/services/Usuarios/codigoUserService.js\r\n     \r\n    events:\r\n      - http:\r\n          path: /User/Email\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n\r\n\r\n\r\n  Login:\r\n    handler: src/handlers/users/login.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n    \r\n     include:\r\n         - src/handlers/users/login.js\r\n         - src/services/Usuarios/loginService.js\r\n        \r\n    events:\r\n      - http:\r\n          path: /User/Login\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  Logout:\r\n    handler: src/handlers/users/login.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n    \r\n     include:\r\n         - src/handlers/users/login.js\r\n         - src/services/Usuarios/loginService.js\r\n        \r\n    events:\r\n      - http:\r\n          path: /User/Logout\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n  \r\n  buscarPonto:\r\n    handler: src/handlers/Ponto/buscarPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n\r\n     include:\r\n         - src/handlers/Ponto/buscarPonto.js\r\n         - src/services/Ponto/consultaPontoService.js\r\n         - src/services/Ponto/jornadaInfoService.js\r\n         - src/services/Ponto/calculoBancoHoras.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/Buscar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n  \r\n  loginPonto:\r\n    handler: src/handlers/users/loginPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/users/login.js\r\n         - src/services/Usuarios/loginService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /User/loginPonto\r\n          method: post\r\n          cors:\r\n            origin: https://registrodepontocontroltek.netlify.app\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n  \r\n  baterPonto:\r\n    handler: src/handlers/Ponto/baterPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/Ponto/baterPonto.js\r\n         - src/services/Ponto/baterPontoService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/Registrar\r\n          method: post\r\n          cors:\r\n            origin: https://registrodepontocontroltek.netlify.app\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n\r\n  PontoFacial:\r\n    handler: src/handlers/Ponto/baterPontoFacial.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/Ponto/baterPontoFacial.js\r\n         - src/services/Ponto/baterPontoFacialService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/RegistrarFacial\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n\r\n  PontoFuncionario:\r\n    handler: src/handlers/Ponto/identificarFuncionario.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/Ponto/identificarFuncionario.js\r\n         - src/services/Ponto/idFuncionarioCodigo.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/Identificar\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  PontoAjustar:\r\n    handler: src/handlers/Ponto/ajusteDiaPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/Ponto/ajusteDiaPonto.js\r\n         - src/services/Ponto/ajusteDiaPontoService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/AjustarDia\r\n          method: post\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n\r\n  PontoHorarioAjustar:\r\n    handler: src/handlers/Ponto/ajusteHorarioPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n   \r\n     include:\r\n         - src/handlers/Ponto/ajusteHorarioPonto.js\r\n         - src/services/Ponto/ajusteHorarioPontoService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Ponto/AjustarHorario\r\n          method: patch\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers \r\n\r\n\r\n  \r\n  empresaInfo:\r\n    handler: src/handlers/Empresa/buscarEmpresa.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n     \r\n     include:\r\n         - src/handlers/Empresa/buscarEmpresa.js\r\n         - src/services/Empresa/buscarEmpresaService.js\r\n         - src/database/database.js\r\n    events:\r\n      - http:\r\n          path: /Empresa/Info\r\n          method: get\r\n          cors:\r\n            origin: ${env:ORIGIN}\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - Access-Control-Allow-Origin\r\n              - Access-Control-Allow-Methods\r\n              - Access-Control-Allow-Headers\r\n\r\n  editarEmpresa:\r\n    handler: src/handlers/Empresa/editarEmpresa.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n        - src/handlers/Empresa/editarEmpresa.js\r\n        - src/services/Empresa/editarEmpresaService.js\r\n        - src/database/database.js  # Inclui somente os arquivos necessários\r\n    events:\r\n     - http:\r\n        path: /Empresa/Editar\r\n        method: patch\r\n        cors:\r\n          origin: ${env:ORIGIN}\r\n          headers:\r\n            - Content-Type\r\n            - Authorization\r\n            - X-Requested-With\r\n            - Access-Control-Allow-Origin\r\n            - Access-Control-Allow-Methods\r\n            - Access-Control-Allow-Headers\r\n\r\n\r\n  relatorioPonto:\r\n    handler: src/handlers/Relatorios/relatorioPonto.handler\r\n    layers:\r\n      - arn:aws:lambda:sa-east-1:717626617280:layer:nodeModules:22\r\n    package:\r\n  \r\n     include:\r\n        - src/handlers/Empresa/editarEmpresa.js\r\n        - src/services/Empresa/editarEmpresaService.js\r\n        - src/database/database.js  # Inclui somente os arquivos necessários\r\n    events:\r\n     - http:\r\n        path: /Relatorio/Ponto\r\n        method: get\r\n        cors:\r\n          origin: ${env:ORIGIN}\r\n          headers:\r\n            - Content-Type\r\n            - Authorization\r\n            - X-Requested-With\r\n            - Access-Control-Allow-Origin\r\n            - Access-Control-Allow-Methods\r\n            - Access-Control-Allow-Headers\r\n\r\n\r\npackage:\r\n  exclude:\r\n   - node_modules/**\r\n   - mocks/**\r\n   - nodejs/**\r\n   \r\n   \r\n\r\n\r\n\r\ncustom:\r\n  stage: ${opt:stage, 'dev'}\r\n \r\n  \r\n  webpack:\r\n    includeModules: false\r\n    packager: 'npm'\r\n    webpackConfig: './webpack.config.js' # Aponta para o arquivo de configuração do Webpack\r\n    \r\n\r\n\r\n",
    "command": [
      "deploy"
    ],
    "options": {
      "stage": "dev"
    },
    "error": null,
    "params": {},
    "machineId": "4e3108e0bcd6a773a72522e69a5b9d54",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "5f676be9-4363-451a-80fe-231680b801f5",
    "orgName": "kilberty",
    "userId": "426htdtd7mV0Gj65ld",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "kilberty",
    "subscription": null,
    "userEmail": "kilberty1995@gmail.com",
    "serviceProviderAwsRegion": "sa-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "717626617280",
    "projectType": "traditional",
    "versionSf": "4.4.19",
    "serviceProviderAwsCfStackName": "Backend-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:sa-east-1:717626617280:stack/Backend-dev/ad25f9d0-9f72-11ef-9093-06a96d2363eb",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:sa-east-1:717626617280:stack/Backend-dev/ad25f9d0-9f72-11ef-9093-06a96d2363eb",
    "serviceProviderAwsCfStackCreated": "2024-11-10T14:47:15.318Z",
    "serviceProviderAwsCfStackUpdated": "2025-01-15T23:24:41.092Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "LogoutLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-Logout:14",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-LogoutLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UserEmpresaLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-userEmpresa:35",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-UserEmpresaLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "IdFuncoesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-idFuncoes:17",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-IdFuncoesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AtualizarFuncoesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-atualizarFuncoes:117",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-AtualizarFuncoesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CadastrarUserEmpresaLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-cadastrarUserEmpresa:30",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-CadastrarUserEmpresaLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "BaterPontoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-baterPonto:145",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-BaterPontoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "InserirFuncoesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-inserirFuncoes:124",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-InserirFuncoesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ExcluirFuncoesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-excluirFuncoes:112",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-ExcluirFuncoesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PontoAjustarLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-PontoAjustar:46",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-PontoAjustarLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "EditarEmpresaLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-editarEmpresa:113",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-EditarEmpresaLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-sa-east-1-9ef8254d-e9ce",
        "ExportName": "sls-Backend-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "ValidarUsuarioLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-ValidarUsuario:192",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-ValidarUsuarioLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "EmpresaInfoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-empresaInfo:129",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-EmpresaInfoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginPontoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-loginPonto:131",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-LoginPontoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "BuscarPontoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-buscarPonto:147",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-BuscarPontoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "EditarFuncionariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-editarFuncionarios:119",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-EditarFuncionariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CadastrarFuncionariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-cadastrarFuncionarios:157",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-CadastrarFuncionariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "FuncoesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-Funcoes:215",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-FuncoesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "FuncionariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-Funcionarios:203",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-FuncionariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ExcluirFuncionarioLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-excluirFuncionario:146",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-ExcluirFuncionarioLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PontoFacialLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-PontoFacial:55",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-PontoFacialLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "RegistrarUsuarioLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-RegistrarUsuario:197",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-RegistrarUsuarioLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PontoFuncionarioLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-PontoFuncionario:53",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-PontoFuncionarioLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "FiltrarFuncionariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-filtrarFuncionarios:161",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-FiltrarFuncionariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PontoHorarioAjustarLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-PontoHorarioAjustar:45",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-PontoHorarioAjustarLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "RelatorioPontoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-relatorioPonto:16",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-RelatorioPontoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "IdFuncionariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-idFuncionarios:165",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-IdFuncionariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:sa-east-1:717626617280:function:Backend-dev-Login:187",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-LoginLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://gndfw9o6r9.execute-api.sa-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-Backend-dev-ServiceEndpoint"
      }
    ]
  }
}